// source: Bonus.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var Player_pb = require('./Player_pb.js');
goog.object.extend(proto, Player_pb);
var Resource_pb = require('./Resource_pb.js');
goog.object.extend(proto, Resource_pb);
goog.exportSymbol('proto.PbModel.Bonus.BonusGetGoodsInfoReq', null, global);
goog.exportSymbol('proto.PbModel.Bonus.BonusGetGoodsInfoRes', null, global);
goog.exportSymbol('proto.PbModel.Bonus.BonusGetInfoReq', null, global);
goog.exportSymbol('proto.PbModel.Bonus.BonusGetInfoRes', null, global);
goog.exportSymbol('proto.PbModel.Bonus.BonusGetItemReq', null, global);
goog.exportSymbol('proto.PbModel.Bonus.BonusGetItemRes', null, global);
goog.exportSymbol('proto.PbModel.Bonus.BonusGetNotSendInfoReq', null, global);
goog.exportSymbol('proto.PbModel.Bonus.BonusGetNotSendInfoRes', null, global);
goog.exportSymbol('proto.PbModel.Bonus.BonusGoodsItem', null, global);
goog.exportSymbol('proto.PbModel.Bonus.BonusNotSendItem', null, global);
goog.exportSymbol('proto.PbModel.Bonus.BonusPushLeftNumRes', null, global);
goog.exportSymbol('proto.PbModel.Bonus.BonusPushSendRes', null, global);
goog.exportSymbol('proto.PbModel.Bonus.BonusPushTaskRewardRes', null, global);
goog.exportSymbol('proto.PbModel.Bonus.BonusReceiveAchieveReq', null, global);
goog.exportSymbol('proto.PbModel.Bonus.BonusReceiveAchieveRes', null, global);
goog.exportSymbol('proto.PbModel.Bonus.BonusReceiveAllModel', null, global);
goog.exportSymbol('proto.PbModel.Bonus.BonusReceiveAllReq', null, global);
goog.exportSymbol('proto.PbModel.Bonus.BonusReceiveAllRes', null, global);
goog.exportSymbol('proto.PbModel.Bonus.BonusReceiveItem', null, global);
goog.exportSymbol('proto.PbModel.Bonus.BonusReceiveReq', null, global);
goog.exportSymbol('proto.PbModel.Bonus.BonusReceiveRes', null, global);
goog.exportSymbol('proto.PbModel.Bonus.BonusSendAllReq', null, global);
goog.exportSymbol('proto.PbModel.Bonus.BonusSendAllRes', null, global);
goog.exportSymbol('proto.PbModel.Bonus.BonusSendItem', null, global);
goog.exportSymbol('proto.PbModel.Bonus.BonusSendReq', null, global);
goog.exportSymbol('proto.PbModel.Bonus.BonusSendRes', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Bonus.BonusGetInfoReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Bonus.BonusGetInfoReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Bonus.BonusGetInfoReq.displayName = 'proto.PbModel.Bonus.BonusGetInfoReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Bonus.BonusGetInfoRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.Bonus.BonusGetInfoRes.repeatedFields_, null);
};
goog.inherits(proto.PbModel.Bonus.BonusGetInfoRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Bonus.BonusGetInfoRes.displayName = 'proto.PbModel.Bonus.BonusGetInfoRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Bonus.BonusSendItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.Bonus.BonusSendItem.repeatedFields_, null);
};
goog.inherits(proto.PbModel.Bonus.BonusSendItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Bonus.BonusSendItem.displayName = 'proto.PbModel.Bonus.BonusSendItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Bonus.BonusReceiveItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Bonus.BonusReceiveItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Bonus.BonusReceiveItem.displayName = 'proto.PbModel.Bonus.BonusReceiveItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Bonus.BonusGetGoodsInfoReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Bonus.BonusGetGoodsInfoReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Bonus.BonusGetGoodsInfoReq.displayName = 'proto.PbModel.Bonus.BonusGetGoodsInfoReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Bonus.BonusGetGoodsInfoRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.Bonus.BonusGetGoodsInfoRes.repeatedFields_, null);
};
goog.inherits(proto.PbModel.Bonus.BonusGetGoodsInfoRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Bonus.BonusGetGoodsInfoRes.displayName = 'proto.PbModel.Bonus.BonusGetGoodsInfoRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Bonus.BonusGoodsItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Bonus.BonusGoodsItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Bonus.BonusGoodsItem.displayName = 'proto.PbModel.Bonus.BonusGoodsItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Bonus.BonusGetItemReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Bonus.BonusGetItemReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Bonus.BonusGetItemReq.displayName = 'proto.PbModel.Bonus.BonusGetItemReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Bonus.BonusGetItemRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Bonus.BonusGetItemRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Bonus.BonusGetItemRes.displayName = 'proto.PbModel.Bonus.BonusGetItemRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Bonus.BonusGetNotSendInfoReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Bonus.BonusGetNotSendInfoReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Bonus.BonusGetNotSendInfoReq.displayName = 'proto.PbModel.Bonus.BonusGetNotSendInfoReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Bonus.BonusGetNotSendInfoRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.Bonus.BonusGetNotSendInfoRes.repeatedFields_, null);
};
goog.inherits(proto.PbModel.Bonus.BonusGetNotSendInfoRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Bonus.BonusGetNotSendInfoRes.displayName = 'proto.PbModel.Bonus.BonusGetNotSendInfoRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Bonus.BonusNotSendItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Bonus.BonusNotSendItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Bonus.BonusNotSendItem.displayName = 'proto.PbModel.Bonus.BonusNotSendItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Bonus.BonusReceiveReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Bonus.BonusReceiveReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Bonus.BonusReceiveReq.displayName = 'proto.PbModel.Bonus.BonusReceiveReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Bonus.BonusReceiveRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Bonus.BonusReceiveRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Bonus.BonusReceiveRes.displayName = 'proto.PbModel.Bonus.BonusReceiveRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Bonus.BonusReceiveAchieveReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Bonus.BonusReceiveAchieveReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Bonus.BonusReceiveAchieveReq.displayName = 'proto.PbModel.Bonus.BonusReceiveAchieveReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Bonus.BonusReceiveAchieveRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Bonus.BonusReceiveAchieveRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Bonus.BonusReceiveAchieveRes.displayName = 'proto.PbModel.Bonus.BonusReceiveAchieveRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Bonus.BonusSendReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Bonus.BonusSendReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Bonus.BonusSendReq.displayName = 'proto.PbModel.Bonus.BonusSendReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Bonus.BonusSendRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Bonus.BonusSendRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Bonus.BonusSendRes.displayName = 'proto.PbModel.Bonus.BonusSendRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Bonus.BonusSendAllReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Bonus.BonusSendAllReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Bonus.BonusSendAllReq.displayName = 'proto.PbModel.Bonus.BonusSendAllReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Bonus.BonusSendAllRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Bonus.BonusSendAllRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Bonus.BonusSendAllRes.displayName = 'proto.PbModel.Bonus.BonusSendAllRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Bonus.BonusReceiveAllReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.Bonus.BonusReceiveAllReq.repeatedFields_, null);
};
goog.inherits(proto.PbModel.Bonus.BonusReceiveAllReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Bonus.BonusReceiveAllReq.displayName = 'proto.PbModel.Bonus.BonusReceiveAllReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Bonus.BonusReceiveAllRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.Bonus.BonusReceiveAllRes.repeatedFields_, null);
};
goog.inherits(proto.PbModel.Bonus.BonusReceiveAllRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Bonus.BonusReceiveAllRes.displayName = 'proto.PbModel.Bonus.BonusReceiveAllRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Bonus.BonusReceiveAllModel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Bonus.BonusReceiveAllModel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Bonus.BonusReceiveAllModel.displayName = 'proto.PbModel.Bonus.BonusReceiveAllModel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Bonus.BonusPushLeftNumRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Bonus.BonusPushLeftNumRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Bonus.BonusPushLeftNumRes.displayName = 'proto.PbModel.Bonus.BonusPushLeftNumRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Bonus.BonusPushSendRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Bonus.BonusPushSendRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Bonus.BonusPushSendRes.displayName = 'proto.PbModel.Bonus.BonusPushSendRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Bonus.BonusPushTaskRewardRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Bonus.BonusPushTaskRewardRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Bonus.BonusPushTaskRewardRes.displayName = 'proto.PbModel.Bonus.BonusPushTaskRewardRes';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Bonus.BonusGetInfoReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Bonus.BonusGetInfoReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Bonus.BonusGetInfoReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Bonus.BonusGetInfoReq.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Bonus.BonusGetInfoReq}
 */
proto.PbModel.Bonus.BonusGetInfoReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Bonus.BonusGetInfoReq;
  return proto.PbModel.Bonus.BonusGetInfoReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Bonus.BonusGetInfoReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Bonus.BonusGetInfoReq}
 */
proto.PbModel.Bonus.BonusGetInfoReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Bonus.BonusGetInfoReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Bonus.BonusGetInfoReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Bonus.BonusGetInfoReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Bonus.BonusGetInfoReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.Bonus.BonusGetInfoRes.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Bonus.BonusGetInfoRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Bonus.BonusGetInfoRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Bonus.BonusGetInfoRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Bonus.BonusGetInfoRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    dailyreceivenum: jspb.Message.getFieldWithDefault(msg, 1, 0),
    dailyreceivemoney: jspb.Message.getFieldWithDefault(msg, 2, 0),
    achievedictMap: (f = msg.getAchievedictMap()) ? f.toObject(includeInstance, undefined) : [],
    receiveachievedictMap: (f = msg.getReceiveachievedictMap()) ? f.toObject(includeInstance, undefined) : [],
    bonuslistList: jspb.Message.toObjectList(msg.getBonuslistList(),
    proto.PbModel.Bonus.BonusSendItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Bonus.BonusGetInfoRes}
 */
proto.PbModel.Bonus.BonusGetInfoRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Bonus.BonusGetInfoRes;
  return proto.PbModel.Bonus.BonusGetInfoRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Bonus.BonusGetInfoRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Bonus.BonusGetInfoRes}
 */
proto.PbModel.Bonus.BonusGetInfoRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDailyreceivenum(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDailyreceivemoney(value);
      break;
    case 3:
      var value = msg.getAchievedictMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readInt32, null, 0, 0);
         });
      break;
    case 4:
      var value = msg.getReceiveachievedictMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readString, null, 0, "");
         });
      break;
    case 5:
      var value = new proto.PbModel.Bonus.BonusSendItem;
      reader.readMessage(value,proto.PbModel.Bonus.BonusSendItem.deserializeBinaryFromReader);
      msg.addBonuslist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Bonus.BonusGetInfoRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Bonus.BonusGetInfoRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Bonus.BonusGetInfoRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Bonus.BonusGetInfoRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDailyreceivenum();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getDailyreceivemoney();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getAchievedictMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeInt32);
  }
  f = message.getReceiveachievedictMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getBonuslistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.PbModel.Bonus.BonusSendItem.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 DailyReceiveNum = 1;
 * @return {number}
 */
proto.PbModel.Bonus.BonusGetInfoRes.prototype.getDailyreceivenum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Bonus.BonusGetInfoRes} returns this
 */
proto.PbModel.Bonus.BonusGetInfoRes.prototype.setDailyreceivenum = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 DailyReceiveMoney = 2;
 * @return {number}
 */
proto.PbModel.Bonus.BonusGetInfoRes.prototype.getDailyreceivemoney = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Bonus.BonusGetInfoRes} returns this
 */
proto.PbModel.Bonus.BonusGetInfoRes.prototype.setDailyreceivemoney = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * map<int32, int32> AchieveDict = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,number>}
 */
proto.PbModel.Bonus.BonusGetInfoRes.prototype.getAchievedictMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,number>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.PbModel.Bonus.BonusGetInfoRes} returns this
 */
proto.PbModel.Bonus.BonusGetInfoRes.prototype.clearAchievedictMap = function() {
  this.getAchievedictMap().clear();
  return this;};


/**
 * map<int32, string> ReceiveAchieveDict = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,string>}
 */
proto.PbModel.Bonus.BonusGetInfoRes.prototype.getReceiveachievedictMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,string>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.PbModel.Bonus.BonusGetInfoRes} returns this
 */
proto.PbModel.Bonus.BonusGetInfoRes.prototype.clearReceiveachievedictMap = function() {
  this.getReceiveachievedictMap().clear();
  return this;};


/**
 * repeated BonusSendItem BonusList = 5;
 * @return {!Array<!proto.PbModel.Bonus.BonusSendItem>}
 */
proto.PbModel.Bonus.BonusGetInfoRes.prototype.getBonuslistList = function() {
  return /** @type{!Array<!proto.PbModel.Bonus.BonusSendItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.Bonus.BonusSendItem, 5));
};


/**
 * @param {!Array<!proto.PbModel.Bonus.BonusSendItem>} value
 * @return {!proto.PbModel.Bonus.BonusGetInfoRes} returns this
*/
proto.PbModel.Bonus.BonusGetInfoRes.prototype.setBonuslistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.PbModel.Bonus.BonusSendItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.Bonus.BonusSendItem}
 */
proto.PbModel.Bonus.BonusGetInfoRes.prototype.addBonuslist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.PbModel.Bonus.BonusSendItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.Bonus.BonusGetInfoRes} returns this
 */
proto.PbModel.Bonus.BonusGetInfoRes.prototype.clearBonuslistList = function() {
  return this.setBonuslistList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.Bonus.BonusSendItem.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Bonus.BonusSendItem.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Bonus.BonusSendItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Bonus.BonusSendItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Bonus.BonusSendItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    entityid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    playerinfo: (f = msg.getPlayerinfo()) && Player_pb.PlayerCommonInfoRes.toObject(includeInstance, f),
    expiretime: jspb.Message.getFieldWithDefault(msg, 3, 0),
    bonusmodelid: jspb.Message.getFieldWithDefault(msg, 4, 0),
    isreceive: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    bonusreceivelistList: jspb.Message.toObjectList(msg.getBonusreceivelistList(),
    proto.PbModel.Bonus.BonusReceiveItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Bonus.BonusSendItem}
 */
proto.PbModel.Bonus.BonusSendItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Bonus.BonusSendItem;
  return proto.PbModel.Bonus.BonusSendItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Bonus.BonusSendItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Bonus.BonusSendItem}
 */
proto.PbModel.Bonus.BonusSendItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEntityid(value);
      break;
    case 2:
      var value = new Player_pb.PlayerCommonInfoRes;
      reader.readMessage(value,Player_pb.PlayerCommonInfoRes.deserializeBinaryFromReader);
      msg.setPlayerinfo(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setExpiretime(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBonusmodelid(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsreceive(value);
      break;
    case 6:
      var value = new proto.PbModel.Bonus.BonusReceiveItem;
      reader.readMessage(value,proto.PbModel.Bonus.BonusReceiveItem.deserializeBinaryFromReader);
      msg.addBonusreceivelist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Bonus.BonusSendItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Bonus.BonusSendItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Bonus.BonusSendItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Bonus.BonusSendItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntityid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPlayerinfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      Player_pb.PlayerCommonInfoRes.serializeBinaryToWriter
    );
  }
  f = message.getExpiretime();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getBonusmodelid();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getIsreceive();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getBonusreceivelistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.PbModel.Bonus.BonusReceiveItem.serializeBinaryToWriter
    );
  }
};


/**
 * optional string EntityId = 1;
 * @return {string}
 */
proto.PbModel.Bonus.BonusSendItem.prototype.getEntityid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Bonus.BonusSendItem} returns this
 */
proto.PbModel.Bonus.BonusSendItem.prototype.setEntityid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional PbModel.Player.PlayerCommonInfoRes PlayerInfo = 2;
 * @return {?proto.PbModel.Player.PlayerCommonInfoRes}
 */
proto.PbModel.Bonus.BonusSendItem.prototype.getPlayerinfo = function() {
  return /** @type{?proto.PbModel.Player.PlayerCommonInfoRes} */ (
    jspb.Message.getWrapperField(this, Player_pb.PlayerCommonInfoRes, 2));
};


/**
 * @param {?proto.PbModel.Player.PlayerCommonInfoRes|undefined} value
 * @return {!proto.PbModel.Bonus.BonusSendItem} returns this
*/
proto.PbModel.Bonus.BonusSendItem.prototype.setPlayerinfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.Bonus.BonusSendItem} returns this
 */
proto.PbModel.Bonus.BonusSendItem.prototype.clearPlayerinfo = function() {
  return this.setPlayerinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.Bonus.BonusSendItem.prototype.hasPlayerinfo = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int64 ExpireTime = 3;
 * @return {number}
 */
proto.PbModel.Bonus.BonusSendItem.prototype.getExpiretime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Bonus.BonusSendItem} returns this
 */
proto.PbModel.Bonus.BonusSendItem.prototype.setExpiretime = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 BonusModelId = 4;
 * @return {number}
 */
proto.PbModel.Bonus.BonusSendItem.prototype.getBonusmodelid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Bonus.BonusSendItem} returns this
 */
proto.PbModel.Bonus.BonusSendItem.prototype.setBonusmodelid = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bool IsReceive = 5;
 * @return {boolean}
 */
proto.PbModel.Bonus.BonusSendItem.prototype.getIsreceive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PbModel.Bonus.BonusSendItem} returns this
 */
proto.PbModel.Bonus.BonusSendItem.prototype.setIsreceive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * repeated BonusReceiveItem BonusReceiveList = 6;
 * @return {!Array<!proto.PbModel.Bonus.BonusReceiveItem>}
 */
proto.PbModel.Bonus.BonusSendItem.prototype.getBonusreceivelistList = function() {
  return /** @type{!Array<!proto.PbModel.Bonus.BonusReceiveItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.Bonus.BonusReceiveItem, 6));
};


/**
 * @param {!Array<!proto.PbModel.Bonus.BonusReceiveItem>} value
 * @return {!proto.PbModel.Bonus.BonusSendItem} returns this
*/
proto.PbModel.Bonus.BonusSendItem.prototype.setBonusreceivelistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.PbModel.Bonus.BonusReceiveItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.Bonus.BonusReceiveItem}
 */
proto.PbModel.Bonus.BonusSendItem.prototype.addBonusreceivelist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.PbModel.Bonus.BonusReceiveItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.Bonus.BonusSendItem} returns this
 */
proto.PbModel.Bonus.BonusSendItem.prototype.clearBonusreceivelistList = function() {
  return this.setBonusreceivelistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Bonus.BonusReceiveItem.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Bonus.BonusReceiveItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Bonus.BonusReceiveItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Bonus.BonusReceiveItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    playerinfo: (f = msg.getPlayerinfo()) && Player_pb.PlayerCommonInfoRes.toObject(includeInstance, f),
    money: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Bonus.BonusReceiveItem}
 */
proto.PbModel.Bonus.BonusReceiveItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Bonus.BonusReceiveItem;
  return proto.PbModel.Bonus.BonusReceiveItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Bonus.BonusReceiveItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Bonus.BonusReceiveItem}
 */
proto.PbModel.Bonus.BonusReceiveItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new Player_pb.PlayerCommonInfoRes;
      reader.readMessage(value,Player_pb.PlayerCommonInfoRes.deserializeBinaryFromReader);
      msg.setPlayerinfo(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMoney(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Bonus.BonusReceiveItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Bonus.BonusReceiveItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Bonus.BonusReceiveItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Bonus.BonusReceiveItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlayerinfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      Player_pb.PlayerCommonInfoRes.serializeBinaryToWriter
    );
  }
  f = message.getMoney();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional PbModel.Player.PlayerCommonInfoRes PlayerInfo = 1;
 * @return {?proto.PbModel.Player.PlayerCommonInfoRes}
 */
proto.PbModel.Bonus.BonusReceiveItem.prototype.getPlayerinfo = function() {
  return /** @type{?proto.PbModel.Player.PlayerCommonInfoRes} */ (
    jspb.Message.getWrapperField(this, Player_pb.PlayerCommonInfoRes, 1));
};


/**
 * @param {?proto.PbModel.Player.PlayerCommonInfoRes|undefined} value
 * @return {!proto.PbModel.Bonus.BonusReceiveItem} returns this
*/
proto.PbModel.Bonus.BonusReceiveItem.prototype.setPlayerinfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.Bonus.BonusReceiveItem} returns this
 */
proto.PbModel.Bonus.BonusReceiveItem.prototype.clearPlayerinfo = function() {
  return this.setPlayerinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.Bonus.BonusReceiveItem.prototype.hasPlayerinfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 Money = 2;
 * @return {number}
 */
proto.PbModel.Bonus.BonusReceiveItem.prototype.getMoney = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Bonus.BonusReceiveItem} returns this
 */
proto.PbModel.Bonus.BonusReceiveItem.prototype.setMoney = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Bonus.BonusGetGoodsInfoReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Bonus.BonusGetGoodsInfoReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Bonus.BonusGetGoodsInfoReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Bonus.BonusGetGoodsInfoReq.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Bonus.BonusGetGoodsInfoReq}
 */
proto.PbModel.Bonus.BonusGetGoodsInfoReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Bonus.BonusGetGoodsInfoReq;
  return proto.PbModel.Bonus.BonusGetGoodsInfoReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Bonus.BonusGetGoodsInfoReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Bonus.BonusGetGoodsInfoReq}
 */
proto.PbModel.Bonus.BonusGetGoodsInfoReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Bonus.BonusGetGoodsInfoReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Bonus.BonusGetGoodsInfoReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Bonus.BonusGetGoodsInfoReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Bonus.BonusGetGoodsInfoReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.Bonus.BonusGetGoodsInfoRes.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Bonus.BonusGetGoodsInfoRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Bonus.BonusGetGoodsInfoRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Bonus.BonusGetGoodsInfoRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Bonus.BonusGetGoodsInfoRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    goodslistList: jspb.Message.toObjectList(msg.getGoodslistList(),
    proto.PbModel.Bonus.BonusGoodsItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Bonus.BonusGetGoodsInfoRes}
 */
proto.PbModel.Bonus.BonusGetGoodsInfoRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Bonus.BonusGetGoodsInfoRes;
  return proto.PbModel.Bonus.BonusGetGoodsInfoRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Bonus.BonusGetGoodsInfoRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Bonus.BonusGetGoodsInfoRes}
 */
proto.PbModel.Bonus.BonusGetGoodsInfoRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PbModel.Bonus.BonusGoodsItem;
      reader.readMessage(value,proto.PbModel.Bonus.BonusGoodsItem.deserializeBinaryFromReader);
      msg.addGoodslist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Bonus.BonusGetGoodsInfoRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Bonus.BonusGetGoodsInfoRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Bonus.BonusGetGoodsInfoRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Bonus.BonusGetGoodsInfoRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGoodslistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.PbModel.Bonus.BonusGoodsItem.serializeBinaryToWriter
    );
  }
};


/**
 * repeated BonusGoodsItem GoodsList = 1;
 * @return {!Array<!proto.PbModel.Bonus.BonusGoodsItem>}
 */
proto.PbModel.Bonus.BonusGetGoodsInfoRes.prototype.getGoodslistList = function() {
  return /** @type{!Array<!proto.PbModel.Bonus.BonusGoodsItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.Bonus.BonusGoodsItem, 1));
};


/**
 * @param {!Array<!proto.PbModel.Bonus.BonusGoodsItem>} value
 * @return {!proto.PbModel.Bonus.BonusGetGoodsInfoRes} returns this
*/
proto.PbModel.Bonus.BonusGetGoodsInfoRes.prototype.setGoodslistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.PbModel.Bonus.BonusGoodsItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.Bonus.BonusGoodsItem}
 */
proto.PbModel.Bonus.BonusGetGoodsInfoRes.prototype.addGoodslist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.PbModel.Bonus.BonusGoodsItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.Bonus.BonusGetGoodsInfoRes} returns this
 */
proto.PbModel.Bonus.BonusGetGoodsInfoRes.prototype.clearGoodslistList = function() {
  return this.setGoodslistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Bonus.BonusGoodsItem.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Bonus.BonusGoodsItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Bonus.BonusGoodsItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Bonus.BonusGoodsItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    entityid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    modelid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    expiretime: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Bonus.BonusGoodsItem}
 */
proto.PbModel.Bonus.BonusGoodsItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Bonus.BonusGoodsItem;
  return proto.PbModel.Bonus.BonusGoodsItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Bonus.BonusGoodsItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Bonus.BonusGoodsItem}
 */
proto.PbModel.Bonus.BonusGoodsItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEntityid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setModelid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setExpiretime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Bonus.BonusGoodsItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Bonus.BonusGoodsItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Bonus.BonusGoodsItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Bonus.BonusGoodsItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntityid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getModelid();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getExpiretime();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional string EntityId = 1;
 * @return {string}
 */
proto.PbModel.Bonus.BonusGoodsItem.prototype.getEntityid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Bonus.BonusGoodsItem} returns this
 */
proto.PbModel.Bonus.BonusGoodsItem.prototype.setEntityid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 ModelId = 2;
 * @return {number}
 */
proto.PbModel.Bonus.BonusGoodsItem.prototype.getModelid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Bonus.BonusGoodsItem} returns this
 */
proto.PbModel.Bonus.BonusGoodsItem.prototype.setModelid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 ExpireTime = 3;
 * @return {number}
 */
proto.PbModel.Bonus.BonusGoodsItem.prototype.getExpiretime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Bonus.BonusGoodsItem} returns this
 */
proto.PbModel.Bonus.BonusGoodsItem.prototype.setExpiretime = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Bonus.BonusGetItemReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Bonus.BonusGetItemReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Bonus.BonusGetItemReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Bonus.BonusGetItemReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    entityid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Bonus.BonusGetItemReq}
 */
proto.PbModel.Bonus.BonusGetItemReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Bonus.BonusGetItemReq;
  return proto.PbModel.Bonus.BonusGetItemReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Bonus.BonusGetItemReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Bonus.BonusGetItemReq}
 */
proto.PbModel.Bonus.BonusGetItemReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEntityid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Bonus.BonusGetItemReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Bonus.BonusGetItemReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Bonus.BonusGetItemReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Bonus.BonusGetItemReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntityid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string EntityId = 1;
 * @return {string}
 */
proto.PbModel.Bonus.BonusGetItemReq.prototype.getEntityid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Bonus.BonusGetItemReq} returns this
 */
proto.PbModel.Bonus.BonusGetItemReq.prototype.setEntityid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Bonus.BonusGetItemRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Bonus.BonusGetItemRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Bonus.BonusGetItemRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Bonus.BonusGetItemRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    bonusitem: (f = msg.getBonusitem()) && proto.PbModel.Bonus.BonusSendItem.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Bonus.BonusGetItemRes}
 */
proto.PbModel.Bonus.BonusGetItemRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Bonus.BonusGetItemRes;
  return proto.PbModel.Bonus.BonusGetItemRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Bonus.BonusGetItemRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Bonus.BonusGetItemRes}
 */
proto.PbModel.Bonus.BonusGetItemRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PbModel.Bonus.BonusSendItem;
      reader.readMessage(value,proto.PbModel.Bonus.BonusSendItem.deserializeBinaryFromReader);
      msg.setBonusitem(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Bonus.BonusGetItemRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Bonus.BonusGetItemRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Bonus.BonusGetItemRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Bonus.BonusGetItemRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBonusitem();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.PbModel.Bonus.BonusSendItem.serializeBinaryToWriter
    );
  }
};


/**
 * optional BonusSendItem BonusItem = 1;
 * @return {?proto.PbModel.Bonus.BonusSendItem}
 */
proto.PbModel.Bonus.BonusGetItemRes.prototype.getBonusitem = function() {
  return /** @type{?proto.PbModel.Bonus.BonusSendItem} */ (
    jspb.Message.getWrapperField(this, proto.PbModel.Bonus.BonusSendItem, 1));
};


/**
 * @param {?proto.PbModel.Bonus.BonusSendItem|undefined} value
 * @return {!proto.PbModel.Bonus.BonusGetItemRes} returns this
*/
proto.PbModel.Bonus.BonusGetItemRes.prototype.setBonusitem = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.Bonus.BonusGetItemRes} returns this
 */
proto.PbModel.Bonus.BonusGetItemRes.prototype.clearBonusitem = function() {
  return this.setBonusitem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.Bonus.BonusGetItemRes.prototype.hasBonusitem = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Bonus.BonusGetNotSendInfoReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Bonus.BonusGetNotSendInfoReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Bonus.BonusGetNotSendInfoReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Bonus.BonusGetNotSendInfoReq.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Bonus.BonusGetNotSendInfoReq}
 */
proto.PbModel.Bonus.BonusGetNotSendInfoReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Bonus.BonusGetNotSendInfoReq;
  return proto.PbModel.Bonus.BonusGetNotSendInfoReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Bonus.BonusGetNotSendInfoReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Bonus.BonusGetNotSendInfoReq}
 */
proto.PbModel.Bonus.BonusGetNotSendInfoReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Bonus.BonusGetNotSendInfoReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Bonus.BonusGetNotSendInfoReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Bonus.BonusGetNotSendInfoReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Bonus.BonusGetNotSendInfoReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.Bonus.BonusGetNotSendInfoRes.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Bonus.BonusGetNotSendInfoRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Bonus.BonusGetNotSendInfoRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Bonus.BonusGetNotSendInfoRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Bonus.BonusGetNotSendInfoRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    bonuslistList: jspb.Message.toObjectList(msg.getBonuslistList(),
    proto.PbModel.Bonus.BonusNotSendItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Bonus.BonusGetNotSendInfoRes}
 */
proto.PbModel.Bonus.BonusGetNotSendInfoRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Bonus.BonusGetNotSendInfoRes;
  return proto.PbModel.Bonus.BonusGetNotSendInfoRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Bonus.BonusGetNotSendInfoRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Bonus.BonusGetNotSendInfoRes}
 */
proto.PbModel.Bonus.BonusGetNotSendInfoRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PbModel.Bonus.BonusNotSendItem;
      reader.readMessage(value,proto.PbModel.Bonus.BonusNotSendItem.deserializeBinaryFromReader);
      msg.addBonuslist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Bonus.BonusGetNotSendInfoRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Bonus.BonusGetNotSendInfoRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Bonus.BonusGetNotSendInfoRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Bonus.BonusGetNotSendInfoRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBonuslistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.PbModel.Bonus.BonusNotSendItem.serializeBinaryToWriter
    );
  }
};


/**
 * repeated BonusNotSendItem BonusList = 1;
 * @return {!Array<!proto.PbModel.Bonus.BonusNotSendItem>}
 */
proto.PbModel.Bonus.BonusGetNotSendInfoRes.prototype.getBonuslistList = function() {
  return /** @type{!Array<!proto.PbModel.Bonus.BonusNotSendItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.Bonus.BonusNotSendItem, 1));
};


/**
 * @param {!Array<!proto.PbModel.Bonus.BonusNotSendItem>} value
 * @return {!proto.PbModel.Bonus.BonusGetNotSendInfoRes} returns this
*/
proto.PbModel.Bonus.BonusGetNotSendInfoRes.prototype.setBonuslistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.PbModel.Bonus.BonusNotSendItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.Bonus.BonusNotSendItem}
 */
proto.PbModel.Bonus.BonusGetNotSendInfoRes.prototype.addBonuslist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.PbModel.Bonus.BonusNotSendItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.Bonus.BonusGetNotSendInfoRes} returns this
 */
proto.PbModel.Bonus.BonusGetNotSendInfoRes.prototype.clearBonuslistList = function() {
  return this.setBonuslistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Bonus.BonusNotSendItem.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Bonus.BonusNotSendItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Bonus.BonusNotSendItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Bonus.BonusNotSendItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    playername: jspb.Message.getFieldWithDefault(msg, 1, ""),
    bonusmodelid: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Bonus.BonusNotSendItem}
 */
proto.PbModel.Bonus.BonusNotSendItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Bonus.BonusNotSendItem;
  return proto.PbModel.Bonus.BonusNotSendItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Bonus.BonusNotSendItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Bonus.BonusNotSendItem}
 */
proto.PbModel.Bonus.BonusNotSendItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlayername(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBonusmodelid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Bonus.BonusNotSendItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Bonus.BonusNotSendItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Bonus.BonusNotSendItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Bonus.BonusNotSendItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlayername();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBonusmodelid();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string PlayerName = 1;
 * @return {string}
 */
proto.PbModel.Bonus.BonusNotSendItem.prototype.getPlayername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Bonus.BonusNotSendItem} returns this
 */
proto.PbModel.Bonus.BonusNotSendItem.prototype.setPlayername = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 BonusModelId = 2;
 * @return {number}
 */
proto.PbModel.Bonus.BonusNotSendItem.prototype.getBonusmodelid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Bonus.BonusNotSendItem} returns this
 */
proto.PbModel.Bonus.BonusNotSendItem.prototype.setBonusmodelid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Bonus.BonusReceiveReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Bonus.BonusReceiveReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Bonus.BonusReceiveReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Bonus.BonusReceiveReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    entityid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Bonus.BonusReceiveReq}
 */
proto.PbModel.Bonus.BonusReceiveReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Bonus.BonusReceiveReq;
  return proto.PbModel.Bonus.BonusReceiveReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Bonus.BonusReceiveReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Bonus.BonusReceiveReq}
 */
proto.PbModel.Bonus.BonusReceiveReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEntityid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Bonus.BonusReceiveReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Bonus.BonusReceiveReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Bonus.BonusReceiveReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Bonus.BonusReceiveReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntityid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string EntityId = 1;
 * @return {string}
 */
proto.PbModel.Bonus.BonusReceiveReq.prototype.getEntityid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Bonus.BonusReceiveReq} returns this
 */
proto.PbModel.Bonus.BonusReceiveReq.prototype.setEntityid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Bonus.BonusReceiveRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Bonus.BonusReceiveRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Bonus.BonusReceiveRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Bonus.BonusReceiveRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    dailyreceivenum: jspb.Message.getFieldWithDefault(msg, 1, 0),
    dailyreceivemoney: jspb.Message.getFieldWithDefault(msg, 2, 0),
    money: jspb.Message.getFieldWithDefault(msg, 3, 0),
    bonusitem: (f = msg.getBonusitem()) && proto.PbModel.Bonus.BonusSendItem.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Bonus.BonusReceiveRes}
 */
proto.PbModel.Bonus.BonusReceiveRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Bonus.BonusReceiveRes;
  return proto.PbModel.Bonus.BonusReceiveRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Bonus.BonusReceiveRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Bonus.BonusReceiveRes}
 */
proto.PbModel.Bonus.BonusReceiveRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDailyreceivenum(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDailyreceivemoney(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMoney(value);
      break;
    case 4:
      var value = new proto.PbModel.Bonus.BonusSendItem;
      reader.readMessage(value,proto.PbModel.Bonus.BonusSendItem.deserializeBinaryFromReader);
      msg.setBonusitem(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Bonus.BonusReceiveRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Bonus.BonusReceiveRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Bonus.BonusReceiveRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Bonus.BonusReceiveRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDailyreceivenum();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getDailyreceivemoney();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getMoney();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getBonusitem();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.PbModel.Bonus.BonusSendItem.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 DailyReceiveNum = 1;
 * @return {number}
 */
proto.PbModel.Bonus.BonusReceiveRes.prototype.getDailyreceivenum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Bonus.BonusReceiveRes} returns this
 */
proto.PbModel.Bonus.BonusReceiveRes.prototype.setDailyreceivenum = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 DailyReceiveMoney = 2;
 * @return {number}
 */
proto.PbModel.Bonus.BonusReceiveRes.prototype.getDailyreceivemoney = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Bonus.BonusReceiveRes} returns this
 */
proto.PbModel.Bonus.BonusReceiveRes.prototype.setDailyreceivemoney = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 Money = 3;
 * @return {number}
 */
proto.PbModel.Bonus.BonusReceiveRes.prototype.getMoney = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Bonus.BonusReceiveRes} returns this
 */
proto.PbModel.Bonus.BonusReceiveRes.prototype.setMoney = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional BonusSendItem BonusItem = 4;
 * @return {?proto.PbModel.Bonus.BonusSendItem}
 */
proto.PbModel.Bonus.BonusReceiveRes.prototype.getBonusitem = function() {
  return /** @type{?proto.PbModel.Bonus.BonusSendItem} */ (
    jspb.Message.getWrapperField(this, proto.PbModel.Bonus.BonusSendItem, 4));
};


/**
 * @param {?proto.PbModel.Bonus.BonusSendItem|undefined} value
 * @return {!proto.PbModel.Bonus.BonusReceiveRes} returns this
*/
proto.PbModel.Bonus.BonusReceiveRes.prototype.setBonusitem = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.Bonus.BonusReceiveRes} returns this
 */
proto.PbModel.Bonus.BonusReceiveRes.prototype.clearBonusitem = function() {
  return this.setBonusitem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.Bonus.BonusReceiveRes.prototype.hasBonusitem = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Bonus.BonusReceiveAchieveReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Bonus.BonusReceiveAchieveReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Bonus.BonusReceiveAchieveReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Bonus.BonusReceiveAchieveReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    bonustype: jspb.Message.getFieldWithDefault(msg, 1, 0),
    order: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Bonus.BonusReceiveAchieveReq}
 */
proto.PbModel.Bonus.BonusReceiveAchieveReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Bonus.BonusReceiveAchieveReq;
  return proto.PbModel.Bonus.BonusReceiveAchieveReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Bonus.BonusReceiveAchieveReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Bonus.BonusReceiveAchieveReq}
 */
proto.PbModel.Bonus.BonusReceiveAchieveReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBonustype(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOrder(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Bonus.BonusReceiveAchieveReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Bonus.BonusReceiveAchieveReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Bonus.BonusReceiveAchieveReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Bonus.BonusReceiveAchieveReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBonustype();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getOrder();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 BonusType = 1;
 * @return {number}
 */
proto.PbModel.Bonus.BonusReceiveAchieveReq.prototype.getBonustype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Bonus.BonusReceiveAchieveReq} returns this
 */
proto.PbModel.Bonus.BonusReceiveAchieveReq.prototype.setBonustype = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 Order = 2;
 * @return {number}
 */
proto.PbModel.Bonus.BonusReceiveAchieveReq.prototype.getOrder = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Bonus.BonusReceiveAchieveReq} returns this
 */
proto.PbModel.Bonus.BonusReceiveAchieveReq.prototype.setOrder = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Bonus.BonusReceiveAchieveRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Bonus.BonusReceiveAchieveRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Bonus.BonusReceiveAchieveRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Bonus.BonusReceiveAchieveRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    receiveachievedictMap: (f = msg.getReceiveachievedictMap()) ? f.toObject(includeInstance, undefined) : [],
    basegetgameresourcelist: (f = msg.getBasegetgameresourcelist()) && Resource_pb.ResourceToClientModel.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Bonus.BonusReceiveAchieveRes}
 */
proto.PbModel.Bonus.BonusReceiveAchieveRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Bonus.BonusReceiveAchieveRes;
  return proto.PbModel.Bonus.BonusReceiveAchieveRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Bonus.BonusReceiveAchieveRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Bonus.BonusReceiveAchieveRes}
 */
proto.PbModel.Bonus.BonusReceiveAchieveRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getReceiveachievedictMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readString, null, 0, "");
         });
      break;
    case 2:
      var value = new Resource_pb.ResourceToClientModel;
      reader.readMessage(value,Resource_pb.ResourceToClientModel.deserializeBinaryFromReader);
      msg.setBasegetgameresourcelist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Bonus.BonusReceiveAchieveRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Bonus.BonusReceiveAchieveRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Bonus.BonusReceiveAchieveRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Bonus.BonusReceiveAchieveRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReceiveachievedictMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getBasegetgameresourcelist();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      Resource_pb.ResourceToClientModel.serializeBinaryToWriter
    );
  }
};


/**
 * map<int32, string> ReceiveAchieveDict = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,string>}
 */
proto.PbModel.Bonus.BonusReceiveAchieveRes.prototype.getReceiveachievedictMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,string>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.PbModel.Bonus.BonusReceiveAchieveRes} returns this
 */
proto.PbModel.Bonus.BonusReceiveAchieveRes.prototype.clearReceiveachievedictMap = function() {
  this.getReceiveachievedictMap().clear();
  return this;};


/**
 * optional PbModel.Resource.ResourceToClientModel BaseGetGameResourceList = 2;
 * @return {?proto.PbModel.Resource.ResourceToClientModel}
 */
proto.PbModel.Bonus.BonusReceiveAchieveRes.prototype.getBasegetgameresourcelist = function() {
  return /** @type{?proto.PbModel.Resource.ResourceToClientModel} */ (
    jspb.Message.getWrapperField(this, Resource_pb.ResourceToClientModel, 2));
};


/**
 * @param {?proto.PbModel.Resource.ResourceToClientModel|undefined} value
 * @return {!proto.PbModel.Bonus.BonusReceiveAchieveRes} returns this
*/
proto.PbModel.Bonus.BonusReceiveAchieveRes.prototype.setBasegetgameresourcelist = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.Bonus.BonusReceiveAchieveRes} returns this
 */
proto.PbModel.Bonus.BonusReceiveAchieveRes.prototype.clearBasegetgameresourcelist = function() {
  return this.setBasegetgameresourcelist(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.Bonus.BonusReceiveAchieveRes.prototype.hasBasegetgameresourcelist = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Bonus.BonusSendReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Bonus.BonusSendReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Bonus.BonusSendReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Bonus.BonusSendReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    entityid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Bonus.BonusSendReq}
 */
proto.PbModel.Bonus.BonusSendReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Bonus.BonusSendReq;
  return proto.PbModel.Bonus.BonusSendReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Bonus.BonusSendReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Bonus.BonusSendReq}
 */
proto.PbModel.Bonus.BonusSendReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEntityid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Bonus.BonusSendReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Bonus.BonusSendReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Bonus.BonusSendReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Bonus.BonusSendReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntityid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string EntityId = 1;
 * @return {string}
 */
proto.PbModel.Bonus.BonusSendReq.prototype.getEntityid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Bonus.BonusSendReq} returns this
 */
proto.PbModel.Bonus.BonusSendReq.prototype.setEntityid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Bonus.BonusSendRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Bonus.BonusSendRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Bonus.BonusSendRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Bonus.BonusSendRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    achievedictMap: (f = msg.getAchievedictMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Bonus.BonusSendRes}
 */
proto.PbModel.Bonus.BonusSendRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Bonus.BonusSendRes;
  return proto.PbModel.Bonus.BonusSendRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Bonus.BonusSendRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Bonus.BonusSendRes}
 */
proto.PbModel.Bonus.BonusSendRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getAchievedictMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readInt32, null, 0, 0);
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Bonus.BonusSendRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Bonus.BonusSendRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Bonus.BonusSendRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Bonus.BonusSendRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAchievedictMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeInt32);
  }
};


/**
 * map<int32, int32> AchieveDict = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,number>}
 */
proto.PbModel.Bonus.BonusSendRes.prototype.getAchievedictMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,number>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.PbModel.Bonus.BonusSendRes} returns this
 */
proto.PbModel.Bonus.BonusSendRes.prototype.clearAchievedictMap = function() {
  this.getAchievedictMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Bonus.BonusSendAllReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Bonus.BonusSendAllReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Bonus.BonusSendAllReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Bonus.BonusSendAllReq.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Bonus.BonusSendAllReq}
 */
proto.PbModel.Bonus.BonusSendAllReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Bonus.BonusSendAllReq;
  return proto.PbModel.Bonus.BonusSendAllReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Bonus.BonusSendAllReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Bonus.BonusSendAllReq}
 */
proto.PbModel.Bonus.BonusSendAllReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Bonus.BonusSendAllReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Bonus.BonusSendAllReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Bonus.BonusSendAllReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Bonus.BonusSendAllReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Bonus.BonusSendAllRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Bonus.BonusSendAllRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Bonus.BonusSendAllRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Bonus.BonusSendAllRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    achievedictMap: (f = msg.getAchievedictMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Bonus.BonusSendAllRes}
 */
proto.PbModel.Bonus.BonusSendAllRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Bonus.BonusSendAllRes;
  return proto.PbModel.Bonus.BonusSendAllRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Bonus.BonusSendAllRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Bonus.BonusSendAllRes}
 */
proto.PbModel.Bonus.BonusSendAllRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getAchievedictMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readInt32, null, 0, 0);
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Bonus.BonusSendAllRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Bonus.BonusSendAllRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Bonus.BonusSendAllRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Bonus.BonusSendAllRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAchievedictMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeInt32);
  }
};


/**
 * map<int32, int32> AchieveDict = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,number>}
 */
proto.PbModel.Bonus.BonusSendAllRes.prototype.getAchievedictMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,number>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.PbModel.Bonus.BonusSendAllRes} returns this
 */
proto.PbModel.Bonus.BonusSendAllRes.prototype.clearAchievedictMap = function() {
  this.getAchievedictMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.Bonus.BonusReceiveAllReq.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Bonus.BonusReceiveAllReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Bonus.BonusReceiveAllReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Bonus.BonusReceiveAllReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Bonus.BonusReceiveAllReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    entityidlistList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Bonus.BonusReceiveAllReq}
 */
proto.PbModel.Bonus.BonusReceiveAllReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Bonus.BonusReceiveAllReq;
  return proto.PbModel.Bonus.BonusReceiveAllReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Bonus.BonusReceiveAllReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Bonus.BonusReceiveAllReq}
 */
proto.PbModel.Bonus.BonusReceiveAllReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addEntityidlist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Bonus.BonusReceiveAllReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Bonus.BonusReceiveAllReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Bonus.BonusReceiveAllReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Bonus.BonusReceiveAllReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntityidlistList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string EntityIdList = 1;
 * @return {!Array<string>}
 */
proto.PbModel.Bonus.BonusReceiveAllReq.prototype.getEntityidlistList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.PbModel.Bonus.BonusReceiveAllReq} returns this
 */
proto.PbModel.Bonus.BonusReceiveAllReq.prototype.setEntityidlistList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.PbModel.Bonus.BonusReceiveAllReq} returns this
 */
proto.PbModel.Bonus.BonusReceiveAllReq.prototype.addEntityidlist = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.Bonus.BonusReceiveAllReq} returns this
 */
proto.PbModel.Bonus.BonusReceiveAllReq.prototype.clearEntityidlistList = function() {
  return this.setEntityidlistList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.Bonus.BonusReceiveAllRes.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Bonus.BonusReceiveAllRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Bonus.BonusReceiveAllRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Bonus.BonusReceiveAllRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Bonus.BonusReceiveAllRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    num: jspb.Message.getFieldWithDefault(msg, 1, 0),
    money: jspb.Message.getFieldWithDefault(msg, 2, 0),
    dailyreceivenum: jspb.Message.getFieldWithDefault(msg, 3, 0),
    dailyreceivemoney: jspb.Message.getFieldWithDefault(msg, 4, 0),
    receivelistList: jspb.Message.toObjectList(msg.getReceivelistList(),
    proto.PbModel.Bonus.BonusReceiveAllModel.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Bonus.BonusReceiveAllRes}
 */
proto.PbModel.Bonus.BonusReceiveAllRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Bonus.BonusReceiveAllRes;
  return proto.PbModel.Bonus.BonusReceiveAllRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Bonus.BonusReceiveAllRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Bonus.BonusReceiveAllRes}
 */
proto.PbModel.Bonus.BonusReceiveAllRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNum(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMoney(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDailyreceivenum(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDailyreceivemoney(value);
      break;
    case 5:
      var value = new proto.PbModel.Bonus.BonusReceiveAllModel;
      reader.readMessage(value,proto.PbModel.Bonus.BonusReceiveAllModel.deserializeBinaryFromReader);
      msg.addReceivelist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Bonus.BonusReceiveAllRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Bonus.BonusReceiveAllRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Bonus.BonusReceiveAllRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Bonus.BonusReceiveAllRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNum();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMoney();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getDailyreceivenum();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getDailyreceivemoney();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getReceivelistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.PbModel.Bonus.BonusReceiveAllModel.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 Num = 1;
 * @return {number}
 */
proto.PbModel.Bonus.BonusReceiveAllRes.prototype.getNum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Bonus.BonusReceiveAllRes} returns this
 */
proto.PbModel.Bonus.BonusReceiveAllRes.prototype.setNum = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 Money = 2;
 * @return {number}
 */
proto.PbModel.Bonus.BonusReceiveAllRes.prototype.getMoney = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Bonus.BonusReceiveAllRes} returns this
 */
proto.PbModel.Bonus.BonusReceiveAllRes.prototype.setMoney = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 DailyReceiveNum = 3;
 * @return {number}
 */
proto.PbModel.Bonus.BonusReceiveAllRes.prototype.getDailyreceivenum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Bonus.BonusReceiveAllRes} returns this
 */
proto.PbModel.Bonus.BonusReceiveAllRes.prototype.setDailyreceivenum = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 DailyReceiveMoney = 4;
 * @return {number}
 */
proto.PbModel.Bonus.BonusReceiveAllRes.prototype.getDailyreceivemoney = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Bonus.BonusReceiveAllRes} returns this
 */
proto.PbModel.Bonus.BonusReceiveAllRes.prototype.setDailyreceivemoney = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * repeated BonusReceiveAllModel ReceiveList = 5;
 * @return {!Array<!proto.PbModel.Bonus.BonusReceiveAllModel>}
 */
proto.PbModel.Bonus.BonusReceiveAllRes.prototype.getReceivelistList = function() {
  return /** @type{!Array<!proto.PbModel.Bonus.BonusReceiveAllModel>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.Bonus.BonusReceiveAllModel, 5));
};


/**
 * @param {!Array<!proto.PbModel.Bonus.BonusReceiveAllModel>} value
 * @return {!proto.PbModel.Bonus.BonusReceiveAllRes} returns this
*/
proto.PbModel.Bonus.BonusReceiveAllRes.prototype.setReceivelistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.PbModel.Bonus.BonusReceiveAllModel=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.Bonus.BonusReceiveAllModel}
 */
proto.PbModel.Bonus.BonusReceiveAllRes.prototype.addReceivelist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.PbModel.Bonus.BonusReceiveAllModel, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.Bonus.BonusReceiveAllRes} returns this
 */
proto.PbModel.Bonus.BonusReceiveAllRes.prototype.clearReceivelistList = function() {
  return this.setReceivelistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Bonus.BonusReceiveAllModel.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Bonus.BonusReceiveAllModel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Bonus.BonusReceiveAllModel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Bonus.BonusReceiveAllModel.toObject = function(includeInstance, msg) {
  var f, obj = {
    modelid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    money: jspb.Message.getFieldWithDefault(msg, 2, 0),
    playerinfo: (f = msg.getPlayerinfo()) && Player_pb.PlayerCommonInfoRes.toObject(includeInstance, f),
    entityid: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Bonus.BonusReceiveAllModel}
 */
proto.PbModel.Bonus.BonusReceiveAllModel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Bonus.BonusReceiveAllModel;
  return proto.PbModel.Bonus.BonusReceiveAllModel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Bonus.BonusReceiveAllModel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Bonus.BonusReceiveAllModel}
 */
proto.PbModel.Bonus.BonusReceiveAllModel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setModelid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMoney(value);
      break;
    case 3:
      var value = new Player_pb.PlayerCommonInfoRes;
      reader.readMessage(value,Player_pb.PlayerCommonInfoRes.deserializeBinaryFromReader);
      msg.setPlayerinfo(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setEntityid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Bonus.BonusReceiveAllModel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Bonus.BonusReceiveAllModel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Bonus.BonusReceiveAllModel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Bonus.BonusReceiveAllModel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getModelid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMoney();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getPlayerinfo();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      Player_pb.PlayerCommonInfoRes.serializeBinaryToWriter
    );
  }
  f = message.getEntityid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional int32 ModelId = 1;
 * @return {number}
 */
proto.PbModel.Bonus.BonusReceiveAllModel.prototype.getModelid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Bonus.BonusReceiveAllModel} returns this
 */
proto.PbModel.Bonus.BonusReceiveAllModel.prototype.setModelid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 Money = 2;
 * @return {number}
 */
proto.PbModel.Bonus.BonusReceiveAllModel.prototype.getMoney = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Bonus.BonusReceiveAllModel} returns this
 */
proto.PbModel.Bonus.BonusReceiveAllModel.prototype.setMoney = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional PbModel.Player.PlayerCommonInfoRes PlayerInfo = 3;
 * @return {?proto.PbModel.Player.PlayerCommonInfoRes}
 */
proto.PbModel.Bonus.BonusReceiveAllModel.prototype.getPlayerinfo = function() {
  return /** @type{?proto.PbModel.Player.PlayerCommonInfoRes} */ (
    jspb.Message.getWrapperField(this, Player_pb.PlayerCommonInfoRes, 3));
};


/**
 * @param {?proto.PbModel.Player.PlayerCommonInfoRes|undefined} value
 * @return {!proto.PbModel.Bonus.BonusReceiveAllModel} returns this
*/
proto.PbModel.Bonus.BonusReceiveAllModel.prototype.setPlayerinfo = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.Bonus.BonusReceiveAllModel} returns this
 */
proto.PbModel.Bonus.BonusReceiveAllModel.prototype.clearPlayerinfo = function() {
  return this.setPlayerinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.Bonus.BonusReceiveAllModel.prototype.hasPlayerinfo = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string EntityId = 4;
 * @return {string}
 */
proto.PbModel.Bonus.BonusReceiveAllModel.prototype.getEntityid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Bonus.BonusReceiveAllModel} returns this
 */
proto.PbModel.Bonus.BonusReceiveAllModel.prototype.setEntityid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Bonus.BonusPushLeftNumRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Bonus.BonusPushLeftNumRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Bonus.BonusPushLeftNumRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Bonus.BonusPushLeftNumRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    leftnum: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Bonus.BonusPushLeftNumRes}
 */
proto.PbModel.Bonus.BonusPushLeftNumRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Bonus.BonusPushLeftNumRes;
  return proto.PbModel.Bonus.BonusPushLeftNumRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Bonus.BonusPushLeftNumRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Bonus.BonusPushLeftNumRes}
 */
proto.PbModel.Bonus.BonusPushLeftNumRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLeftnum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Bonus.BonusPushLeftNumRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Bonus.BonusPushLeftNumRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Bonus.BonusPushLeftNumRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Bonus.BonusPushLeftNumRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLeftnum();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 LeftNum = 1;
 * @return {number}
 */
proto.PbModel.Bonus.BonusPushLeftNumRes.prototype.getLeftnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Bonus.BonusPushLeftNumRes} returns this
 */
proto.PbModel.Bonus.BonusPushLeftNumRes.prototype.setLeftnum = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Bonus.BonusPushSendRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Bonus.BonusPushSendRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Bonus.BonusPushSendRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Bonus.BonusPushSendRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    sendplayerid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sendplayername: jspb.Message.getFieldWithDefault(msg, 2, ""),
    bonusmapMap: (f = msg.getBonusmapMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Bonus.BonusPushSendRes}
 */
proto.PbModel.Bonus.BonusPushSendRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Bonus.BonusPushSendRes;
  return proto.PbModel.Bonus.BonusPushSendRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Bonus.BonusPushSendRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Bonus.BonusPushSendRes}
 */
proto.PbModel.Bonus.BonusPushSendRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSendplayerid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSendplayername(value);
      break;
    case 3:
      var value = msg.getBonusmapMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readInt32, null, "", 0);
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Bonus.BonusPushSendRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Bonus.BonusPushSendRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Bonus.BonusPushSendRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Bonus.BonusPushSendRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSendplayerid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSendplayername();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBonusmapMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeInt32);
  }
};


/**
 * optional string SendPlayerId = 1;
 * @return {string}
 */
proto.PbModel.Bonus.BonusPushSendRes.prototype.getSendplayerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Bonus.BonusPushSendRes} returns this
 */
proto.PbModel.Bonus.BonusPushSendRes.prototype.setSendplayerid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string SendPlayerName = 2;
 * @return {string}
 */
proto.PbModel.Bonus.BonusPushSendRes.prototype.getSendplayername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Bonus.BonusPushSendRes} returns this
 */
proto.PbModel.Bonus.BonusPushSendRes.prototype.setSendplayername = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * map<string, int32> BonusMap = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,number>}
 */
proto.PbModel.Bonus.BonusPushSendRes.prototype.getBonusmapMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,number>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.PbModel.Bonus.BonusPushSendRes} returns this
 */
proto.PbModel.Bonus.BonusPushSendRes.prototype.clearBonusmapMap = function() {
  this.getBonusmapMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Bonus.BonusPushTaskRewardRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Bonus.BonusPushTaskRewardRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Bonus.BonusPushTaskRewardRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Bonus.BonusPushTaskRewardRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    reward: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Bonus.BonusPushTaskRewardRes}
 */
proto.PbModel.Bonus.BonusPushTaskRewardRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Bonus.BonusPushTaskRewardRes;
  return proto.PbModel.Bonus.BonusPushTaskRewardRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Bonus.BonusPushTaskRewardRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Bonus.BonusPushTaskRewardRes}
 */
proto.PbModel.Bonus.BonusPushTaskRewardRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setReward(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Bonus.BonusPushTaskRewardRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Bonus.BonusPushTaskRewardRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Bonus.BonusPushTaskRewardRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Bonus.BonusPushTaskRewardRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReward();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string Reward = 1;
 * @return {string}
 */
proto.PbModel.Bonus.BonusPushTaskRewardRes.prototype.getReward = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Bonus.BonusPushTaskRewardRes} returns this
 */
proto.PbModel.Bonus.BonusPushTaskRewardRes.prototype.setReward = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


goog.object.extend(exports, proto.PbModel.Bonus);
