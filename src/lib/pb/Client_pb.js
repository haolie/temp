// source: Client.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var Command_pb = require('./Command_pb.js');
goog.object.extend(proto, Command_pb);
var ResultStatus_pb = require('./ResultStatus_pb.js');
goog.object.extend(proto, ResultStatus_pb);
goog.exportSymbol('proto.PbModel.Client.ClientAvatarPushModel', null, global);
goog.exportSymbol('proto.PbModel.Client.ClientConnectionCloseRes', null, global);
goog.exportSymbol('proto.PbModel.Client.ClientNewResourceVersionRes', null, global);
goog.exportSymbol('proto.PbModel.Client.ClientNewVersionRes', null, global);
goog.exportSymbol('proto.PbModel.Client.ClientPushModel', null, global);
goog.exportSymbol('proto.PbModel.Client.ClientRequest', null, global);
goog.exportSymbol('proto.PbModel.Client.ClientResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Client.ClientConnectionCloseRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Client.ClientConnectionCloseRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Client.ClientConnectionCloseRes.displayName = 'proto.PbModel.Client.ClientConnectionCloseRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Client.ClientNewResourceVersionRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Client.ClientNewResourceVersionRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Client.ClientNewResourceVersionRes.displayName = 'proto.PbModel.Client.ClientNewResourceVersionRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Client.ClientNewVersionRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Client.ClientNewVersionRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Client.ClientNewVersionRes.displayName = 'proto.PbModel.Client.ClientNewVersionRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Client.ClientPushModel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Client.ClientPushModel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Client.ClientPushModel.displayName = 'proto.PbModel.Client.ClientPushModel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Client.ClientRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Client.ClientRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Client.ClientRequest.displayName = 'proto.PbModel.Client.ClientRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Client.ClientResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.Client.ClientResponse.repeatedFields_, null);
};
goog.inherits(proto.PbModel.Client.ClientResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Client.ClientResponse.displayName = 'proto.PbModel.Client.ClientResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Client.ClientAvatarPushModel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Client.ClientAvatarPushModel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Client.ClientAvatarPushModel.displayName = 'proto.PbModel.Client.ClientAvatarPushModel';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Client.ClientConnectionCloseRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Client.ClientConnectionCloseRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Client.ClientConnectionCloseRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Client.ClientConnectionCloseRes.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Client.ClientConnectionCloseRes}
 */
proto.PbModel.Client.ClientConnectionCloseRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Client.ClientConnectionCloseRes;
  return proto.PbModel.Client.ClientConnectionCloseRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Client.ClientConnectionCloseRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Client.ClientConnectionCloseRes}
 */
proto.PbModel.Client.ClientConnectionCloseRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Client.ClientConnectionCloseRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Client.ClientConnectionCloseRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Client.ClientConnectionCloseRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Client.ClientConnectionCloseRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Client.ClientNewResourceVersionRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Client.ClientNewResourceVersionRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Client.ClientNewResourceVersionRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Client.ClientNewResourceVersionRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    resourceversionname: jspb.Message.getFieldWithDefault(msg, 1, ""),
    url: jspb.Message.getFieldWithDefault(msg, 2, ""),
    ifrestart: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    isnewresource: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Client.ClientNewResourceVersionRes}
 */
proto.PbModel.Client.ClientNewResourceVersionRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Client.ClientNewResourceVersionRes;
  return proto.PbModel.Client.ClientNewResourceVersionRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Client.ClientNewResourceVersionRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Client.ClientNewResourceVersionRes}
 */
proto.PbModel.Client.ClientNewResourceVersionRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResourceversionname(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIfrestart(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsnewresource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Client.ClientNewResourceVersionRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Client.ClientNewResourceVersionRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Client.ClientNewResourceVersionRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Client.ClientNewResourceVersionRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResourceversionname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIfrestart();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getIsnewresource();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional string ResourceVersionName = 1;
 * @return {string}
 */
proto.PbModel.Client.ClientNewResourceVersionRes.prototype.getResourceversionname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Client.ClientNewResourceVersionRes} returns this
 */
proto.PbModel.Client.ClientNewResourceVersionRes.prototype.setResourceversionname = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Url = 2;
 * @return {string}
 */
proto.PbModel.Client.ClientNewResourceVersionRes.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Client.ClientNewResourceVersionRes} returns this
 */
proto.PbModel.Client.ClientNewResourceVersionRes.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool IfRestart = 3;
 * @return {boolean}
 */
proto.PbModel.Client.ClientNewResourceVersionRes.prototype.getIfrestart = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PbModel.Client.ClientNewResourceVersionRes} returns this
 */
proto.PbModel.Client.ClientNewResourceVersionRes.prototype.setIfrestart = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool IsNewResource = 4;
 * @return {boolean}
 */
proto.PbModel.Client.ClientNewResourceVersionRes.prototype.getIsnewresource = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PbModel.Client.ClientNewResourceVersionRes} returns this
 */
proto.PbModel.Client.ClientNewResourceVersionRes.prototype.setIsnewresource = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Client.ClientNewVersionRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Client.ClientNewVersionRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Client.ClientNewVersionRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Client.ClientNewVersionRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    gameversionurl: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Client.ClientNewVersionRes}
 */
proto.PbModel.Client.ClientNewVersionRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Client.ClientNewVersionRes;
  return proto.PbModel.Client.ClientNewVersionRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Client.ClientNewVersionRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Client.ClientNewVersionRes}
 */
proto.PbModel.Client.ClientNewVersionRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGameversionurl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Client.ClientNewVersionRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Client.ClientNewVersionRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Client.ClientNewVersionRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Client.ClientNewVersionRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGameversionurl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string GameVersionUrl = 1;
 * @return {string}
 */
proto.PbModel.Client.ClientNewVersionRes.prototype.getGameversionurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Client.ClientNewVersionRes} returns this
 */
proto.PbModel.Client.ClientNewVersionRes.prototype.setGameversionurl = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Client.ClientPushModel.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Client.ClientPushModel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Client.ClientPushModel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Client.ClientPushModel.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    cmd: jspb.Message.getFieldWithDefault(msg, 2, 0),
    data: msg.getData_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Client.ClientPushModel}
 */
proto.PbModel.Client.ClientPushModel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Client.ClientPushModel;
  return proto.PbModel.Client.ClientPushModel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Client.ClientPushModel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Client.ClientPushModel}
 */
proto.PbModel.Client.ClientPushModel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.PbModel.Common.ResultStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {!proto.PbModel.Common.Command} */ (reader.readEnum());
      msg.setCmd(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Client.ClientPushModel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Client.ClientPushModel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Client.ClientPushModel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Client.ClientPushModel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getCmd();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * optional PbModel.Common.ResultStatus Status = 1;
 * @return {!proto.PbModel.Common.ResultStatus}
 */
proto.PbModel.Client.ClientPushModel.prototype.getStatus = function() {
  return /** @type {!proto.PbModel.Common.ResultStatus} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.PbModel.Common.ResultStatus} value
 * @return {!proto.PbModel.Client.ClientPushModel} returns this
 */
proto.PbModel.Client.ClientPushModel.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional PbModel.Common.Command Cmd = 2;
 * @return {!proto.PbModel.Common.Command}
 */
proto.PbModel.Client.ClientPushModel.prototype.getCmd = function() {
  return /** @type {!proto.PbModel.Common.Command} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.PbModel.Common.Command} value
 * @return {!proto.PbModel.Client.ClientPushModel} returns this
 */
proto.PbModel.Client.ClientPushModel.prototype.setCmd = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional bytes Data = 3;
 * @return {!(string|Uint8Array)}
 */
proto.PbModel.Client.ClientPushModel.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes Data = 3;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.PbModel.Client.ClientPushModel.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes Data = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.PbModel.Client.ClientPushModel.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.PbModel.Client.ClientPushModel} returns this
 */
proto.PbModel.Client.ClientPushModel.prototype.setData = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Client.ClientRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Client.ClientRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Client.ClientRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Client.ClientRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    cmd: jspb.Message.getFieldWithDefault(msg, 1, 0),
    handlecode: jspb.Message.getFieldWithDefault(msg, 2, ""),
    partnerid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    serverid: jspb.Message.getFieldWithDefault(msg, 4, 0),
    gameversionid: jspb.Message.getFieldWithDefault(msg, 5, 0),
    resourceversionname: jspb.Message.getFieldWithDefault(msg, 6, ""),
    clienttimetick: jspb.Message.getFieldWithDefault(msg, 7, 0),
    data: msg.getData_asB64(),
    extensionstring: jspb.Message.getFieldWithDefault(msg, 9, ""),
    mac: jspb.Message.getFieldWithDefault(msg, 10, ""),
    idfa: jspb.Message.getFieldWithDefault(msg, 11, ""),
    imei: jspb.Message.getFieldWithDefault(msg, 12, ""),
    oaid: jspb.Message.getFieldWithDefault(msg, 13, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Client.ClientRequest}
 */
proto.PbModel.Client.ClientRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Client.ClientRequest;
  return proto.PbModel.Client.ClientRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Client.ClientRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Client.ClientRequest}
 */
proto.PbModel.Client.ClientRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.PbModel.Common.Command} */ (reader.readEnum());
      msg.setCmd(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHandlecode(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPartnerid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setServerid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGameversionid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setResourceversionname(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setClienttimetick(value);
      break;
    case 8:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setExtensionstring(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setMac(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdfa(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setImei(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setOaid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Client.ClientRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Client.ClientRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Client.ClientRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Client.ClientRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCmd();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getHandlecode();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPartnerid();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getServerid();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getGameversionid();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getResourceversionname();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getClienttimetick();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      8,
      f
    );
  }
  f = message.getExtensionstring();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getMac();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getIdfa();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getImei();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getOaid();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
};


/**
 * optional PbModel.Common.Command Cmd = 1;
 * @return {!proto.PbModel.Common.Command}
 */
proto.PbModel.Client.ClientRequest.prototype.getCmd = function() {
  return /** @type {!proto.PbModel.Common.Command} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.PbModel.Common.Command} value
 * @return {!proto.PbModel.Client.ClientRequest} returns this
 */
proto.PbModel.Client.ClientRequest.prototype.setCmd = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string HandleCode = 2;
 * @return {string}
 */
proto.PbModel.Client.ClientRequest.prototype.getHandlecode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Client.ClientRequest} returns this
 */
proto.PbModel.Client.ClientRequest.prototype.setHandlecode = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 PartnerId = 3;
 * @return {number}
 */
proto.PbModel.Client.ClientRequest.prototype.getPartnerid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Client.ClientRequest} returns this
 */
proto.PbModel.Client.ClientRequest.prototype.setPartnerid = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 ServerId = 4;
 * @return {number}
 */
proto.PbModel.Client.ClientRequest.prototype.getServerid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Client.ClientRequest} returns this
 */
proto.PbModel.Client.ClientRequest.prototype.setServerid = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 GameVersionId = 5;
 * @return {number}
 */
proto.PbModel.Client.ClientRequest.prototype.getGameversionid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Client.ClientRequest} returns this
 */
proto.PbModel.Client.ClientRequest.prototype.setGameversionid = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string ResourceVersionName = 6;
 * @return {string}
 */
proto.PbModel.Client.ClientRequest.prototype.getResourceversionname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Client.ClientRequest} returns this
 */
proto.PbModel.Client.ClientRequest.prototype.setResourceversionname = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int64 ClientTimeTick = 7;
 * @return {number}
 */
proto.PbModel.Client.ClientRequest.prototype.getClienttimetick = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Client.ClientRequest} returns this
 */
proto.PbModel.Client.ClientRequest.prototype.setClienttimetick = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional bytes Data = 8;
 * @return {!(string|Uint8Array)}
 */
proto.PbModel.Client.ClientRequest.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * optional bytes Data = 8;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.PbModel.Client.ClientRequest.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes Data = 8;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.PbModel.Client.ClientRequest.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.PbModel.Client.ClientRequest} returns this
 */
proto.PbModel.Client.ClientRequest.prototype.setData = function(value) {
  return jspb.Message.setProto3BytesField(this, 8, value);
};


/**
 * optional string ExtensionString = 9;
 * @return {string}
 */
proto.PbModel.Client.ClientRequest.prototype.getExtensionstring = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Client.ClientRequest} returns this
 */
proto.PbModel.Client.ClientRequest.prototype.setExtensionstring = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string MAC = 10;
 * @return {string}
 */
proto.PbModel.Client.ClientRequest.prototype.getMac = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Client.ClientRequest} returns this
 */
proto.PbModel.Client.ClientRequest.prototype.setMac = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string IDFA = 11;
 * @return {string}
 */
proto.PbModel.Client.ClientRequest.prototype.getIdfa = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Client.ClientRequest} returns this
 */
proto.PbModel.Client.ClientRequest.prototype.setIdfa = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string IMEI = 12;
 * @return {string}
 */
proto.PbModel.Client.ClientRequest.prototype.getImei = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Client.ClientRequest} returns this
 */
proto.PbModel.Client.ClientRequest.prototype.setImei = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string OAID = 13;
 * @return {string}
 */
proto.PbModel.Client.ClientRequest.prototype.getOaid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Client.ClientRequest} returns this
 */
proto.PbModel.Client.ClientRequest.prototype.setOaid = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.Client.ClientResponse.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Client.ClientResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Client.ClientResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Client.ClientResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Client.ClientResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    cmd: jspb.Message.getFieldWithDefault(msg, 1, 0),
    handlecode: jspb.Message.getFieldWithDefault(msg, 2, ""),
    code: jspb.Message.getFieldWithDefault(msg, 3, 0),
    codemsg: jspb.Message.getFieldWithDefault(msg, 4, ""),
    timetick: jspb.Message.getFieldWithDefault(msg, 5, 0),
    data: msg.getData_asB64(),
    extdataList: jspb.Message.toObjectList(msg.getExtdataList(),
    proto.PbModel.Client.ClientAvatarPushModel.toObject, includeInstance),
    codedata: (f = msg.getCodedata()) && proto.PbModel.Client.ClientAvatarPushModel.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Client.ClientResponse}
 */
proto.PbModel.Client.ClientResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Client.ClientResponse;
  return proto.PbModel.Client.ClientResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Client.ClientResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Client.ClientResponse}
 */
proto.PbModel.Client.ClientResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.PbModel.Common.Command} */ (reader.readEnum());
      msg.setCmd(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHandlecode(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCode(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCodemsg(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimetick(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    case 7:
      var value = new proto.PbModel.Client.ClientAvatarPushModel;
      reader.readMessage(value,proto.PbModel.Client.ClientAvatarPushModel.deserializeBinaryFromReader);
      msg.addExtdata(value);
      break;
    case 8:
      var value = new proto.PbModel.Client.ClientAvatarPushModel;
      reader.readMessage(value,proto.PbModel.Client.ClientAvatarPushModel.deserializeBinaryFromReader);
      msg.setCodedata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Client.ClientResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Client.ClientResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Client.ClientResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Client.ClientResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCmd();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getHandlecode();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCode();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getCodemsg();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTimetick();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = message.getExtdataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.PbModel.Client.ClientAvatarPushModel.serializeBinaryToWriter
    );
  }
  f = message.getCodedata();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.PbModel.Client.ClientAvatarPushModel.serializeBinaryToWriter
    );
  }
};


/**
 * optional PbModel.Common.Command Cmd = 1;
 * @return {!proto.PbModel.Common.Command}
 */
proto.PbModel.Client.ClientResponse.prototype.getCmd = function() {
  return /** @type {!proto.PbModel.Common.Command} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.PbModel.Common.Command} value
 * @return {!proto.PbModel.Client.ClientResponse} returns this
 */
proto.PbModel.Client.ClientResponse.prototype.setCmd = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string HandleCode = 2;
 * @return {string}
 */
proto.PbModel.Client.ClientResponse.prototype.getHandlecode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Client.ClientResponse} returns this
 */
proto.PbModel.Client.ClientResponse.prototype.setHandlecode = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 Code = 3;
 * @return {number}
 */
proto.PbModel.Client.ClientResponse.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Client.ClientResponse} returns this
 */
proto.PbModel.Client.ClientResponse.prototype.setCode = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string CodeMsg = 4;
 * @return {string}
 */
proto.PbModel.Client.ClientResponse.prototype.getCodemsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Client.ClientResponse} returns this
 */
proto.PbModel.Client.ClientResponse.prototype.setCodemsg = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int64 TimeTick = 5;
 * @return {number}
 */
proto.PbModel.Client.ClientResponse.prototype.getTimetick = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Client.ClientResponse} returns this
 */
proto.PbModel.Client.ClientResponse.prototype.setTimetick = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional bytes Data = 6;
 * @return {!(string|Uint8Array)}
 */
proto.PbModel.Client.ClientResponse.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes Data = 6;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.PbModel.Client.ClientResponse.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes Data = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.PbModel.Client.ClientResponse.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.PbModel.Client.ClientResponse} returns this
 */
proto.PbModel.Client.ClientResponse.prototype.setData = function(value) {
  return jspb.Message.setProto3BytesField(this, 6, value);
};


/**
 * repeated ClientAvatarPushModel ExtData = 7;
 * @return {!Array<!proto.PbModel.Client.ClientAvatarPushModel>}
 */
proto.PbModel.Client.ClientResponse.prototype.getExtdataList = function() {
  return /** @type{!Array<!proto.PbModel.Client.ClientAvatarPushModel>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.Client.ClientAvatarPushModel, 7));
};


/**
 * @param {!Array<!proto.PbModel.Client.ClientAvatarPushModel>} value
 * @return {!proto.PbModel.Client.ClientResponse} returns this
*/
proto.PbModel.Client.ClientResponse.prototype.setExtdataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.PbModel.Client.ClientAvatarPushModel=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.Client.ClientAvatarPushModel}
 */
proto.PbModel.Client.ClientResponse.prototype.addExtdata = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.PbModel.Client.ClientAvatarPushModel, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.Client.ClientResponse} returns this
 */
proto.PbModel.Client.ClientResponse.prototype.clearExtdataList = function() {
  return this.setExtdataList([]);
};


/**
 * optional ClientAvatarPushModel CodeData = 8;
 * @return {?proto.PbModel.Client.ClientAvatarPushModel}
 */
proto.PbModel.Client.ClientResponse.prototype.getCodedata = function() {
  return /** @type{?proto.PbModel.Client.ClientAvatarPushModel} */ (
    jspb.Message.getWrapperField(this, proto.PbModel.Client.ClientAvatarPushModel, 8));
};


/**
 * @param {?proto.PbModel.Client.ClientAvatarPushModel|undefined} value
 * @return {!proto.PbModel.Client.ClientResponse} returns this
*/
proto.PbModel.Client.ClientResponse.prototype.setCodedata = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.Client.ClientResponse} returns this
 */
proto.PbModel.Client.ClientResponse.prototype.clearCodedata = function() {
  return this.setCodedata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.Client.ClientResponse.prototype.hasCodedata = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Client.ClientAvatarPushModel.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Client.ClientAvatarPushModel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Client.ClientAvatarPushModel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Client.ClientAvatarPushModel.toObject = function(includeInstance, msg) {
  var f, obj = {
    cmd: jspb.Message.getFieldWithDefault(msg, 1, 0),
    data: msg.getData_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Client.ClientAvatarPushModel}
 */
proto.PbModel.Client.ClientAvatarPushModel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Client.ClientAvatarPushModel;
  return proto.PbModel.Client.ClientAvatarPushModel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Client.ClientAvatarPushModel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Client.ClientAvatarPushModel}
 */
proto.PbModel.Client.ClientAvatarPushModel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.PbModel.Common.Command} */ (reader.readEnum());
      msg.setCmd(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Client.ClientAvatarPushModel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Client.ClientAvatarPushModel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Client.ClientAvatarPushModel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Client.ClientAvatarPushModel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCmd();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional PbModel.Common.Command Cmd = 1;
 * @return {!proto.PbModel.Common.Command}
 */
proto.PbModel.Client.ClientAvatarPushModel.prototype.getCmd = function() {
  return /** @type {!proto.PbModel.Common.Command} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.PbModel.Common.Command} value
 * @return {!proto.PbModel.Client.ClientAvatarPushModel} returns this
 */
proto.PbModel.Client.ClientAvatarPushModel.prototype.setCmd = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional bytes Data = 2;
 * @return {!(string|Uint8Array)}
 */
proto.PbModel.Client.ClientAvatarPushModel.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes Data = 2;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.PbModel.Client.ClientAvatarPushModel.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes Data = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.PbModel.Client.ClientAvatarPushModel.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.PbModel.Client.ClientAvatarPushModel} returns this
 */
proto.PbModel.Client.ClientAvatarPushModel.prototype.setData = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


goog.object.extend(exports, proto.PbModel.Client);
