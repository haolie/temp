// source: Player/PlayerGetInitData.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var Player_PlayerBaseInfo_pb = require('../Player/PlayerBaseInfo_pb.js');
goog.object.extend(proto, Player_PlayerBaseInfo_pb);
var Hero_Hero_pb = require('../Hero/Hero_pb.js');
goog.object.extend(proto, Hero_Hero_pb);
var Hero_HeroBigLvUp_pb = require('../Hero/HeroBigLvUp_pb.js');
goog.object.extend(proto, Hero_HeroBigLvUp_pb);
var Hero_HeroExclusiveInfo_pb = require('../Hero/HeroExclusiveInfo_pb.js');
goog.object.extend(proto, Hero_HeroExclusiveInfo_pb);
var Hero_HeroTalent_pb = require('../Hero/HeroTalent_pb.js');
goog.object.extend(proto, Hero_HeroTalent_pb);
var Pve_PveInfo_pb = require('../Pve/PveInfo_pb.js');
goog.object.extend(proto, Pve_PveInfo_pb);
var Collection_Collection_pb = require('../Collection/Collection_pb.js');
goog.object.extend(proto, Collection_Collection_pb);
var Goods_GoodsPBInfo_pb = require('../Goods/GoodsPBInfo_pb.js');
goog.object.extend(proto, Goods_GoodsPBInfo_pb);
var PlayerEquip_PlayerEquipModel_pb = require('../PlayerEquip/PlayerEquipModel_pb.js');
goog.object.extend(proto, PlayerEquip_PlayerEquipModel_pb);
var GroupRoom_PushGroupRoomTeam_pb = require('../GroupRoom/PushGroupRoomTeam_pb.js');
goog.object.extend(proto, GroupRoom_PushGroupRoomTeam_pb);
goog.exportSymbol('proto.PbModel.Player.PlayerGetInitDataReq', null, global);
goog.exportSymbol('proto.PbModel.Player.PlayerGetInitDataRes', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Player.PlayerGetInitDataReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Player.PlayerGetInitDataReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Player.PlayerGetInitDataReq.displayName = 'proto.PbModel.Player.PlayerGetInitDataReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Player.PlayerGetInitDataRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Player.PlayerGetInitDataRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Player.PlayerGetInitDataRes.displayName = 'proto.PbModel.Player.PlayerGetInitDataRes';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Player.PlayerGetInitDataReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Player.PlayerGetInitDataReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Player.PlayerGetInitDataReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Player.PlayerGetInitDataReq.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Player.PlayerGetInitDataReq}
 */
proto.PbModel.Player.PlayerGetInitDataReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Player.PlayerGetInitDataReq;
  return proto.PbModel.Player.PlayerGetInitDataReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Player.PlayerGetInitDataReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Player.PlayerGetInitDataReq}
 */
proto.PbModel.Player.PlayerGetInitDataReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Player.PlayerGetInitDataReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Player.PlayerGetInitDataReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Player.PlayerGetInitDataReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Player.PlayerGetInitDataReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Player.PlayerGetInitDataRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Player.PlayerGetInitDataRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Player.PlayerGetInitDataRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Player.PlayerGetInitDataRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    baseinfo: (f = msg.getBaseinfo()) && Player_PlayerBaseInfo_pb.PlayerBaseInfo.toObject(includeInstance, f),
    herosMap: (f = msg.getHerosMap()) ? f.toObject(includeInstance, proto.PbModel.Hero.HeroInfo.toObject) : [],
    herobiglvsMap: (f = msg.getHerobiglvsMap()) ? f.toObject(includeInstance, proto.PbModel.Hero.HeroBigLvUpRes.toObject) : [],
    heroexclusivesMap: (f = msg.getHeroexclusivesMap()) ? f.toObject(includeInstance, proto.PbModel.Hero.HeroExclusiveInfo.toObject) : [],
    herotalentsMap: (f = msg.getHerotalentsMap()) ? f.toObject(includeInstance, proto.PbModel.Hero.HeroTalentInfo.toObject) : [],
    pveinfo: (f = msg.getPveinfo()) && Pve_PveInfo_pb.PveInfo.toObject(includeInstance, f),
    collectionsMap: (f = msg.getCollectionsMap()) ? f.toObject(includeInstance, proto.PbModel.Collection.CollectionInfo.toObject) : [],
    herowearcollectionsMap: (f = msg.getHerowearcollectionsMap()) ? f.toObject(includeInstance, proto.PbModel.Collection.HeroWearCollectionInfo.toObject) : [],
    goodsinfodicMap: (f = msg.getGoodsinfodicMap()) ? f.toObject(includeInstance, proto.PbModel.Goods.PBGoodsMainInfo.toObject) : [],
    playerequipinfo: (f = msg.getPlayerequipinfo()) && PlayerEquip_PlayerEquipModel_pb.PlayerEquipInfo.toObject(includeInstance, f),
    heromainforceinfo: (f = msg.getHeromainforceinfo()) && Hero_Hero_pb.HeroMainForceInfo.toObject(includeInstance, f),
    herobaseinfo: (f = msg.getHerobaseinfo()) && Hero_Hero_pb.HeroBaseInfo.toObject(includeInstance, f),
    herohandbookinfo: (f = msg.getHerohandbookinfo()) && Hero_Hero_pb.HeroHandBookInfo.toObject(includeInstance, f),
    grouproom: (f = msg.getGrouproom()) && GroupRoom_PushGroupRoomTeam_pb.PushGroupRoomTeamRes.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Player.PlayerGetInitDataRes}
 */
proto.PbModel.Player.PlayerGetInitDataRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Player.PlayerGetInitDataRes;
  return proto.PbModel.Player.PlayerGetInitDataRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Player.PlayerGetInitDataRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Player.PlayerGetInitDataRes}
 */
proto.PbModel.Player.PlayerGetInitDataRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new Player_PlayerBaseInfo_pb.PlayerBaseInfo;
      reader.readMessage(value,Player_PlayerBaseInfo_pb.PlayerBaseInfo.deserializeBinaryFromReader);
      msg.setBaseinfo(value);
      break;
    case 2:
      var value = msg.getHerosMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.PbModel.Hero.HeroInfo.deserializeBinaryFromReader, "", new proto.PbModel.Hero.HeroInfo());
         });
      break;
    case 3:
      var value = msg.getHerobiglvsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.PbModel.Hero.HeroBigLvUpRes.deserializeBinaryFromReader, "", new proto.PbModel.Hero.HeroBigLvUpRes());
         });
      break;
    case 4:
      var value = msg.getHeroexclusivesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.PbModel.Hero.HeroExclusiveInfo.deserializeBinaryFromReader, "", new proto.PbModel.Hero.HeroExclusiveInfo());
         });
      break;
    case 5:
      var value = msg.getHerotalentsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.PbModel.Hero.HeroTalentInfo.deserializeBinaryFromReader, "", new proto.PbModel.Hero.HeroTalentInfo());
         });
      break;
    case 6:
      var value = new Pve_PveInfo_pb.PveInfo;
      reader.readMessage(value,Pve_PveInfo_pb.PveInfo.deserializeBinaryFromReader);
      msg.setPveinfo(value);
      break;
    case 7:
      var value = msg.getCollectionsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.PbModel.Collection.CollectionInfo.deserializeBinaryFromReader, "", new proto.PbModel.Collection.CollectionInfo());
         });
      break;
    case 8:
      var value = msg.getHerowearcollectionsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.PbModel.Collection.HeroWearCollectionInfo.deserializeBinaryFromReader, "", new proto.PbModel.Collection.HeroWearCollectionInfo());
         });
      break;
    case 9:
      var value = msg.getGoodsinfodicMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readMessage, proto.PbModel.Goods.PBGoodsMainInfo.deserializeBinaryFromReader, 0, new proto.PbModel.Goods.PBGoodsMainInfo());
         });
      break;
    case 10:
      var value = new PlayerEquip_PlayerEquipModel_pb.PlayerEquipInfo;
      reader.readMessage(value,PlayerEquip_PlayerEquipModel_pb.PlayerEquipInfo.deserializeBinaryFromReader);
      msg.setPlayerequipinfo(value);
      break;
    case 11:
      var value = new Hero_Hero_pb.HeroMainForceInfo;
      reader.readMessage(value,Hero_Hero_pb.HeroMainForceInfo.deserializeBinaryFromReader);
      msg.setHeromainforceinfo(value);
      break;
    case 12:
      var value = new Hero_Hero_pb.HeroBaseInfo;
      reader.readMessage(value,Hero_Hero_pb.HeroBaseInfo.deserializeBinaryFromReader);
      msg.setHerobaseinfo(value);
      break;
    case 13:
      var value = new Hero_Hero_pb.HeroHandBookInfo;
      reader.readMessage(value,Hero_Hero_pb.HeroHandBookInfo.deserializeBinaryFromReader);
      msg.setHerohandbookinfo(value);
      break;
    case 14:
      var value = new GroupRoom_PushGroupRoomTeam_pb.PushGroupRoomTeamRes;
      reader.readMessage(value,GroupRoom_PushGroupRoomTeam_pb.PushGroupRoomTeamRes.deserializeBinaryFromReader);
      msg.setGrouproom(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Player.PlayerGetInitDataRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Player.PlayerGetInitDataRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Player.PlayerGetInitDataRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Player.PlayerGetInitDataRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBaseinfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      Player_PlayerBaseInfo_pb.PlayerBaseInfo.serializeBinaryToWriter
    );
  }
  f = message.getHerosMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.PbModel.Hero.HeroInfo.serializeBinaryToWriter);
  }
  f = message.getHerobiglvsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.PbModel.Hero.HeroBigLvUpRes.serializeBinaryToWriter);
  }
  f = message.getHeroexclusivesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.PbModel.Hero.HeroExclusiveInfo.serializeBinaryToWriter);
  }
  f = message.getHerotalentsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(5, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.PbModel.Hero.HeroTalentInfo.serializeBinaryToWriter);
  }
  f = message.getPveinfo();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      Pve_PveInfo_pb.PveInfo.serializeBinaryToWriter
    );
  }
  f = message.getCollectionsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(7, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.PbModel.Collection.CollectionInfo.serializeBinaryToWriter);
  }
  f = message.getHerowearcollectionsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(8, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.PbModel.Collection.HeroWearCollectionInfo.serializeBinaryToWriter);
  }
  f = message.getGoodsinfodicMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(9, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeMessage, proto.PbModel.Goods.PBGoodsMainInfo.serializeBinaryToWriter);
  }
  f = message.getPlayerequipinfo();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      PlayerEquip_PlayerEquipModel_pb.PlayerEquipInfo.serializeBinaryToWriter
    );
  }
  f = message.getHeromainforceinfo();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      Hero_Hero_pb.HeroMainForceInfo.serializeBinaryToWriter
    );
  }
  f = message.getHerobaseinfo();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      Hero_Hero_pb.HeroBaseInfo.serializeBinaryToWriter
    );
  }
  f = message.getHerohandbookinfo();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      Hero_Hero_pb.HeroHandBookInfo.serializeBinaryToWriter
    );
  }
  f = message.getGrouproom();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      GroupRoom_PushGroupRoomTeam_pb.PushGroupRoomTeamRes.serializeBinaryToWriter
    );
  }
};


/**
 * optional PlayerBaseInfo BaseInfo = 1;
 * @return {?proto.PbModel.Player.PlayerBaseInfo}
 */
proto.PbModel.Player.PlayerGetInitDataRes.prototype.getBaseinfo = function() {
  return /** @type{?proto.PbModel.Player.PlayerBaseInfo} */ (
    jspb.Message.getWrapperField(this, Player_PlayerBaseInfo_pb.PlayerBaseInfo, 1));
};


/**
 * @param {?proto.PbModel.Player.PlayerBaseInfo|undefined} value
 * @return {!proto.PbModel.Player.PlayerGetInitDataRes} returns this
*/
proto.PbModel.Player.PlayerGetInitDataRes.prototype.setBaseinfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.Player.PlayerGetInitDataRes} returns this
 */
proto.PbModel.Player.PlayerGetInitDataRes.prototype.clearBaseinfo = function() {
  return this.setBaseinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.Player.PlayerGetInitDataRes.prototype.hasBaseinfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * map<string, PbModel.Hero.HeroInfo> Heros = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.PbModel.Hero.HeroInfo>}
 */
proto.PbModel.Player.PlayerGetInitDataRes.prototype.getHerosMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.PbModel.Hero.HeroInfo>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      proto.PbModel.Hero.HeroInfo));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.PbModel.Player.PlayerGetInitDataRes} returns this
 */
proto.PbModel.Player.PlayerGetInitDataRes.prototype.clearHerosMap = function() {
  this.getHerosMap().clear();
  return this;};


/**
 * map<string, PbModel.Hero.HeroBigLvUpRes> HeroBigLvs = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.PbModel.Hero.HeroBigLvUpRes>}
 */
proto.PbModel.Player.PlayerGetInitDataRes.prototype.getHerobiglvsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.PbModel.Hero.HeroBigLvUpRes>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      proto.PbModel.Hero.HeroBigLvUpRes));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.PbModel.Player.PlayerGetInitDataRes} returns this
 */
proto.PbModel.Player.PlayerGetInitDataRes.prototype.clearHerobiglvsMap = function() {
  this.getHerobiglvsMap().clear();
  return this;};


/**
 * map<string, PbModel.Hero.HeroExclusiveInfo> HeroExclusives = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.PbModel.Hero.HeroExclusiveInfo>}
 */
proto.PbModel.Player.PlayerGetInitDataRes.prototype.getHeroexclusivesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.PbModel.Hero.HeroExclusiveInfo>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      proto.PbModel.Hero.HeroExclusiveInfo));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.PbModel.Player.PlayerGetInitDataRes} returns this
 */
proto.PbModel.Player.PlayerGetInitDataRes.prototype.clearHeroexclusivesMap = function() {
  this.getHeroexclusivesMap().clear();
  return this;};


/**
 * map<string, PbModel.Hero.HeroTalentInfo> HeroTalents = 5;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.PbModel.Hero.HeroTalentInfo>}
 */
proto.PbModel.Player.PlayerGetInitDataRes.prototype.getHerotalentsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.PbModel.Hero.HeroTalentInfo>} */ (
      jspb.Message.getMapField(this, 5, opt_noLazyCreate,
      proto.PbModel.Hero.HeroTalentInfo));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.PbModel.Player.PlayerGetInitDataRes} returns this
 */
proto.PbModel.Player.PlayerGetInitDataRes.prototype.clearHerotalentsMap = function() {
  this.getHerotalentsMap().clear();
  return this;};


/**
 * optional PbModel.Pve.PveInfo PveInfo = 6;
 * @return {?proto.PbModel.Pve.PveInfo}
 */
proto.PbModel.Player.PlayerGetInitDataRes.prototype.getPveinfo = function() {
  return /** @type{?proto.PbModel.Pve.PveInfo} */ (
    jspb.Message.getWrapperField(this, Pve_PveInfo_pb.PveInfo, 6));
};


/**
 * @param {?proto.PbModel.Pve.PveInfo|undefined} value
 * @return {!proto.PbModel.Player.PlayerGetInitDataRes} returns this
*/
proto.PbModel.Player.PlayerGetInitDataRes.prototype.setPveinfo = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.Player.PlayerGetInitDataRes} returns this
 */
proto.PbModel.Player.PlayerGetInitDataRes.prototype.clearPveinfo = function() {
  return this.setPveinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.Player.PlayerGetInitDataRes.prototype.hasPveinfo = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * map<string, PbModel.Collection.CollectionInfo> Collections = 7;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.PbModel.Collection.CollectionInfo>}
 */
proto.PbModel.Player.PlayerGetInitDataRes.prototype.getCollectionsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.PbModel.Collection.CollectionInfo>} */ (
      jspb.Message.getMapField(this, 7, opt_noLazyCreate,
      proto.PbModel.Collection.CollectionInfo));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.PbModel.Player.PlayerGetInitDataRes} returns this
 */
proto.PbModel.Player.PlayerGetInitDataRes.prototype.clearCollectionsMap = function() {
  this.getCollectionsMap().clear();
  return this;};


/**
 * map<string, PbModel.Collection.HeroWearCollectionInfo> HeroWearCollections = 8;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.PbModel.Collection.HeroWearCollectionInfo>}
 */
proto.PbModel.Player.PlayerGetInitDataRes.prototype.getHerowearcollectionsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.PbModel.Collection.HeroWearCollectionInfo>} */ (
      jspb.Message.getMapField(this, 8, opt_noLazyCreate,
      proto.PbModel.Collection.HeroWearCollectionInfo));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.PbModel.Player.PlayerGetInitDataRes} returns this
 */
proto.PbModel.Player.PlayerGetInitDataRes.prototype.clearHerowearcollectionsMap = function() {
  this.getHerowearcollectionsMap().clear();
  return this;};


/**
 * map<int32, PbModel.Goods.PBGoodsMainInfo> GoodsInfoDic = 9;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,!proto.PbModel.Goods.PBGoodsMainInfo>}
 */
proto.PbModel.Player.PlayerGetInitDataRes.prototype.getGoodsinfodicMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,!proto.PbModel.Goods.PBGoodsMainInfo>} */ (
      jspb.Message.getMapField(this, 9, opt_noLazyCreate,
      proto.PbModel.Goods.PBGoodsMainInfo));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.PbModel.Player.PlayerGetInitDataRes} returns this
 */
proto.PbModel.Player.PlayerGetInitDataRes.prototype.clearGoodsinfodicMap = function() {
  this.getGoodsinfodicMap().clear();
  return this;};


/**
 * optional PbModel.PlayerEquip.PlayerEquipInfo PlayerEquipInfo = 10;
 * @return {?proto.PbModel.PlayerEquip.PlayerEquipInfo}
 */
proto.PbModel.Player.PlayerGetInitDataRes.prototype.getPlayerequipinfo = function() {
  return /** @type{?proto.PbModel.PlayerEquip.PlayerEquipInfo} */ (
    jspb.Message.getWrapperField(this, PlayerEquip_PlayerEquipModel_pb.PlayerEquipInfo, 10));
};


/**
 * @param {?proto.PbModel.PlayerEquip.PlayerEquipInfo|undefined} value
 * @return {!proto.PbModel.Player.PlayerGetInitDataRes} returns this
*/
proto.PbModel.Player.PlayerGetInitDataRes.prototype.setPlayerequipinfo = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.Player.PlayerGetInitDataRes} returns this
 */
proto.PbModel.Player.PlayerGetInitDataRes.prototype.clearPlayerequipinfo = function() {
  return this.setPlayerequipinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.Player.PlayerGetInitDataRes.prototype.hasPlayerequipinfo = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional PbModel.Hero.HeroMainForceInfo HeroMainForceInfo = 11;
 * @return {?proto.PbModel.Hero.HeroMainForceInfo}
 */
proto.PbModel.Player.PlayerGetInitDataRes.prototype.getHeromainforceinfo = function() {
  return /** @type{?proto.PbModel.Hero.HeroMainForceInfo} */ (
    jspb.Message.getWrapperField(this, Hero_Hero_pb.HeroMainForceInfo, 11));
};


/**
 * @param {?proto.PbModel.Hero.HeroMainForceInfo|undefined} value
 * @return {!proto.PbModel.Player.PlayerGetInitDataRes} returns this
*/
proto.PbModel.Player.PlayerGetInitDataRes.prototype.setHeromainforceinfo = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.Player.PlayerGetInitDataRes} returns this
 */
proto.PbModel.Player.PlayerGetInitDataRes.prototype.clearHeromainforceinfo = function() {
  return this.setHeromainforceinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.Player.PlayerGetInitDataRes.prototype.hasHeromainforceinfo = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional PbModel.Hero.HeroBaseInfo HeroBaseInfo = 12;
 * @return {?proto.PbModel.Hero.HeroBaseInfo}
 */
proto.PbModel.Player.PlayerGetInitDataRes.prototype.getHerobaseinfo = function() {
  return /** @type{?proto.PbModel.Hero.HeroBaseInfo} */ (
    jspb.Message.getWrapperField(this, Hero_Hero_pb.HeroBaseInfo, 12));
};


/**
 * @param {?proto.PbModel.Hero.HeroBaseInfo|undefined} value
 * @return {!proto.PbModel.Player.PlayerGetInitDataRes} returns this
*/
proto.PbModel.Player.PlayerGetInitDataRes.prototype.setHerobaseinfo = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.Player.PlayerGetInitDataRes} returns this
 */
proto.PbModel.Player.PlayerGetInitDataRes.prototype.clearHerobaseinfo = function() {
  return this.setHerobaseinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.Player.PlayerGetInitDataRes.prototype.hasHerobaseinfo = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional PbModel.Hero.HeroHandBookInfo HeroHandBookInfo = 13;
 * @return {?proto.PbModel.Hero.HeroHandBookInfo}
 */
proto.PbModel.Player.PlayerGetInitDataRes.prototype.getHerohandbookinfo = function() {
  return /** @type{?proto.PbModel.Hero.HeroHandBookInfo} */ (
    jspb.Message.getWrapperField(this, Hero_Hero_pb.HeroHandBookInfo, 13));
};


/**
 * @param {?proto.PbModel.Hero.HeroHandBookInfo|undefined} value
 * @return {!proto.PbModel.Player.PlayerGetInitDataRes} returns this
*/
proto.PbModel.Player.PlayerGetInitDataRes.prototype.setHerohandbookinfo = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.Player.PlayerGetInitDataRes} returns this
 */
proto.PbModel.Player.PlayerGetInitDataRes.prototype.clearHerohandbookinfo = function() {
  return this.setHerohandbookinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.Player.PlayerGetInitDataRes.prototype.hasHerohandbookinfo = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional PbModel.GroupRoom.PushGroupRoomTeamRes GroupRoom = 14;
 * @return {?proto.PbModel.GroupRoom.PushGroupRoomTeamRes}
 */
proto.PbModel.Player.PlayerGetInitDataRes.prototype.getGrouproom = function() {
  return /** @type{?proto.PbModel.GroupRoom.PushGroupRoomTeamRes} */ (
    jspb.Message.getWrapperField(this, GroupRoom_PushGroupRoomTeam_pb.PushGroupRoomTeamRes, 14));
};


/**
 * @param {?proto.PbModel.GroupRoom.PushGroupRoomTeamRes|undefined} value
 * @return {!proto.PbModel.Player.PlayerGetInitDataRes} returns this
*/
proto.PbModel.Player.PlayerGetInitDataRes.prototype.setGrouproom = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.Player.PlayerGetInitDataRes} returns this
 */
proto.PbModel.Player.PlayerGetInitDataRes.prototype.clearGrouproom = function() {
  return this.setGrouproom(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.Player.PlayerGetInitDataRes.prototype.hasGrouproom = function() {
  return jspb.Message.getField(this, 14) != null;
};


goog.object.extend(exports, proto.PbModel.Player);
