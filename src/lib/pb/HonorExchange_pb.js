// source: HonorExchange.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var Resource_pb = require('./Resource_pb.js');
goog.object.extend(proto, Resource_pb);
goog.exportSymbol('proto.PbModel.HonorExchange.HonorExchangeGetInfoReq', null, global);
goog.exportSymbol('proto.PbModel.HonorExchange.HonorExchangeGetInfoRes', null, global);
goog.exportSymbol('proto.PbModel.HonorExchange.HonorExchangeListenTaskObj', null, global);
goog.exportSymbol('proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardReq', null, global);
goog.exportSymbol('proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardRes', null, global);
goog.exportSymbol('proto.PbModel.HonorExchange.HonorExchangeTaskObj', null, global);
goog.exportSymbol('proto.PbModel.HonorExchange.HonorExchangeTaskRewardReq', null, global);
goog.exportSymbol('proto.PbModel.HonorExchange.HonorExchangeTaskRewardRes', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.HonorExchange.HonorExchangeGetInfoReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.HonorExchange.HonorExchangeGetInfoReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.HonorExchange.HonorExchangeGetInfoReq.displayName = 'proto.PbModel.HonorExchange.HonorExchangeGetInfoReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.HonorExchange.HonorExchangeGetInfoRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.HonorExchange.HonorExchangeGetInfoRes.repeatedFields_, null);
};
goog.inherits(proto.PbModel.HonorExchange.HonorExchangeGetInfoRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.HonorExchange.HonorExchangeGetInfoRes.displayName = 'proto.PbModel.HonorExchange.HonorExchangeGetInfoRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardReq.displayName = 'proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardRes.repeatedFields_, null);
};
goog.inherits(proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardRes.displayName = 'proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.HonorExchange.HonorExchangeTaskObj = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.HonorExchange.HonorExchangeTaskObj, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.HonorExchange.HonorExchangeTaskObj.displayName = 'proto.PbModel.HonorExchange.HonorExchangeTaskObj';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.HonorExchange.HonorExchangeListenTaskObj = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.HonorExchange.HonorExchangeListenTaskObj, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.HonorExchange.HonorExchangeListenTaskObj.displayName = 'proto.PbModel.HonorExchange.HonorExchangeListenTaskObj';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.HonorExchange.HonorExchangeTaskRewardReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.HonorExchange.HonorExchangeTaskRewardReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.HonorExchange.HonorExchangeTaskRewardReq.displayName = 'proto.PbModel.HonorExchange.HonorExchangeTaskRewardReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.HonorExchange.HonorExchangeTaskRewardRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.HonorExchange.HonorExchangeTaskRewardRes.repeatedFields_, null);
};
goog.inherits(proto.PbModel.HonorExchange.HonorExchangeTaskRewardRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.HonorExchange.HonorExchangeTaskRewardRes.displayName = 'proto.PbModel.HonorExchange.HonorExchangeTaskRewardRes';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.HonorExchange.HonorExchangeGetInfoReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.HonorExchange.HonorExchangeGetInfoReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.HonorExchange.HonorExchangeGetInfoReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.HonorExchange.HonorExchangeGetInfoReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    activityid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.HonorExchange.HonorExchangeGetInfoReq}
 */
proto.PbModel.HonorExchange.HonorExchangeGetInfoReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.HonorExchange.HonorExchangeGetInfoReq;
  return proto.PbModel.HonorExchange.HonorExchangeGetInfoReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.HonorExchange.HonorExchangeGetInfoReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.HonorExchange.HonorExchangeGetInfoReq}
 */
proto.PbModel.HonorExchange.HonorExchangeGetInfoReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setActivityid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.HonorExchange.HonorExchangeGetInfoReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.HonorExchange.HonorExchangeGetInfoReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.HonorExchange.HonorExchangeGetInfoReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.HonorExchange.HonorExchangeGetInfoReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActivityid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 ActivityId = 1;
 * @return {number}
 */
proto.PbModel.HonorExchange.HonorExchangeGetInfoReq.prototype.getActivityid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.HonorExchange.HonorExchangeGetInfoReq} returns this
 */
proto.PbModel.HonorExchange.HonorExchangeGetInfoReq.prototype.setActivityid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.HonorExchange.HonorExchangeGetInfoRes.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.HonorExchange.HonorExchangeGetInfoRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.HonorExchange.HonorExchangeGetInfoRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.HonorExchange.HonorExchangeGetInfoRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.HonorExchange.HonorExchangeGetInfoRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    honorexchangetaskinfoList: jspb.Message.toObjectList(msg.getHonorexchangetaskinfoList(),
    proto.PbModel.HonorExchange.HonorExchangeTaskObj.toObject, includeInstance),
    honorexchangelistentaskinfoList: jspb.Message.toObjectList(msg.getHonorexchangelistentaskinfoList(),
    proto.PbModel.HonorExchange.HonorExchangeListenTaskObj.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.HonorExchange.HonorExchangeGetInfoRes}
 */
proto.PbModel.HonorExchange.HonorExchangeGetInfoRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.HonorExchange.HonorExchangeGetInfoRes;
  return proto.PbModel.HonorExchange.HonorExchangeGetInfoRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.HonorExchange.HonorExchangeGetInfoRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.HonorExchange.HonorExchangeGetInfoRes}
 */
proto.PbModel.HonorExchange.HonorExchangeGetInfoRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PbModel.HonorExchange.HonorExchangeTaskObj;
      reader.readMessage(value,proto.PbModel.HonorExchange.HonorExchangeTaskObj.deserializeBinaryFromReader);
      msg.addHonorexchangetaskinfo(value);
      break;
    case 2:
      var value = new proto.PbModel.HonorExchange.HonorExchangeListenTaskObj;
      reader.readMessage(value,proto.PbModel.HonorExchange.HonorExchangeListenTaskObj.deserializeBinaryFromReader);
      msg.addHonorexchangelistentaskinfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.HonorExchange.HonorExchangeGetInfoRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.HonorExchange.HonorExchangeGetInfoRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.HonorExchange.HonorExchangeGetInfoRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.HonorExchange.HonorExchangeGetInfoRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHonorexchangetaskinfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.PbModel.HonorExchange.HonorExchangeTaskObj.serializeBinaryToWriter
    );
  }
  f = message.getHonorexchangelistentaskinfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.PbModel.HonorExchange.HonorExchangeListenTaskObj.serializeBinaryToWriter
    );
  }
};


/**
 * repeated HonorExchangeTaskObj HonorExchangeTaskInfo = 1;
 * @return {!Array<!proto.PbModel.HonorExchange.HonorExchangeTaskObj>}
 */
proto.PbModel.HonorExchange.HonorExchangeGetInfoRes.prototype.getHonorexchangetaskinfoList = function() {
  return /** @type{!Array<!proto.PbModel.HonorExchange.HonorExchangeTaskObj>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.HonorExchange.HonorExchangeTaskObj, 1));
};


/**
 * @param {!Array<!proto.PbModel.HonorExchange.HonorExchangeTaskObj>} value
 * @return {!proto.PbModel.HonorExchange.HonorExchangeGetInfoRes} returns this
*/
proto.PbModel.HonorExchange.HonorExchangeGetInfoRes.prototype.setHonorexchangetaskinfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.PbModel.HonorExchange.HonorExchangeTaskObj=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.HonorExchange.HonorExchangeTaskObj}
 */
proto.PbModel.HonorExchange.HonorExchangeGetInfoRes.prototype.addHonorexchangetaskinfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.PbModel.HonorExchange.HonorExchangeTaskObj, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.HonorExchange.HonorExchangeGetInfoRes} returns this
 */
proto.PbModel.HonorExchange.HonorExchangeGetInfoRes.prototype.clearHonorexchangetaskinfoList = function() {
  return this.setHonorexchangetaskinfoList([]);
};


/**
 * repeated HonorExchangeListenTaskObj HonorExchangeListenTaskInfo = 2;
 * @return {!Array<!proto.PbModel.HonorExchange.HonorExchangeListenTaskObj>}
 */
proto.PbModel.HonorExchange.HonorExchangeGetInfoRes.prototype.getHonorexchangelistentaskinfoList = function() {
  return /** @type{!Array<!proto.PbModel.HonorExchange.HonorExchangeListenTaskObj>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.HonorExchange.HonorExchangeListenTaskObj, 2));
};


/**
 * @param {!Array<!proto.PbModel.HonorExchange.HonorExchangeListenTaskObj>} value
 * @return {!proto.PbModel.HonorExchange.HonorExchangeGetInfoRes} returns this
*/
proto.PbModel.HonorExchange.HonorExchangeGetInfoRes.prototype.setHonorexchangelistentaskinfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.PbModel.HonorExchange.HonorExchangeListenTaskObj=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.HonorExchange.HonorExchangeListenTaskObj}
 */
proto.PbModel.HonorExchange.HonorExchangeGetInfoRes.prototype.addHonorexchangelistentaskinfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.PbModel.HonorExchange.HonorExchangeListenTaskObj, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.HonorExchange.HonorExchangeGetInfoRes} returns this
 */
proto.PbModel.HonorExchange.HonorExchangeGetInfoRes.prototype.clearHonorexchangelistentaskinfoList = function() {
  return this.setHonorexchangelistentaskinfoList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    activityid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    orderid: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardReq}
 */
proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardReq;
  return proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardReq}
 */
proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setActivityid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOrderid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActivityid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getOrderid();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 ActivityId = 1;
 * @return {number}
 */
proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardReq.prototype.getActivityid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardReq} returns this
 */
proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardReq.prototype.setActivityid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 OrderId = 2;
 * @return {number}
 */
proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardReq.prototype.getOrderid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardReq} returns this
 */
proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardReq.prototype.setOrderid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardRes.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    honorexchangetaskinfoList: jspb.Message.toObjectList(msg.getHonorexchangetaskinfoList(),
    proto.PbModel.HonorExchange.HonorExchangeTaskObj.toObject, includeInstance),
    honorexchangelistentaskinfoList: jspb.Message.toObjectList(msg.getHonorexchangelistentaskinfoList(),
    proto.PbModel.HonorExchange.HonorExchangeListenTaskObj.toObject, includeInstance),
    basegetgameresourcelist: (f = msg.getBasegetgameresourcelist()) && Resource_pb.ResourceToClientModel.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardRes}
 */
proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardRes;
  return proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardRes}
 */
proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PbModel.HonorExchange.HonorExchangeTaskObj;
      reader.readMessage(value,proto.PbModel.HonorExchange.HonorExchangeTaskObj.deserializeBinaryFromReader);
      msg.addHonorexchangetaskinfo(value);
      break;
    case 2:
      var value = new proto.PbModel.HonorExchange.HonorExchangeListenTaskObj;
      reader.readMessage(value,proto.PbModel.HonorExchange.HonorExchangeListenTaskObj.deserializeBinaryFromReader);
      msg.addHonorexchangelistentaskinfo(value);
      break;
    case 3:
      var value = new Resource_pb.ResourceToClientModel;
      reader.readMessage(value,Resource_pb.ResourceToClientModel.deserializeBinaryFromReader);
      msg.setBasegetgameresourcelist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHonorexchangetaskinfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.PbModel.HonorExchange.HonorExchangeTaskObj.serializeBinaryToWriter
    );
  }
  f = message.getHonorexchangelistentaskinfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.PbModel.HonorExchange.HonorExchangeListenTaskObj.serializeBinaryToWriter
    );
  }
  f = message.getBasegetgameresourcelist();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      Resource_pb.ResourceToClientModel.serializeBinaryToWriter
    );
  }
};


/**
 * repeated HonorExchangeTaskObj HonorExchangeTaskInfo = 1;
 * @return {!Array<!proto.PbModel.HonorExchange.HonorExchangeTaskObj>}
 */
proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardRes.prototype.getHonorexchangetaskinfoList = function() {
  return /** @type{!Array<!proto.PbModel.HonorExchange.HonorExchangeTaskObj>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.HonorExchange.HonorExchangeTaskObj, 1));
};


/**
 * @param {!Array<!proto.PbModel.HonorExchange.HonorExchangeTaskObj>} value
 * @return {!proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardRes} returns this
*/
proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardRes.prototype.setHonorexchangetaskinfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.PbModel.HonorExchange.HonorExchangeTaskObj=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.HonorExchange.HonorExchangeTaskObj}
 */
proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardRes.prototype.addHonorexchangetaskinfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.PbModel.HonorExchange.HonorExchangeTaskObj, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardRes} returns this
 */
proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardRes.prototype.clearHonorexchangetaskinfoList = function() {
  return this.setHonorexchangetaskinfoList([]);
};


/**
 * repeated HonorExchangeListenTaskObj HonorExchangeListenTaskInfo = 2;
 * @return {!Array<!proto.PbModel.HonorExchange.HonorExchangeListenTaskObj>}
 */
proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardRes.prototype.getHonorexchangelistentaskinfoList = function() {
  return /** @type{!Array<!proto.PbModel.HonorExchange.HonorExchangeListenTaskObj>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.HonorExchange.HonorExchangeListenTaskObj, 2));
};


/**
 * @param {!Array<!proto.PbModel.HonorExchange.HonorExchangeListenTaskObj>} value
 * @return {!proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardRes} returns this
*/
proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardRes.prototype.setHonorexchangelistentaskinfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.PbModel.HonorExchange.HonorExchangeListenTaskObj=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.HonorExchange.HonorExchangeListenTaskObj}
 */
proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardRes.prototype.addHonorexchangelistentaskinfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.PbModel.HonorExchange.HonorExchangeListenTaskObj, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardRes} returns this
 */
proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardRes.prototype.clearHonorexchangelistentaskinfoList = function() {
  return this.setHonorexchangelistentaskinfoList([]);
};


/**
 * optional PbModel.Resource.ResourceToClientModel BaseGetGameResourceList = 3;
 * @return {?proto.PbModel.Resource.ResourceToClientModel}
 */
proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardRes.prototype.getBasegetgameresourcelist = function() {
  return /** @type{?proto.PbModel.Resource.ResourceToClientModel} */ (
    jspb.Message.getWrapperField(this, Resource_pb.ResourceToClientModel, 3));
};


/**
 * @param {?proto.PbModel.Resource.ResourceToClientModel|undefined} value
 * @return {!proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardRes} returns this
*/
proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardRes.prototype.setBasegetgameresourcelist = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardRes} returns this
 */
proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardRes.prototype.clearBasegetgameresourcelist = function() {
  return this.setBasegetgameresourcelist(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.HonorExchange.HonorExchangeListenTaskRewardRes.prototype.hasBasegetgameresourcelist = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.HonorExchange.HonorExchangeTaskObj.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.HonorExchange.HonorExchangeTaskObj.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.HonorExchange.HonorExchangeTaskObj} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.HonorExchange.HonorExchangeTaskObj.toObject = function(includeInstance, msg) {
  var f, obj = {
    orderid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    condition: jspb.Message.getFieldWithDefault(msg, 3, 0),
    rewardstr: jspb.Message.getFieldWithDefault(msg, 4, ""),
    progress: jspb.Message.getFieldWithDefault(msg, 5, 0),
    iscanget: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    isget: jspb.Message.getBooleanFieldWithDefault(msg, 7, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.HonorExchange.HonorExchangeTaskObj}
 */
proto.PbModel.HonorExchange.HonorExchangeTaskObj.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.HonorExchange.HonorExchangeTaskObj;
  return proto.PbModel.HonorExchange.HonorExchangeTaskObj.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.HonorExchange.HonorExchangeTaskObj} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.HonorExchange.HonorExchangeTaskObj}
 */
proto.PbModel.HonorExchange.HonorExchangeTaskObj.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOrderid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCondition(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRewardstr(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setProgress(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIscanget(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsget(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.HonorExchange.HonorExchangeTaskObj.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.HonorExchange.HonorExchangeTaskObj.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.HonorExchange.HonorExchangeTaskObj} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.HonorExchange.HonorExchangeTaskObj.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrderid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCondition();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getRewardstr();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getProgress();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getIscanget();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getIsget();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
};


/**
 * optional int32 OrderId = 1;
 * @return {number}
 */
proto.PbModel.HonorExchange.HonorExchangeTaskObj.prototype.getOrderid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.HonorExchange.HonorExchangeTaskObj} returns this
 */
proto.PbModel.HonorExchange.HonorExchangeTaskObj.prototype.setOrderid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string Description = 2;
 * @return {string}
 */
proto.PbModel.HonorExchange.HonorExchangeTaskObj.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.HonorExchange.HonorExchangeTaskObj} returns this
 */
proto.PbModel.HonorExchange.HonorExchangeTaskObj.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 Condition = 3;
 * @return {number}
 */
proto.PbModel.HonorExchange.HonorExchangeTaskObj.prototype.getCondition = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.HonorExchange.HonorExchangeTaskObj} returns this
 */
proto.PbModel.HonorExchange.HonorExchangeTaskObj.prototype.setCondition = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string RewardStr = 4;
 * @return {string}
 */
proto.PbModel.HonorExchange.HonorExchangeTaskObj.prototype.getRewardstr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.HonorExchange.HonorExchangeTaskObj} returns this
 */
proto.PbModel.HonorExchange.HonorExchangeTaskObj.prototype.setRewardstr = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 Progress = 5;
 * @return {number}
 */
proto.PbModel.HonorExchange.HonorExchangeTaskObj.prototype.getProgress = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.HonorExchange.HonorExchangeTaskObj} returns this
 */
proto.PbModel.HonorExchange.HonorExchangeTaskObj.prototype.setProgress = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional bool IsCanGet = 6;
 * @return {boolean}
 */
proto.PbModel.HonorExchange.HonorExchangeTaskObj.prototype.getIscanget = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PbModel.HonorExchange.HonorExchangeTaskObj} returns this
 */
proto.PbModel.HonorExchange.HonorExchangeTaskObj.prototype.setIscanget = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional bool IsGet = 7;
 * @return {boolean}
 */
proto.PbModel.HonorExchange.HonorExchangeTaskObj.prototype.getIsget = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PbModel.HonorExchange.HonorExchangeTaskObj} returns this
 */
proto.PbModel.HonorExchange.HonorExchangeTaskObj.prototype.setIsget = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.HonorExchange.HonorExchangeListenTaskObj.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.HonorExchange.HonorExchangeListenTaskObj.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.HonorExchange.HonorExchangeListenTaskObj} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.HonorExchange.HonorExchangeListenTaskObj.toObject = function(includeInstance, msg) {
  var f, obj = {
    orderid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    needfinishcount: jspb.Message.getFieldWithDefault(msg, 3, 0),
    rewardstr: jspb.Message.getFieldWithDefault(msg, 4, ""),
    finishcount: jspb.Message.getFieldWithDefault(msg, 5, 0),
    iscanget: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    isget: jspb.Message.getBooleanFieldWithDefault(msg, 7, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.HonorExchange.HonorExchangeListenTaskObj}
 */
proto.PbModel.HonorExchange.HonorExchangeListenTaskObj.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.HonorExchange.HonorExchangeListenTaskObj;
  return proto.PbModel.HonorExchange.HonorExchangeListenTaskObj.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.HonorExchange.HonorExchangeListenTaskObj} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.HonorExchange.HonorExchangeListenTaskObj}
 */
proto.PbModel.HonorExchange.HonorExchangeListenTaskObj.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOrderid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNeedfinishcount(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRewardstr(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFinishcount(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIscanget(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsget(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.HonorExchange.HonorExchangeListenTaskObj.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.HonorExchange.HonorExchangeListenTaskObj.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.HonorExchange.HonorExchangeListenTaskObj} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.HonorExchange.HonorExchangeListenTaskObj.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrderid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getNeedfinishcount();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getRewardstr();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getFinishcount();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getIscanget();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getIsget();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
};


/**
 * optional int32 OrderId = 1;
 * @return {number}
 */
proto.PbModel.HonorExchange.HonorExchangeListenTaskObj.prototype.getOrderid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.HonorExchange.HonorExchangeListenTaskObj} returns this
 */
proto.PbModel.HonorExchange.HonorExchangeListenTaskObj.prototype.setOrderid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string Description = 2;
 * @return {string}
 */
proto.PbModel.HonorExchange.HonorExchangeListenTaskObj.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.HonorExchange.HonorExchangeListenTaskObj} returns this
 */
proto.PbModel.HonorExchange.HonorExchangeListenTaskObj.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 NeedFinishCount = 3;
 * @return {number}
 */
proto.PbModel.HonorExchange.HonorExchangeListenTaskObj.prototype.getNeedfinishcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.HonorExchange.HonorExchangeListenTaskObj} returns this
 */
proto.PbModel.HonorExchange.HonorExchangeListenTaskObj.prototype.setNeedfinishcount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string RewardStr = 4;
 * @return {string}
 */
proto.PbModel.HonorExchange.HonorExchangeListenTaskObj.prototype.getRewardstr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.HonorExchange.HonorExchangeListenTaskObj} returns this
 */
proto.PbModel.HonorExchange.HonorExchangeListenTaskObj.prototype.setRewardstr = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 FinishCount = 5;
 * @return {number}
 */
proto.PbModel.HonorExchange.HonorExchangeListenTaskObj.prototype.getFinishcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.HonorExchange.HonorExchangeListenTaskObj} returns this
 */
proto.PbModel.HonorExchange.HonorExchangeListenTaskObj.prototype.setFinishcount = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional bool IsCanGet = 6;
 * @return {boolean}
 */
proto.PbModel.HonorExchange.HonorExchangeListenTaskObj.prototype.getIscanget = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PbModel.HonorExchange.HonorExchangeListenTaskObj} returns this
 */
proto.PbModel.HonorExchange.HonorExchangeListenTaskObj.prototype.setIscanget = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional bool IsGet = 7;
 * @return {boolean}
 */
proto.PbModel.HonorExchange.HonorExchangeListenTaskObj.prototype.getIsget = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PbModel.HonorExchange.HonorExchangeListenTaskObj} returns this
 */
proto.PbModel.HonorExchange.HonorExchangeListenTaskObj.prototype.setIsget = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.HonorExchange.HonorExchangeTaskRewardReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.HonorExchange.HonorExchangeTaskRewardReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.HonorExchange.HonorExchangeTaskRewardReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.HonorExchange.HonorExchangeTaskRewardReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    activityid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    orderid: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.HonorExchange.HonorExchangeTaskRewardReq}
 */
proto.PbModel.HonorExchange.HonorExchangeTaskRewardReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.HonorExchange.HonorExchangeTaskRewardReq;
  return proto.PbModel.HonorExchange.HonorExchangeTaskRewardReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.HonorExchange.HonorExchangeTaskRewardReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.HonorExchange.HonorExchangeTaskRewardReq}
 */
proto.PbModel.HonorExchange.HonorExchangeTaskRewardReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setActivityid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOrderid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.HonorExchange.HonorExchangeTaskRewardReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.HonorExchange.HonorExchangeTaskRewardReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.HonorExchange.HonorExchangeTaskRewardReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.HonorExchange.HonorExchangeTaskRewardReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActivityid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getOrderid();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 ActivityId = 1;
 * @return {number}
 */
proto.PbModel.HonorExchange.HonorExchangeTaskRewardReq.prototype.getActivityid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.HonorExchange.HonorExchangeTaskRewardReq} returns this
 */
proto.PbModel.HonorExchange.HonorExchangeTaskRewardReq.prototype.setActivityid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 OrderId = 2;
 * @return {number}
 */
proto.PbModel.HonorExchange.HonorExchangeTaskRewardReq.prototype.getOrderid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.HonorExchange.HonorExchangeTaskRewardReq} returns this
 */
proto.PbModel.HonorExchange.HonorExchangeTaskRewardReq.prototype.setOrderid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.HonorExchange.HonorExchangeTaskRewardRes.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.HonorExchange.HonorExchangeTaskRewardRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.HonorExchange.HonorExchangeTaskRewardRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.HonorExchange.HonorExchangeTaskRewardRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.HonorExchange.HonorExchangeTaskRewardRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    honorexchangetaskinfoList: jspb.Message.toObjectList(msg.getHonorexchangetaskinfoList(),
    proto.PbModel.HonorExchange.HonorExchangeTaskObj.toObject, includeInstance),
    honorexchangelistentaskinfoList: jspb.Message.toObjectList(msg.getHonorexchangelistentaskinfoList(),
    proto.PbModel.HonorExchange.HonorExchangeListenTaskObj.toObject, includeInstance),
    basegetgameresourcelist: (f = msg.getBasegetgameresourcelist()) && Resource_pb.ResourceToClientModel.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.HonorExchange.HonorExchangeTaskRewardRes}
 */
proto.PbModel.HonorExchange.HonorExchangeTaskRewardRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.HonorExchange.HonorExchangeTaskRewardRes;
  return proto.PbModel.HonorExchange.HonorExchangeTaskRewardRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.HonorExchange.HonorExchangeTaskRewardRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.HonorExchange.HonorExchangeTaskRewardRes}
 */
proto.PbModel.HonorExchange.HonorExchangeTaskRewardRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PbModel.HonorExchange.HonorExchangeTaskObj;
      reader.readMessage(value,proto.PbModel.HonorExchange.HonorExchangeTaskObj.deserializeBinaryFromReader);
      msg.addHonorexchangetaskinfo(value);
      break;
    case 2:
      var value = new proto.PbModel.HonorExchange.HonorExchangeListenTaskObj;
      reader.readMessage(value,proto.PbModel.HonorExchange.HonorExchangeListenTaskObj.deserializeBinaryFromReader);
      msg.addHonorexchangelistentaskinfo(value);
      break;
    case 3:
      var value = new Resource_pb.ResourceToClientModel;
      reader.readMessage(value,Resource_pb.ResourceToClientModel.deserializeBinaryFromReader);
      msg.setBasegetgameresourcelist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.HonorExchange.HonorExchangeTaskRewardRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.HonorExchange.HonorExchangeTaskRewardRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.HonorExchange.HonorExchangeTaskRewardRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.HonorExchange.HonorExchangeTaskRewardRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHonorexchangetaskinfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.PbModel.HonorExchange.HonorExchangeTaskObj.serializeBinaryToWriter
    );
  }
  f = message.getHonorexchangelistentaskinfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.PbModel.HonorExchange.HonorExchangeListenTaskObj.serializeBinaryToWriter
    );
  }
  f = message.getBasegetgameresourcelist();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      Resource_pb.ResourceToClientModel.serializeBinaryToWriter
    );
  }
};


/**
 * repeated HonorExchangeTaskObj HonorExchangeTaskInfo = 1;
 * @return {!Array<!proto.PbModel.HonorExchange.HonorExchangeTaskObj>}
 */
proto.PbModel.HonorExchange.HonorExchangeTaskRewardRes.prototype.getHonorexchangetaskinfoList = function() {
  return /** @type{!Array<!proto.PbModel.HonorExchange.HonorExchangeTaskObj>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.HonorExchange.HonorExchangeTaskObj, 1));
};


/**
 * @param {!Array<!proto.PbModel.HonorExchange.HonorExchangeTaskObj>} value
 * @return {!proto.PbModel.HonorExchange.HonorExchangeTaskRewardRes} returns this
*/
proto.PbModel.HonorExchange.HonorExchangeTaskRewardRes.prototype.setHonorexchangetaskinfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.PbModel.HonorExchange.HonorExchangeTaskObj=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.HonorExchange.HonorExchangeTaskObj}
 */
proto.PbModel.HonorExchange.HonorExchangeTaskRewardRes.prototype.addHonorexchangetaskinfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.PbModel.HonorExchange.HonorExchangeTaskObj, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.HonorExchange.HonorExchangeTaskRewardRes} returns this
 */
proto.PbModel.HonorExchange.HonorExchangeTaskRewardRes.prototype.clearHonorexchangetaskinfoList = function() {
  return this.setHonorexchangetaskinfoList([]);
};


/**
 * repeated HonorExchangeListenTaskObj HonorExchangeListenTaskInfo = 2;
 * @return {!Array<!proto.PbModel.HonorExchange.HonorExchangeListenTaskObj>}
 */
proto.PbModel.HonorExchange.HonorExchangeTaskRewardRes.prototype.getHonorexchangelistentaskinfoList = function() {
  return /** @type{!Array<!proto.PbModel.HonorExchange.HonorExchangeListenTaskObj>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.HonorExchange.HonorExchangeListenTaskObj, 2));
};


/**
 * @param {!Array<!proto.PbModel.HonorExchange.HonorExchangeListenTaskObj>} value
 * @return {!proto.PbModel.HonorExchange.HonorExchangeTaskRewardRes} returns this
*/
proto.PbModel.HonorExchange.HonorExchangeTaskRewardRes.prototype.setHonorexchangelistentaskinfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.PbModel.HonorExchange.HonorExchangeListenTaskObj=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.HonorExchange.HonorExchangeListenTaskObj}
 */
proto.PbModel.HonorExchange.HonorExchangeTaskRewardRes.prototype.addHonorexchangelistentaskinfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.PbModel.HonorExchange.HonorExchangeListenTaskObj, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.HonorExchange.HonorExchangeTaskRewardRes} returns this
 */
proto.PbModel.HonorExchange.HonorExchangeTaskRewardRes.prototype.clearHonorexchangelistentaskinfoList = function() {
  return this.setHonorexchangelistentaskinfoList([]);
};


/**
 * optional PbModel.Resource.ResourceToClientModel BaseGetGameResourceList = 3;
 * @return {?proto.PbModel.Resource.ResourceToClientModel}
 */
proto.PbModel.HonorExchange.HonorExchangeTaskRewardRes.prototype.getBasegetgameresourcelist = function() {
  return /** @type{?proto.PbModel.Resource.ResourceToClientModel} */ (
    jspb.Message.getWrapperField(this, Resource_pb.ResourceToClientModel, 3));
};


/**
 * @param {?proto.PbModel.Resource.ResourceToClientModel|undefined} value
 * @return {!proto.PbModel.HonorExchange.HonorExchangeTaskRewardRes} returns this
*/
proto.PbModel.HonorExchange.HonorExchangeTaskRewardRes.prototype.setBasegetgameresourcelist = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.HonorExchange.HonorExchangeTaskRewardRes} returns this
 */
proto.PbModel.HonorExchange.HonorExchangeTaskRewardRes.prototype.clearBasegetgameresourcelist = function() {
  return this.setBasegetgameresourcelist(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.HonorExchange.HonorExchangeTaskRewardRes.prototype.hasBasegetgameresourcelist = function() {
  return jspb.Message.getField(this, 3) != null;
};


goog.object.extend(exports, proto.PbModel.HonorExchange);
