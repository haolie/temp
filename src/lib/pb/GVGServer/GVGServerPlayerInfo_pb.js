// source: GVGServer/GVGServerPlayerInfo.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var GVGServer_GVGServerTeamInfo_pb = require('../GVGServer/GVGServerTeamInfo_pb.js');
goog.object.extend(proto, GVGServer_GVGServerTeamInfo_pb);
goog.exportSymbol('proto.PbModel.GvGServer.GvgClientPlayerInfo', null, global);
goog.exportSymbol('proto.PbModel.GvGServer.GvgServerPlayerInfo', null, global);
goog.exportSymbol('proto.PbModel.GvGServer.UploadPlayerInfoReq', null, global);
goog.exportSymbol('proto.PbModel.GvGServer.UploadPlayerInfoRes', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.GvGServer.UploadPlayerInfoReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.GvGServer.UploadPlayerInfoReq.repeatedFields_, null);
};
goog.inherits(proto.PbModel.GvGServer.UploadPlayerInfoReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.GvGServer.UploadPlayerInfoReq.displayName = 'proto.PbModel.GvGServer.UploadPlayerInfoReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.GvGServer.UploadPlayerInfoRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.GvGServer.UploadPlayerInfoRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.GvGServer.UploadPlayerInfoRes.displayName = 'proto.PbModel.GvGServer.UploadPlayerInfoRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.GvGServer.GvgServerPlayerInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.GvGServer.GvgServerPlayerInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.GvGServer.GvgServerPlayerInfo.displayName = 'proto.PbModel.GvGServer.GvgServerPlayerInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.GvGServer.GvgClientPlayerInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.GvGServer.GvgClientPlayerInfo.repeatedFields_, null);
};
goog.inherits(proto.PbModel.GvGServer.GvgClientPlayerInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.GvGServer.GvgClientPlayerInfo.displayName = 'proto.PbModel.GvGServer.GvgClientPlayerInfo';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.GvGServer.UploadPlayerInfoReq.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.GvGServer.UploadPlayerInfoReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.GvGServer.UploadPlayerInfoReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.GvGServer.UploadPlayerInfoReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.GvGServer.UploadPlayerInfoReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    playerinfo: (f = msg.getPlayerinfo()) && proto.PbModel.GvGServer.GvgServerPlayerInfo.toObject(includeInstance, f),
    teaminfoList: jspb.Message.toObjectList(msg.getTeaminfoList(),
    GVGServer_GVGServerTeamInfo_pb.TeamInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.GvGServer.UploadPlayerInfoReq}
 */
proto.PbModel.GvGServer.UploadPlayerInfoReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.GvGServer.UploadPlayerInfoReq;
  return proto.PbModel.GvGServer.UploadPlayerInfoReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.GvGServer.UploadPlayerInfoReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.GvGServer.UploadPlayerInfoReq}
 */
proto.PbModel.GvGServer.UploadPlayerInfoReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PbModel.GvGServer.GvgServerPlayerInfo;
      reader.readMessage(value,proto.PbModel.GvGServer.GvgServerPlayerInfo.deserializeBinaryFromReader);
      msg.setPlayerinfo(value);
      break;
    case 2:
      var value = new GVGServer_GVGServerTeamInfo_pb.TeamInfo;
      reader.readMessage(value,GVGServer_GVGServerTeamInfo_pb.TeamInfo.deserializeBinaryFromReader);
      msg.addTeaminfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.GvGServer.UploadPlayerInfoReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.GvGServer.UploadPlayerInfoReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.GvGServer.UploadPlayerInfoReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.GvGServer.UploadPlayerInfoReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlayerinfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.PbModel.GvGServer.GvgServerPlayerInfo.serializeBinaryToWriter
    );
  }
  f = message.getTeaminfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      GVGServer_GVGServerTeamInfo_pb.TeamInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional GvgServerPlayerInfo PlayerInfo = 1;
 * @return {?proto.PbModel.GvGServer.GvgServerPlayerInfo}
 */
proto.PbModel.GvGServer.UploadPlayerInfoReq.prototype.getPlayerinfo = function() {
  return /** @type{?proto.PbModel.GvGServer.GvgServerPlayerInfo} */ (
    jspb.Message.getWrapperField(this, proto.PbModel.GvGServer.GvgServerPlayerInfo, 1));
};


/**
 * @param {?proto.PbModel.GvGServer.GvgServerPlayerInfo|undefined} value
 * @return {!proto.PbModel.GvGServer.UploadPlayerInfoReq} returns this
*/
proto.PbModel.GvGServer.UploadPlayerInfoReq.prototype.setPlayerinfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.GvGServer.UploadPlayerInfoReq} returns this
 */
proto.PbModel.GvGServer.UploadPlayerInfoReq.prototype.clearPlayerinfo = function() {
  return this.setPlayerinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.GvGServer.UploadPlayerInfoReq.prototype.hasPlayerinfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated TeamInfo TeamInfo = 2;
 * @return {!Array<!proto.PbModel.GvGServer.TeamInfo>}
 */
proto.PbModel.GvGServer.UploadPlayerInfoReq.prototype.getTeaminfoList = function() {
  return /** @type{!Array<!proto.PbModel.GvGServer.TeamInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, GVGServer_GVGServerTeamInfo_pb.TeamInfo, 2));
};


/**
 * @param {!Array<!proto.PbModel.GvGServer.TeamInfo>} value
 * @return {!proto.PbModel.GvGServer.UploadPlayerInfoReq} returns this
*/
proto.PbModel.GvGServer.UploadPlayerInfoReq.prototype.setTeaminfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.PbModel.GvGServer.TeamInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.GvGServer.TeamInfo}
 */
proto.PbModel.GvGServer.UploadPlayerInfoReq.prototype.addTeaminfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.PbModel.GvGServer.TeamInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.GvGServer.UploadPlayerInfoReq} returns this
 */
proto.PbModel.GvGServer.UploadPlayerInfoReq.prototype.clearTeaminfoList = function() {
  return this.setTeaminfoList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.GvGServer.UploadPlayerInfoRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.GvGServer.UploadPlayerInfoRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.GvGServer.UploadPlayerInfoRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.GvGServer.UploadPlayerInfoRes.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.GvGServer.UploadPlayerInfoRes}
 */
proto.PbModel.GvGServer.UploadPlayerInfoRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.GvGServer.UploadPlayerInfoRes;
  return proto.PbModel.GvGServer.UploadPlayerInfoRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.GvGServer.UploadPlayerInfoRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.GvGServer.UploadPlayerInfoRes}
 */
proto.PbModel.GvGServer.UploadPlayerInfoRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.GvGServer.UploadPlayerInfoRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.GvGServer.UploadPlayerInfoRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.GvGServer.UploadPlayerInfoRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.GvGServer.UploadPlayerInfoRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.GvGServer.GvgServerPlayerInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.GvGServer.GvgServerPlayerInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.GvGServer.GvgServerPlayerInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.GvGServer.GvgServerPlayerInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    playerid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    servergroupid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    serverid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    partnerid: jspb.Message.getFieldWithDefault(msg, 4, 0),
    guildid: jspb.Message.getFieldWithDefault(msg, 6, ""),
    imageid: jspb.Message.getFieldWithDefault(msg, 7, 0),
    changenum: jspb.Message.getFieldWithDefault(msg, 8, 0),
    drivecar: jspb.Message.getFieldWithDefault(msg, 9, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.GvGServer.GvgServerPlayerInfo}
 */
proto.PbModel.GvGServer.GvgServerPlayerInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.GvGServer.GvgServerPlayerInfo;
  return proto.PbModel.GvGServer.GvgServerPlayerInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.GvGServer.GvgServerPlayerInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.GvGServer.GvgServerPlayerInfo}
 */
proto.PbModel.GvGServer.GvgServerPlayerInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlayerid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setServergroupid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setServerid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPartnerid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setGuildid(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setImageid(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setChangenum(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDrivecar(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.GvGServer.GvgServerPlayerInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.GvGServer.GvgServerPlayerInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.GvGServer.GvgServerPlayerInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.GvGServer.GvgServerPlayerInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlayerid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getServergroupid();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getServerid();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getPartnerid();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getGuildid();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getImageid();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getChangenum();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getDrivecar();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
};


/**
 * optional string PlayerId = 1;
 * @return {string}
 */
proto.PbModel.GvGServer.GvgServerPlayerInfo.prototype.getPlayerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.GvGServer.GvgServerPlayerInfo} returns this
 */
proto.PbModel.GvGServer.GvgServerPlayerInfo.prototype.setPlayerid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 ServerGroupId = 2;
 * @return {number}
 */
proto.PbModel.GvGServer.GvgServerPlayerInfo.prototype.getServergroupid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.GvGServer.GvgServerPlayerInfo} returns this
 */
proto.PbModel.GvGServer.GvgServerPlayerInfo.prototype.setServergroupid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 ServerId = 3;
 * @return {number}
 */
proto.PbModel.GvGServer.GvgServerPlayerInfo.prototype.getServerid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.GvGServer.GvgServerPlayerInfo} returns this
 */
proto.PbModel.GvGServer.GvgServerPlayerInfo.prototype.setServerid = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 PartnerId = 4;
 * @return {number}
 */
proto.PbModel.GvGServer.GvgServerPlayerInfo.prototype.getPartnerid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.GvGServer.GvgServerPlayerInfo} returns this
 */
proto.PbModel.GvGServer.GvgServerPlayerInfo.prototype.setPartnerid = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string GuildId = 6;
 * @return {string}
 */
proto.PbModel.GvGServer.GvgServerPlayerInfo.prototype.getGuildid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.GvGServer.GvgServerPlayerInfo} returns this
 */
proto.PbModel.GvGServer.GvgServerPlayerInfo.prototype.setGuildid = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int32 ImageId = 7;
 * @return {number}
 */
proto.PbModel.GvGServer.GvgServerPlayerInfo.prototype.getImageid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.GvGServer.GvgServerPlayerInfo} returns this
 */
proto.PbModel.GvGServer.GvgServerPlayerInfo.prototype.setImageid = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 ChangeNum = 8;
 * @return {number}
 */
proto.PbModel.GvGServer.GvgServerPlayerInfo.prototype.getChangenum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.GvGServer.GvgServerPlayerInfo} returns this
 */
proto.PbModel.GvGServer.GvgServerPlayerInfo.prototype.setChangenum = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 DriveCar = 9;
 * @return {number}
 */
proto.PbModel.GvGServer.GvgServerPlayerInfo.prototype.getDrivecar = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.GvGServer.GvgServerPlayerInfo} returns this
 */
proto.PbModel.GvGServer.GvgServerPlayerInfo.prototype.setDrivecar = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.GvGServer.GvgClientPlayerInfo.repeatedFields_ = [6,7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.GvGServer.GvgClientPlayerInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.GvGServer.GvgClientPlayerInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.GvGServer.GvgClientPlayerInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.GvGServer.GvgClientPlayerInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    playerid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    killnum: jspb.Message.getFieldWithDefault(msg, 2, 0),
    score: jspb.Message.getFieldWithDefault(msg, 3, 0),
    consecutivewinnum: jspb.Message.getFieldWithDefault(msg, 4, 0),
    markpointsMap: (f = msg.getMarkpointsMap()) ? f.toObject(includeInstance, undefined) : [],
    receivedplayertaskidlistList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f,
    receivedguildtaskidlistList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f,
    basechallengesnum: jspb.Message.getFieldWithDefault(msg, 8, 0),
    buychallengesnum: jspb.Message.getFieldWithDefault(msg, 9, 0),
    todaybuymovenum: jspb.Message.getFieldWithDefault(msg, 10, 0),
    unlockteamnum: jspb.Message.getFieldWithDefault(msg, 11, 0),
    minteamnum: jspb.Message.getFieldWithDefault(msg, 12, 0),
    drivecar: jspb.Message.getFieldWithDefault(msg, 13, 0),
    iscommander: jspb.Message.getBooleanFieldWithDefault(msg, 14, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.GvGServer.GvgClientPlayerInfo}
 */
proto.PbModel.GvGServer.GvgClientPlayerInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.GvGServer.GvgClientPlayerInfo;
  return proto.PbModel.GvGServer.GvgClientPlayerInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.GvGServer.GvgClientPlayerInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.GvGServer.GvgClientPlayerInfo}
 */
proto.PbModel.GvGServer.GvgClientPlayerInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlayerid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setKillnum(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setScore(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setConsecutivewinnum(value);
      break;
    case 5:
      var value = msg.getMarkpointsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 6:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setReceivedplayertaskidlistList(value);
      break;
    case 7:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setReceivedguildtaskidlistList(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBasechallengesnum(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBuychallengesnum(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTodaybuymovenum(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUnlockteamnum(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMinteamnum(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDrivecar(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIscommander(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.GvGServer.GvgClientPlayerInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.GvGServer.GvgClientPlayerInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.GvGServer.GvgClientPlayerInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.GvGServer.GvgClientPlayerInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlayerid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getKillnum();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getScore();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getConsecutivewinnum();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getMarkpointsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(5, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getReceivedplayertaskidlistList();
  if (f.length > 0) {
    writer.writePackedInt32(
      6,
      f
    );
  }
  f = message.getReceivedguildtaskidlistList();
  if (f.length > 0) {
    writer.writePackedInt32(
      7,
      f
    );
  }
  f = message.getBasechallengesnum();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getBuychallengesnum();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getTodaybuymovenum();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getUnlockteamnum();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getMinteamnum();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getDrivecar();
  if (f !== 0) {
    writer.writeInt32(
      13,
      f
    );
  }
  f = message.getIscommander();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
};


/**
 * optional string PlayerId = 1;
 * @return {string}
 */
proto.PbModel.GvGServer.GvgClientPlayerInfo.prototype.getPlayerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.GvGServer.GvgClientPlayerInfo} returns this
 */
proto.PbModel.GvGServer.GvgClientPlayerInfo.prototype.setPlayerid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 KillNum = 2;
 * @return {number}
 */
proto.PbModel.GvGServer.GvgClientPlayerInfo.prototype.getKillnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.GvGServer.GvgClientPlayerInfo} returns this
 */
proto.PbModel.GvGServer.GvgClientPlayerInfo.prototype.setKillnum = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 Score = 3;
 * @return {number}
 */
proto.PbModel.GvGServer.GvgClientPlayerInfo.prototype.getScore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.GvGServer.GvgClientPlayerInfo} returns this
 */
proto.PbModel.GvGServer.GvgClientPlayerInfo.prototype.setScore = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 ConsecutiveWinNum = 4;
 * @return {number}
 */
proto.PbModel.GvGServer.GvgClientPlayerInfo.prototype.getConsecutivewinnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.GvGServer.GvgClientPlayerInfo} returns this
 */
proto.PbModel.GvGServer.GvgClientPlayerInfo.prototype.setConsecutivewinnum = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * map<string, string> MarkPoints = 5;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.PbModel.GvGServer.GvgClientPlayerInfo.prototype.getMarkpointsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 5, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.PbModel.GvGServer.GvgClientPlayerInfo} returns this
 */
proto.PbModel.GvGServer.GvgClientPlayerInfo.prototype.clearMarkpointsMap = function() {
  this.getMarkpointsMap().clear();
  return this;};


/**
 * repeated int32 ReceivedPlayerTaskIdList = 6;
 * @return {!Array<number>}
 */
proto.PbModel.GvGServer.GvgClientPlayerInfo.prototype.getReceivedplayertaskidlistList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.PbModel.GvGServer.GvgClientPlayerInfo} returns this
 */
proto.PbModel.GvGServer.GvgClientPlayerInfo.prototype.setReceivedplayertaskidlistList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.PbModel.GvGServer.GvgClientPlayerInfo} returns this
 */
proto.PbModel.GvGServer.GvgClientPlayerInfo.prototype.addReceivedplayertaskidlist = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.GvGServer.GvgClientPlayerInfo} returns this
 */
proto.PbModel.GvGServer.GvgClientPlayerInfo.prototype.clearReceivedplayertaskidlistList = function() {
  return this.setReceivedplayertaskidlistList([]);
};


/**
 * repeated int32 ReceivedGuildTaskIdList = 7;
 * @return {!Array<number>}
 */
proto.PbModel.GvGServer.GvgClientPlayerInfo.prototype.getReceivedguildtaskidlistList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 7));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.PbModel.GvGServer.GvgClientPlayerInfo} returns this
 */
proto.PbModel.GvGServer.GvgClientPlayerInfo.prototype.setReceivedguildtaskidlistList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.PbModel.GvGServer.GvgClientPlayerInfo} returns this
 */
proto.PbModel.GvGServer.GvgClientPlayerInfo.prototype.addReceivedguildtaskidlist = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.GvGServer.GvgClientPlayerInfo} returns this
 */
proto.PbModel.GvGServer.GvgClientPlayerInfo.prototype.clearReceivedguildtaskidlistList = function() {
  return this.setReceivedguildtaskidlistList([]);
};


/**
 * optional int32 BaseChallengesNum = 8;
 * @return {number}
 */
proto.PbModel.GvGServer.GvgClientPlayerInfo.prototype.getBasechallengesnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.GvGServer.GvgClientPlayerInfo} returns this
 */
proto.PbModel.GvGServer.GvgClientPlayerInfo.prototype.setBasechallengesnum = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 BuyChallengesNum = 9;
 * @return {number}
 */
proto.PbModel.GvGServer.GvgClientPlayerInfo.prototype.getBuychallengesnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.GvGServer.GvgClientPlayerInfo} returns this
 */
proto.PbModel.GvGServer.GvgClientPlayerInfo.prototype.setBuychallengesnum = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int32 TodayBuyMoveNum = 10;
 * @return {number}
 */
proto.PbModel.GvGServer.GvgClientPlayerInfo.prototype.getTodaybuymovenum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.GvGServer.GvgClientPlayerInfo} returns this
 */
proto.PbModel.GvGServer.GvgClientPlayerInfo.prototype.setTodaybuymovenum = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int32 UnLockTeamNum = 11;
 * @return {number}
 */
proto.PbModel.GvGServer.GvgClientPlayerInfo.prototype.getUnlockteamnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.GvGServer.GvgClientPlayerInfo} returns this
 */
proto.PbModel.GvGServer.GvgClientPlayerInfo.prototype.setUnlockteamnum = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int32 MinTeamNum = 12;
 * @return {number}
 */
proto.PbModel.GvGServer.GvgClientPlayerInfo.prototype.getMinteamnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.GvGServer.GvgClientPlayerInfo} returns this
 */
proto.PbModel.GvGServer.GvgClientPlayerInfo.prototype.setMinteamnum = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional int32 DriveCar = 13;
 * @return {number}
 */
proto.PbModel.GvGServer.GvgClientPlayerInfo.prototype.getDrivecar = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.GvGServer.GvgClientPlayerInfo} returns this
 */
proto.PbModel.GvGServer.GvgClientPlayerInfo.prototype.setDrivecar = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional bool IsCommander = 14;
 * @return {boolean}
 */
proto.PbModel.GvGServer.GvgClientPlayerInfo.prototype.getIscommander = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PbModel.GvGServer.GvgClientPlayerInfo} returns this
 */
proto.PbModel.GvGServer.GvgClientPlayerInfo.prototype.setIscommander = function(value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};


goog.object.extend(exports, proto.PbModel.GvGServer);
