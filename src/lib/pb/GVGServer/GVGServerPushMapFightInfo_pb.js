// source: GVGServer/GVGServerPushMapFightInfo.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var GVGServer_GVGServerPbPoint_pb = require('../GVGServer/GVGServerPbPoint_pb.js');
goog.object.extend(proto, GVGServer_GVGServerPbPoint_pb);
var GVGServer_GVGServerGuildBirthPointInfo_pb = require('../GVGServer/GVGServerGuildBirthPointInfo_pb.js');
goog.object.extend(proto, GVGServer_GVGServerGuildBirthPointInfo_pb);
goog.exportSymbol('proto.PbModel.GvGServer.FightBaseInfo', null, global);
goog.exportSymbol('proto.PbModel.GvGServer.MapFightInfo', null, global);
goog.exportSymbol('proto.PbModel.GvGServer.PushMapFightInfoRes', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.GvGServer.PushMapFightInfoRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.GvGServer.PushMapFightInfoRes.repeatedFields_, null);
};
goog.inherits(proto.PbModel.GvGServer.PushMapFightInfoRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.GvGServer.PushMapFightInfoRes.displayName = 'proto.PbModel.GvGServer.PushMapFightInfoRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.GvGServer.MapFightInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.GvGServer.MapFightInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.GvGServer.MapFightInfo.displayName = 'proto.PbModel.GvGServer.MapFightInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.GvGServer.FightBaseInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.GvGServer.FightBaseInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.GvGServer.FightBaseInfo.displayName = 'proto.PbModel.GvGServer.FightBaseInfo';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.GvGServer.PushMapFightInfoRes.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.GvGServer.PushMapFightInfoRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.GvGServer.PushMapFightInfoRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.GvGServer.PushMapFightInfoRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.GvGServer.PushMapFightInfoRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    playeridsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    info: (f = msg.getInfo()) && proto.PbModel.GvGServer.MapFightInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.GvGServer.PushMapFightInfoRes}
 */
proto.PbModel.GvGServer.PushMapFightInfoRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.GvGServer.PushMapFightInfoRes;
  return proto.PbModel.GvGServer.PushMapFightInfoRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.GvGServer.PushMapFightInfoRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.GvGServer.PushMapFightInfoRes}
 */
proto.PbModel.GvGServer.PushMapFightInfoRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addPlayerids(value);
      break;
    case 2:
      var value = new proto.PbModel.GvGServer.MapFightInfo;
      reader.readMessage(value,proto.PbModel.GvGServer.MapFightInfo.deserializeBinaryFromReader);
      msg.setInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.GvGServer.PushMapFightInfoRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.GvGServer.PushMapFightInfoRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.GvGServer.PushMapFightInfoRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.GvGServer.PushMapFightInfoRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlayeridsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.PbModel.GvGServer.MapFightInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated string PlayerIds = 1;
 * @return {!Array<string>}
 */
proto.PbModel.GvGServer.PushMapFightInfoRes.prototype.getPlayeridsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.PbModel.GvGServer.PushMapFightInfoRes} returns this
 */
proto.PbModel.GvGServer.PushMapFightInfoRes.prototype.setPlayeridsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.PbModel.GvGServer.PushMapFightInfoRes} returns this
 */
proto.PbModel.GvGServer.PushMapFightInfoRes.prototype.addPlayerids = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.GvGServer.PushMapFightInfoRes} returns this
 */
proto.PbModel.GvGServer.PushMapFightInfoRes.prototype.clearPlayeridsList = function() {
  return this.setPlayeridsList([]);
};


/**
 * optional MapFightInfo Info = 2;
 * @return {?proto.PbModel.GvGServer.MapFightInfo}
 */
proto.PbModel.GvGServer.PushMapFightInfoRes.prototype.getInfo = function() {
  return /** @type{?proto.PbModel.GvGServer.MapFightInfo} */ (
    jspb.Message.getWrapperField(this, proto.PbModel.GvGServer.MapFightInfo, 2));
};


/**
 * @param {?proto.PbModel.GvGServer.MapFightInfo|undefined} value
 * @return {!proto.PbModel.GvGServer.PushMapFightInfoRes} returns this
*/
proto.PbModel.GvGServer.PushMapFightInfoRes.prototype.setInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.GvGServer.PushMapFightInfoRes} returns this
 */
proto.PbModel.GvGServer.PushMapFightInfoRes.prototype.clearInfo = function() {
  return this.setInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.GvGServer.PushMapFightInfoRes.prototype.hasInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.GvGServer.MapFightInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.GvGServer.MapFightInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.GvGServer.MapFightInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.GvGServer.MapFightInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    attackinfo: (f = msg.getAttackinfo()) && proto.PbModel.GvGServer.FightBaseInfo.toObject(includeInstance, f),
    defenceinfo: (f = msg.getDefenceinfo()) && proto.PbModel.GvGServer.FightBaseInfo.toObject(includeInstance, f),
    win: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    pbpoint: (f = msg.getPbpoint()) && GVGServer_GVGServerPbPoint_pb.PbPoint.toObject(includeInstance, f),
    killnum: jspb.Message.getFieldWithDefault(msg, 5, 0),
    atkcitydoor: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    deductcitydoorhp: jspb.Message.getFieldWithDefault(msg, 7, 0),
    killreward: jspb.Message.getFieldWithDefault(msg, 8, ""),
    killplayernum: jspb.Message.getFieldWithDefault(msg, 9, 0),
    killnpcnum: jspb.Message.getFieldWithDefault(msg, 10, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.GvGServer.MapFightInfo}
 */
proto.PbModel.GvGServer.MapFightInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.GvGServer.MapFightInfo;
  return proto.PbModel.GvGServer.MapFightInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.GvGServer.MapFightInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.GvGServer.MapFightInfo}
 */
proto.PbModel.GvGServer.MapFightInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PbModel.GvGServer.FightBaseInfo;
      reader.readMessage(value,proto.PbModel.GvGServer.FightBaseInfo.deserializeBinaryFromReader);
      msg.setAttackinfo(value);
      break;
    case 2:
      var value = new proto.PbModel.GvGServer.FightBaseInfo;
      reader.readMessage(value,proto.PbModel.GvGServer.FightBaseInfo.deserializeBinaryFromReader);
      msg.setDefenceinfo(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWin(value);
      break;
    case 4:
      var value = new GVGServer_GVGServerPbPoint_pb.PbPoint;
      reader.readMessage(value,GVGServer_GVGServerPbPoint_pb.PbPoint.deserializeBinaryFromReader);
      msg.setPbpoint(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setKillnum(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAtkcitydoor(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDeductcitydoorhp(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setKillreward(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setKillplayernum(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setKillnpcnum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.GvGServer.MapFightInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.GvGServer.MapFightInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.GvGServer.MapFightInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.GvGServer.MapFightInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAttackinfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.PbModel.GvGServer.FightBaseInfo.serializeBinaryToWriter
    );
  }
  f = message.getDefenceinfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.PbModel.GvGServer.FightBaseInfo.serializeBinaryToWriter
    );
  }
  f = message.getWin();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getPbpoint();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      GVGServer_GVGServerPbPoint_pb.PbPoint.serializeBinaryToWriter
    );
  }
  f = message.getKillnum();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getAtkcitydoor();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getDeductcitydoorhp();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getKillreward();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getKillplayernum();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getKillnpcnum();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
};


/**
 * optional FightBaseInfo AttackInfo = 1;
 * @return {?proto.PbModel.GvGServer.FightBaseInfo}
 */
proto.PbModel.GvGServer.MapFightInfo.prototype.getAttackinfo = function() {
  return /** @type{?proto.PbModel.GvGServer.FightBaseInfo} */ (
    jspb.Message.getWrapperField(this, proto.PbModel.GvGServer.FightBaseInfo, 1));
};


/**
 * @param {?proto.PbModel.GvGServer.FightBaseInfo|undefined} value
 * @return {!proto.PbModel.GvGServer.MapFightInfo} returns this
*/
proto.PbModel.GvGServer.MapFightInfo.prototype.setAttackinfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.GvGServer.MapFightInfo} returns this
 */
proto.PbModel.GvGServer.MapFightInfo.prototype.clearAttackinfo = function() {
  return this.setAttackinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.GvGServer.MapFightInfo.prototype.hasAttackinfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional FightBaseInfo DefenceInfo = 2;
 * @return {?proto.PbModel.GvGServer.FightBaseInfo}
 */
proto.PbModel.GvGServer.MapFightInfo.prototype.getDefenceinfo = function() {
  return /** @type{?proto.PbModel.GvGServer.FightBaseInfo} */ (
    jspb.Message.getWrapperField(this, proto.PbModel.GvGServer.FightBaseInfo, 2));
};


/**
 * @param {?proto.PbModel.GvGServer.FightBaseInfo|undefined} value
 * @return {!proto.PbModel.GvGServer.MapFightInfo} returns this
*/
proto.PbModel.GvGServer.MapFightInfo.prototype.setDefenceinfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.GvGServer.MapFightInfo} returns this
 */
proto.PbModel.GvGServer.MapFightInfo.prototype.clearDefenceinfo = function() {
  return this.setDefenceinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.GvGServer.MapFightInfo.prototype.hasDefenceinfo = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool Win = 3;
 * @return {boolean}
 */
proto.PbModel.GvGServer.MapFightInfo.prototype.getWin = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PbModel.GvGServer.MapFightInfo} returns this
 */
proto.PbModel.GvGServer.MapFightInfo.prototype.setWin = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional PbPoint PbPoint = 4;
 * @return {?proto.PbModel.GvGServer.PbPoint}
 */
proto.PbModel.GvGServer.MapFightInfo.prototype.getPbpoint = function() {
  return /** @type{?proto.PbModel.GvGServer.PbPoint} */ (
    jspb.Message.getWrapperField(this, GVGServer_GVGServerPbPoint_pb.PbPoint, 4));
};


/**
 * @param {?proto.PbModel.GvGServer.PbPoint|undefined} value
 * @return {!proto.PbModel.GvGServer.MapFightInfo} returns this
*/
proto.PbModel.GvGServer.MapFightInfo.prototype.setPbpoint = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.GvGServer.MapFightInfo} returns this
 */
proto.PbModel.GvGServer.MapFightInfo.prototype.clearPbpoint = function() {
  return this.setPbpoint(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.GvGServer.MapFightInfo.prototype.hasPbpoint = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int32 KillNum = 5;
 * @return {number}
 */
proto.PbModel.GvGServer.MapFightInfo.prototype.getKillnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.GvGServer.MapFightInfo} returns this
 */
proto.PbModel.GvGServer.MapFightInfo.prototype.setKillnum = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional bool AtkCityDoor = 6;
 * @return {boolean}
 */
proto.PbModel.GvGServer.MapFightInfo.prototype.getAtkcitydoor = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PbModel.GvGServer.MapFightInfo} returns this
 */
proto.PbModel.GvGServer.MapFightInfo.prototype.setAtkcitydoor = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional int32 DeductCityDoorHP = 7;
 * @return {number}
 */
proto.PbModel.GvGServer.MapFightInfo.prototype.getDeductcitydoorhp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.GvGServer.MapFightInfo} returns this
 */
proto.PbModel.GvGServer.MapFightInfo.prototype.setDeductcitydoorhp = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string KillReward = 8;
 * @return {string}
 */
proto.PbModel.GvGServer.MapFightInfo.prototype.getKillreward = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.GvGServer.MapFightInfo} returns this
 */
proto.PbModel.GvGServer.MapFightInfo.prototype.setKillreward = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional int32 KillPlayerNum = 9;
 * @return {number}
 */
proto.PbModel.GvGServer.MapFightInfo.prototype.getKillplayernum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.GvGServer.MapFightInfo} returns this
 */
proto.PbModel.GvGServer.MapFightInfo.prototype.setKillplayernum = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int32 KillNpcNum = 10;
 * @return {number}
 */
proto.PbModel.GvGServer.MapFightInfo.prototype.getKillnpcnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.GvGServer.MapFightInfo} returns this
 */
proto.PbModel.GvGServer.MapFightInfo.prototype.setKillnpcnum = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.GvGServer.FightBaseInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.GvGServer.FightBaseInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.GvGServer.FightBaseInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.GvGServer.FightBaseInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    playerid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    playername: jspb.Message.getFieldWithDefault(msg, 2, ""),
    guildid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    isnpc: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    clientplayerstr: jspb.Message.getFieldWithDefault(msg, 7, ""),
    teaminfo: (f = msg.getTeaminfo()) && GVGServer_GVGServerGuildBirthPointInfo_pb.GuildBrithPointTeamInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.GvGServer.FightBaseInfo}
 */
proto.PbModel.GvGServer.FightBaseInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.GvGServer.FightBaseInfo;
  return proto.PbModel.GvGServer.FightBaseInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.GvGServer.FightBaseInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.GvGServer.FightBaseInfo}
 */
proto.PbModel.GvGServer.FightBaseInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlayerid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlayername(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setGuildid(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsnpc(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientplayerstr(value);
      break;
    case 8:
      var value = new GVGServer_GVGServerGuildBirthPointInfo_pb.GuildBrithPointTeamInfo;
      reader.readMessage(value,GVGServer_GVGServerGuildBirthPointInfo_pb.GuildBrithPointTeamInfo.deserializeBinaryFromReader);
      msg.setTeaminfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.GvGServer.FightBaseInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.GvGServer.FightBaseInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.GvGServer.FightBaseInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.GvGServer.FightBaseInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlayerid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPlayername();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getGuildid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIsnpc();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getClientplayerstr();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getTeaminfo();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      GVGServer_GVGServerGuildBirthPointInfo_pb.GuildBrithPointTeamInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional string PlayerId = 1;
 * @return {string}
 */
proto.PbModel.GvGServer.FightBaseInfo.prototype.getPlayerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.GvGServer.FightBaseInfo} returns this
 */
proto.PbModel.GvGServer.FightBaseInfo.prototype.setPlayerid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string PlayerName = 2;
 * @return {string}
 */
proto.PbModel.GvGServer.FightBaseInfo.prototype.getPlayername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.GvGServer.FightBaseInfo} returns this
 */
proto.PbModel.GvGServer.FightBaseInfo.prototype.setPlayername = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string GuildId = 3;
 * @return {string}
 */
proto.PbModel.GvGServer.FightBaseInfo.prototype.getGuildid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.GvGServer.FightBaseInfo} returns this
 */
proto.PbModel.GvGServer.FightBaseInfo.prototype.setGuildid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool IsNpc = 6;
 * @return {boolean}
 */
proto.PbModel.GvGServer.FightBaseInfo.prototype.getIsnpc = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PbModel.GvGServer.FightBaseInfo} returns this
 */
proto.PbModel.GvGServer.FightBaseInfo.prototype.setIsnpc = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional string ClientPlayerStr = 7;
 * @return {string}
 */
proto.PbModel.GvGServer.FightBaseInfo.prototype.getClientplayerstr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.GvGServer.FightBaseInfo} returns this
 */
proto.PbModel.GvGServer.FightBaseInfo.prototype.setClientplayerstr = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional GuildBrithPointTeamInfo TeamInfo = 8;
 * @return {?proto.PbModel.GvGServer.GuildBrithPointTeamInfo}
 */
proto.PbModel.GvGServer.FightBaseInfo.prototype.getTeaminfo = function() {
  return /** @type{?proto.PbModel.GvGServer.GuildBrithPointTeamInfo} */ (
    jspb.Message.getWrapperField(this, GVGServer_GVGServerGuildBirthPointInfo_pb.GuildBrithPointTeamInfo, 8));
};


/**
 * @param {?proto.PbModel.GvGServer.GuildBrithPointTeamInfo|undefined} value
 * @return {!proto.PbModel.GvGServer.FightBaseInfo} returns this
*/
proto.PbModel.GvGServer.FightBaseInfo.prototype.setTeaminfo = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.GvGServer.FightBaseInfo} returns this
 */
proto.PbModel.GvGServer.FightBaseInfo.prototype.clearTeaminfo = function() {
  return this.setTeaminfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.GvGServer.FightBaseInfo.prototype.hasTeaminfo = function() {
  return jspb.Message.getField(this, 8) != null;
};


goog.object.extend(exports, proto.PbModel.GvGServer);
