// source: WorldBoss.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var Resource_pb = require('./Resource_pb.js');
goog.object.extend(proto, Resource_pb);
var Player_pb = require('./Player_pb.js');
goog.object.extend(proto, Player_pb);
var Fight_pb = require('./Fight_pb.js');
goog.object.extend(proto, Fight_pb);
goog.exportSymbol('proto.PbModel.WorldBoss.WorldBossAcceptAwardReq', null, global);
goog.exportSymbol('proto.PbModel.WorldBoss.WorldBossAcceptAwardRes', null, global);
goog.exportSymbol('proto.PbModel.WorldBoss.WorldBossAttentionBossReq', null, global);
goog.exportSymbol('proto.PbModel.WorldBoss.WorldBossAttentionBossRes', null, global);
goog.exportSymbol('proto.PbModel.WorldBoss.WorldBossFight', null, global);
goog.exportSymbol('proto.PbModel.WorldBoss.WorldBossFightReq', null, global);
goog.exportSymbol('proto.PbModel.WorldBoss.WorldBossFightRes', null, global);
goog.exportSymbol('proto.PbModel.WorldBoss.WorldBossGetBossReq', null, global);
goog.exportSymbol('proto.PbModel.WorldBoss.WorldBossGetBossRes', null, global);
goog.exportSymbol('proto.PbModel.WorldBoss.WorldBossGetHonorRankReq', null, global);
goog.exportSymbol('proto.PbModel.WorldBoss.WorldBossGetHonorRankRes', null, global);
goog.exportSymbol('proto.PbModel.WorldBoss.WorldBossGetRankReq', null, global);
goog.exportSymbol('proto.PbModel.WorldBoss.WorldBossGetRankRes', null, global);
goog.exportSymbol('proto.PbModel.WorldBoss.WorldBossGiveUpFightReq', null, global);
goog.exportSymbol('proto.PbModel.WorldBoss.WorldBossGiveUpFightRes', null, global);
goog.exportSymbol('proto.PbModel.WorldBoss.WorldBossModel', null, global);
goog.exportSymbol('proto.PbModel.WorldBoss.WorldBossPlayerData', null, global);
goog.exportSymbol('proto.PbModel.WorldBoss.WorldBossPlayerList', null, global);
goog.exportSymbol('proto.PbModel.WorldBoss.WorldBossPlayerRank', null, global);
goog.exportSymbol('proto.PbModel.WorldBoss.WorldBossPushAttentionBossRes', null, global);
goog.exportSymbol('proto.PbModel.WorldBoss.WorldBossReward', null, global);
goog.exportSymbol('proto.PbModel.WorldBoss.WorldBossUnpackReq', null, global);
goog.exportSymbol('proto.PbModel.WorldBoss.WorldBossUnpackRes', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.WorldBoss.WorldBossAcceptAwardReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.WorldBoss.WorldBossAcceptAwardReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.WorldBoss.WorldBossAcceptAwardReq.displayName = 'proto.PbModel.WorldBoss.WorldBossAcceptAwardReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.WorldBoss.WorldBossAcceptAwardRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.WorldBoss.WorldBossAcceptAwardRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.WorldBoss.WorldBossAcceptAwardRes.displayName = 'proto.PbModel.WorldBoss.WorldBossAcceptAwardRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.WorldBoss.WorldBossAttentionBossReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.WorldBoss.WorldBossAttentionBossReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.WorldBoss.WorldBossAttentionBossReq.displayName = 'proto.PbModel.WorldBoss.WorldBossAttentionBossReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.WorldBoss.WorldBossAttentionBossRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.WorldBoss.WorldBossAttentionBossRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.WorldBoss.WorldBossAttentionBossRes.displayName = 'proto.PbModel.WorldBoss.WorldBossAttentionBossRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.WorldBoss.WorldBossFightReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.WorldBoss.WorldBossFightReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.WorldBoss.WorldBossFightReq.displayName = 'proto.PbModel.WorldBoss.WorldBossFightReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.WorldBoss.WorldBossFightRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.WorldBoss.WorldBossFightRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.WorldBoss.WorldBossFightRes.displayName = 'proto.PbModel.WorldBoss.WorldBossFightRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.WorldBoss.WorldBossFight = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.WorldBoss.WorldBossFight, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.WorldBoss.WorldBossFight.displayName = 'proto.PbModel.WorldBoss.WorldBossFight';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.WorldBoss.WorldBossGetBossReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.WorldBoss.WorldBossGetBossReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.WorldBoss.WorldBossGetBossReq.displayName = 'proto.PbModel.WorldBoss.WorldBossGetBossReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.WorldBoss.WorldBossGetBossRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.WorldBoss.WorldBossGetBossRes.repeatedFields_, null);
};
goog.inherits(proto.PbModel.WorldBoss.WorldBossGetBossRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.WorldBoss.WorldBossGetBossRes.displayName = 'proto.PbModel.WorldBoss.WorldBossGetBossRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.WorldBoss.WorldBossModel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.WorldBoss.WorldBossModel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.WorldBoss.WorldBossModel.displayName = 'proto.PbModel.WorldBoss.WorldBossModel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.WorldBoss.WorldBossPlayerRank = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.WorldBoss.WorldBossPlayerRank, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.WorldBoss.WorldBossPlayerRank.displayName = 'proto.PbModel.WorldBoss.WorldBossPlayerRank';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.WorldBoss.WorldBossPlayerData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.WorldBoss.WorldBossPlayerData.repeatedFields_, null);
};
goog.inherits(proto.PbModel.WorldBoss.WorldBossPlayerData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.WorldBoss.WorldBossPlayerData.displayName = 'proto.PbModel.WorldBoss.WorldBossPlayerData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.WorldBoss.WorldBossReward = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.WorldBoss.WorldBossReward, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.WorldBoss.WorldBossReward.displayName = 'proto.PbModel.WorldBoss.WorldBossReward';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.WorldBoss.WorldBossGetHonorRankReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.WorldBoss.WorldBossGetHonorRankReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.WorldBoss.WorldBossGetHonorRankReq.displayName = 'proto.PbModel.WorldBoss.WorldBossGetHonorRankReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.WorldBoss.WorldBossGetHonorRankRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.WorldBoss.WorldBossGetHonorRankRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.WorldBoss.WorldBossGetHonorRankRes.displayName = 'proto.PbModel.WorldBoss.WorldBossGetHonorRankRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.WorldBoss.WorldBossPlayerList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.WorldBoss.WorldBossPlayerList.repeatedFields_, null);
};
goog.inherits(proto.PbModel.WorldBoss.WorldBossPlayerList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.WorldBoss.WorldBossPlayerList.displayName = 'proto.PbModel.WorldBoss.WorldBossPlayerList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.WorldBoss.WorldBossGetRankReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.WorldBoss.WorldBossGetRankReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.WorldBoss.WorldBossGetRankReq.displayName = 'proto.PbModel.WorldBoss.WorldBossGetRankReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.WorldBoss.WorldBossGetRankRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.WorldBoss.WorldBossGetRankRes.repeatedFields_, null);
};
goog.inherits(proto.PbModel.WorldBoss.WorldBossGetRankRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.WorldBoss.WorldBossGetRankRes.displayName = 'proto.PbModel.WorldBoss.WorldBossGetRankRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.WorldBoss.WorldBossGiveUpFightReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.WorldBoss.WorldBossGiveUpFightReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.WorldBoss.WorldBossGiveUpFightReq.displayName = 'proto.PbModel.WorldBoss.WorldBossGiveUpFightReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.WorldBoss.WorldBossGiveUpFightRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.WorldBoss.WorldBossGiveUpFightRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.WorldBoss.WorldBossGiveUpFightRes.displayName = 'proto.PbModel.WorldBoss.WorldBossGiveUpFightRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.WorldBoss.WorldBossUnpackReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.WorldBoss.WorldBossUnpackReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.WorldBoss.WorldBossUnpackReq.displayName = 'proto.PbModel.WorldBoss.WorldBossUnpackReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.WorldBoss.WorldBossUnpackRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.WorldBoss.WorldBossUnpackRes.repeatedFields_, null);
};
goog.inherits(proto.PbModel.WorldBoss.WorldBossUnpackRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.WorldBoss.WorldBossUnpackRes.displayName = 'proto.PbModel.WorldBoss.WorldBossUnpackRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.WorldBoss.WorldBossPushAttentionBossRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.WorldBoss.WorldBossPushAttentionBossRes.repeatedFields_, null);
};
goog.inherits(proto.PbModel.WorldBoss.WorldBossPushAttentionBossRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.WorldBoss.WorldBossPushAttentionBossRes.displayName = 'proto.PbModel.WorldBoss.WorldBossPushAttentionBossRes';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.WorldBoss.WorldBossAcceptAwardReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.WorldBoss.WorldBossAcceptAwardReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.WorldBoss.WorldBossAcceptAwardReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.WorldBoss.WorldBossAcceptAwardReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    bossid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.WorldBoss.WorldBossAcceptAwardReq}
 */
proto.PbModel.WorldBoss.WorldBossAcceptAwardReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.WorldBoss.WorldBossAcceptAwardReq;
  return proto.PbModel.WorldBoss.WorldBossAcceptAwardReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.WorldBoss.WorldBossAcceptAwardReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.WorldBoss.WorldBossAcceptAwardReq}
 */
proto.PbModel.WorldBoss.WorldBossAcceptAwardReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBossid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.WorldBoss.WorldBossAcceptAwardReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.WorldBoss.WorldBossAcceptAwardReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.WorldBoss.WorldBossAcceptAwardReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.WorldBoss.WorldBossAcceptAwardReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBossid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 BossId = 1;
 * @return {number}
 */
proto.PbModel.WorldBoss.WorldBossAcceptAwardReq.prototype.getBossid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.WorldBoss.WorldBossAcceptAwardReq} returns this
 */
proto.PbModel.WorldBoss.WorldBossAcceptAwardReq.prototype.setBossid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.WorldBoss.WorldBossAcceptAwardRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.WorldBoss.WorldBossAcceptAwardRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.WorldBoss.WorldBossAcceptAwardRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.WorldBoss.WorldBossAcceptAwardRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    playerdata: (f = msg.getPlayerdata()) && proto.PbModel.WorldBoss.WorldBossPlayerData.toObject(includeInstance, f),
    basegetgameresourcelist: (f = msg.getBasegetgameresourcelist()) && Resource_pb.ResourceToClientModel.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.WorldBoss.WorldBossAcceptAwardRes}
 */
proto.PbModel.WorldBoss.WorldBossAcceptAwardRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.WorldBoss.WorldBossAcceptAwardRes;
  return proto.PbModel.WorldBoss.WorldBossAcceptAwardRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.WorldBoss.WorldBossAcceptAwardRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.WorldBoss.WorldBossAcceptAwardRes}
 */
proto.PbModel.WorldBoss.WorldBossAcceptAwardRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PbModel.WorldBoss.WorldBossPlayerData;
      reader.readMessage(value,proto.PbModel.WorldBoss.WorldBossPlayerData.deserializeBinaryFromReader);
      msg.setPlayerdata(value);
      break;
    case 2:
      var value = new Resource_pb.ResourceToClientModel;
      reader.readMessage(value,Resource_pb.ResourceToClientModel.deserializeBinaryFromReader);
      msg.setBasegetgameresourcelist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.WorldBoss.WorldBossAcceptAwardRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.WorldBoss.WorldBossAcceptAwardRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.WorldBoss.WorldBossAcceptAwardRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.WorldBoss.WorldBossAcceptAwardRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlayerdata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.PbModel.WorldBoss.WorldBossPlayerData.serializeBinaryToWriter
    );
  }
  f = message.getBasegetgameresourcelist();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      Resource_pb.ResourceToClientModel.serializeBinaryToWriter
    );
  }
};


/**
 * optional WorldBossPlayerData PlayerData = 1;
 * @return {?proto.PbModel.WorldBoss.WorldBossPlayerData}
 */
proto.PbModel.WorldBoss.WorldBossAcceptAwardRes.prototype.getPlayerdata = function() {
  return /** @type{?proto.PbModel.WorldBoss.WorldBossPlayerData} */ (
    jspb.Message.getWrapperField(this, proto.PbModel.WorldBoss.WorldBossPlayerData, 1));
};


/**
 * @param {?proto.PbModel.WorldBoss.WorldBossPlayerData|undefined} value
 * @return {!proto.PbModel.WorldBoss.WorldBossAcceptAwardRes} returns this
*/
proto.PbModel.WorldBoss.WorldBossAcceptAwardRes.prototype.setPlayerdata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.WorldBoss.WorldBossAcceptAwardRes} returns this
 */
proto.PbModel.WorldBoss.WorldBossAcceptAwardRes.prototype.clearPlayerdata = function() {
  return this.setPlayerdata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.WorldBoss.WorldBossAcceptAwardRes.prototype.hasPlayerdata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional PbModel.Resource.ResourceToClientModel BaseGetGameResourceList = 2;
 * @return {?proto.PbModel.Resource.ResourceToClientModel}
 */
proto.PbModel.WorldBoss.WorldBossAcceptAwardRes.prototype.getBasegetgameresourcelist = function() {
  return /** @type{?proto.PbModel.Resource.ResourceToClientModel} */ (
    jspb.Message.getWrapperField(this, Resource_pb.ResourceToClientModel, 2));
};


/**
 * @param {?proto.PbModel.Resource.ResourceToClientModel|undefined} value
 * @return {!proto.PbModel.WorldBoss.WorldBossAcceptAwardRes} returns this
*/
proto.PbModel.WorldBoss.WorldBossAcceptAwardRes.prototype.setBasegetgameresourcelist = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.WorldBoss.WorldBossAcceptAwardRes} returns this
 */
proto.PbModel.WorldBoss.WorldBossAcceptAwardRes.prototype.clearBasegetgameresourcelist = function() {
  return this.setBasegetgameresourcelist(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.WorldBoss.WorldBossAcceptAwardRes.prototype.hasBasegetgameresourcelist = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.WorldBoss.WorldBossAttentionBossReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.WorldBoss.WorldBossAttentionBossReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.WorldBoss.WorldBossAttentionBossReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.WorldBoss.WorldBossAttentionBossReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    bossid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    isattention: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.WorldBoss.WorldBossAttentionBossReq}
 */
proto.PbModel.WorldBoss.WorldBossAttentionBossReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.WorldBoss.WorldBossAttentionBossReq;
  return proto.PbModel.WorldBoss.WorldBossAttentionBossReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.WorldBoss.WorldBossAttentionBossReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.WorldBoss.WorldBossAttentionBossReq}
 */
proto.PbModel.WorldBoss.WorldBossAttentionBossReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBossid(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsattention(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.WorldBoss.WorldBossAttentionBossReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.WorldBoss.WorldBossAttentionBossReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.WorldBoss.WorldBossAttentionBossReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.WorldBoss.WorldBossAttentionBossReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBossid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getIsattention();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional int32 BossId = 1;
 * @return {number}
 */
proto.PbModel.WorldBoss.WorldBossAttentionBossReq.prototype.getBossid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.WorldBoss.WorldBossAttentionBossReq} returns this
 */
proto.PbModel.WorldBoss.WorldBossAttentionBossReq.prototype.setBossid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool IsAttention = 2;
 * @return {boolean}
 */
proto.PbModel.WorldBoss.WorldBossAttentionBossReq.prototype.getIsattention = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PbModel.WorldBoss.WorldBossAttentionBossReq} returns this
 */
proto.PbModel.WorldBoss.WorldBossAttentionBossReq.prototype.setIsattention = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.WorldBoss.WorldBossAttentionBossRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.WorldBoss.WorldBossAttentionBossRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.WorldBoss.WorldBossAttentionBossRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.WorldBoss.WorldBossAttentionBossRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    playerdata: (f = msg.getPlayerdata()) && proto.PbModel.WorldBoss.WorldBossPlayerData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.WorldBoss.WorldBossAttentionBossRes}
 */
proto.PbModel.WorldBoss.WorldBossAttentionBossRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.WorldBoss.WorldBossAttentionBossRes;
  return proto.PbModel.WorldBoss.WorldBossAttentionBossRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.WorldBoss.WorldBossAttentionBossRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.WorldBoss.WorldBossAttentionBossRes}
 */
proto.PbModel.WorldBoss.WorldBossAttentionBossRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PbModel.WorldBoss.WorldBossPlayerData;
      reader.readMessage(value,proto.PbModel.WorldBoss.WorldBossPlayerData.deserializeBinaryFromReader);
      msg.setPlayerdata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.WorldBoss.WorldBossAttentionBossRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.WorldBoss.WorldBossAttentionBossRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.WorldBoss.WorldBossAttentionBossRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.WorldBoss.WorldBossAttentionBossRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlayerdata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.PbModel.WorldBoss.WorldBossPlayerData.serializeBinaryToWriter
    );
  }
};


/**
 * optional WorldBossPlayerData PlayerData = 1;
 * @return {?proto.PbModel.WorldBoss.WorldBossPlayerData}
 */
proto.PbModel.WorldBoss.WorldBossAttentionBossRes.prototype.getPlayerdata = function() {
  return /** @type{?proto.PbModel.WorldBoss.WorldBossPlayerData} */ (
    jspb.Message.getWrapperField(this, proto.PbModel.WorldBoss.WorldBossPlayerData, 1));
};


/**
 * @param {?proto.PbModel.WorldBoss.WorldBossPlayerData|undefined} value
 * @return {!proto.PbModel.WorldBoss.WorldBossAttentionBossRes} returns this
*/
proto.PbModel.WorldBoss.WorldBossAttentionBossRes.prototype.setPlayerdata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.WorldBoss.WorldBossAttentionBossRes} returns this
 */
proto.PbModel.WorldBoss.WorldBossAttentionBossRes.prototype.clearPlayerdata = function() {
  return this.setPlayerdata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.WorldBoss.WorldBossAttentionBossRes.prototype.hasPlayerdata = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.WorldBoss.WorldBossFightReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.WorldBoss.WorldBossFightReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.WorldBoss.WorldBossFightReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.WorldBoss.WorldBossFightReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    bossid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.WorldBoss.WorldBossFightReq}
 */
proto.PbModel.WorldBoss.WorldBossFightReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.WorldBoss.WorldBossFightReq;
  return proto.PbModel.WorldBoss.WorldBossFightReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.WorldBoss.WorldBossFightReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.WorldBoss.WorldBossFightReq}
 */
proto.PbModel.WorldBoss.WorldBossFightReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBossid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.WorldBoss.WorldBossFightReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.WorldBoss.WorldBossFightReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.WorldBoss.WorldBossFightReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.WorldBoss.WorldBossFightReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBossid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 BossId = 1;
 * @return {number}
 */
proto.PbModel.WorldBoss.WorldBossFightReq.prototype.getBossid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.WorldBoss.WorldBossFightReq} returns this
 */
proto.PbModel.WorldBoss.WorldBossFightReq.prototype.setBossid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.WorldBoss.WorldBossFightRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.WorldBoss.WorldBossFightRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.WorldBoss.WorldBossFightRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.WorldBoss.WorldBossFightRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    bossinfo: (f = msg.getBossinfo()) && proto.PbModel.WorldBoss.WorldBossModel.toObject(includeInstance, f),
    fightreport: (f = msg.getFightreport()) && Fight_pb.FightReport.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.WorldBoss.WorldBossFightRes}
 */
proto.PbModel.WorldBoss.WorldBossFightRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.WorldBoss.WorldBossFightRes;
  return proto.PbModel.WorldBoss.WorldBossFightRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.WorldBoss.WorldBossFightRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.WorldBoss.WorldBossFightRes}
 */
proto.PbModel.WorldBoss.WorldBossFightRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PbModel.WorldBoss.WorldBossModel;
      reader.readMessage(value,proto.PbModel.WorldBoss.WorldBossModel.deserializeBinaryFromReader);
      msg.setBossinfo(value);
      break;
    case 5:
      var value = new Fight_pb.FightReport;
      reader.readMessage(value,Fight_pb.FightReport.deserializeBinaryFromReader);
      msg.setFightreport(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.WorldBoss.WorldBossFightRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.WorldBoss.WorldBossFightRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.WorldBoss.WorldBossFightRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.WorldBoss.WorldBossFightRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBossinfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.PbModel.WorldBoss.WorldBossModel.serializeBinaryToWriter
    );
  }
  f = message.getFightreport();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      Fight_pb.FightReport.serializeBinaryToWriter
    );
  }
};


/**
 * optional WorldBossModel BossInfo = 1;
 * @return {?proto.PbModel.WorldBoss.WorldBossModel}
 */
proto.PbModel.WorldBoss.WorldBossFightRes.prototype.getBossinfo = function() {
  return /** @type{?proto.PbModel.WorldBoss.WorldBossModel} */ (
    jspb.Message.getWrapperField(this, proto.PbModel.WorldBoss.WorldBossModel, 1));
};


/**
 * @param {?proto.PbModel.WorldBoss.WorldBossModel|undefined} value
 * @return {!proto.PbModel.WorldBoss.WorldBossFightRes} returns this
*/
proto.PbModel.WorldBoss.WorldBossFightRes.prototype.setBossinfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.WorldBoss.WorldBossFightRes} returns this
 */
proto.PbModel.WorldBoss.WorldBossFightRes.prototype.clearBossinfo = function() {
  return this.setBossinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.WorldBoss.WorldBossFightRes.prototype.hasBossinfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional PbModel.Fight.FightReport FightReport = 5;
 * @return {?proto.PbModel.Fight.FightReport}
 */
proto.PbModel.WorldBoss.WorldBossFightRes.prototype.getFightreport = function() {
  return /** @type{?proto.PbModel.Fight.FightReport} */ (
    jspb.Message.getWrapperField(this, Fight_pb.FightReport, 5));
};


/**
 * @param {?proto.PbModel.Fight.FightReport|undefined} value
 * @return {!proto.PbModel.WorldBoss.WorldBossFightRes} returns this
*/
proto.PbModel.WorldBoss.WorldBossFightRes.prototype.setFightreport = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.WorldBoss.WorldBossFightRes} returns this
 */
proto.PbModel.WorldBoss.WorldBossFightRes.prototype.clearFightreport = function() {
  return this.setFightreport(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.WorldBoss.WorldBossFightRes.prototype.hasFightreport = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.WorldBoss.WorldBossFight.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.WorldBoss.WorldBossFight.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.WorldBoss.WorldBossFight} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.WorldBoss.WorldBossFight.toObject = function(includeInstance, msg) {
  var f, obj = {
    playerid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    bossid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    curhpper: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    playercurhpper: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    totalhp: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.WorldBoss.WorldBossFight}
 */
proto.PbModel.WorldBoss.WorldBossFight.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.WorldBoss.WorldBossFight;
  return proto.PbModel.WorldBoss.WorldBossFight.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.WorldBoss.WorldBossFight} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.WorldBoss.WorldBossFight}
 */
proto.PbModel.WorldBoss.WorldBossFight.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlayerid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBossid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCurhpper(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPlayercurhpper(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotalhp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.WorldBoss.WorldBossFight.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.WorldBoss.WorldBossFight.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.WorldBoss.WorldBossFight} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.WorldBoss.WorldBossFight.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlayerid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBossid();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getCurhpper();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getPlayercurhpper();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getTotalhp();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
};


/**
 * optional string PlayerId = 1;
 * @return {string}
 */
proto.PbModel.WorldBoss.WorldBossFight.prototype.getPlayerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.WorldBoss.WorldBossFight} returns this
 */
proto.PbModel.WorldBoss.WorldBossFight.prototype.setPlayerid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 BossId = 2;
 * @return {number}
 */
proto.PbModel.WorldBoss.WorldBossFight.prototype.getBossid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.WorldBoss.WorldBossFight} returns this
 */
proto.PbModel.WorldBoss.WorldBossFight.prototype.setBossid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional double CurHpPer = 3;
 * @return {number}
 */
proto.PbModel.WorldBoss.WorldBossFight.prototype.getCurhpper = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.WorldBoss.WorldBossFight} returns this
 */
proto.PbModel.WorldBoss.WorldBossFight.prototype.setCurhpper = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double PlayerCurHpPer = 4;
 * @return {number}
 */
proto.PbModel.WorldBoss.WorldBossFight.prototype.getPlayercurhpper = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.WorldBoss.WorldBossFight} returns this
 */
proto.PbModel.WorldBoss.WorldBossFight.prototype.setPlayercurhpper = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional int64 TotalHp = 5;
 * @return {number}
 */
proto.PbModel.WorldBoss.WorldBossFight.prototype.getTotalhp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.WorldBoss.WorldBossFight} returns this
 */
proto.PbModel.WorldBoss.WorldBossFight.prototype.setTotalhp = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.WorldBoss.WorldBossGetBossReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.WorldBoss.WorldBossGetBossReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.WorldBoss.WorldBossGetBossReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.WorldBoss.WorldBossGetBossReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    stagestr: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.WorldBoss.WorldBossGetBossReq}
 */
proto.PbModel.WorldBoss.WorldBossGetBossReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.WorldBoss.WorldBossGetBossReq;
  return proto.PbModel.WorldBoss.WorldBossGetBossReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.WorldBoss.WorldBossGetBossReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.WorldBoss.WorldBossGetBossReq}
 */
proto.PbModel.WorldBoss.WorldBossGetBossReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStagestr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.WorldBoss.WorldBossGetBossReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.WorldBoss.WorldBossGetBossReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.WorldBoss.WorldBossGetBossReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.WorldBoss.WorldBossGetBossReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStagestr();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string stageStr = 1;
 * @return {string}
 */
proto.PbModel.WorldBoss.WorldBossGetBossReq.prototype.getStagestr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.WorldBoss.WorldBossGetBossReq} returns this
 */
proto.PbModel.WorldBoss.WorldBossGetBossReq.prototype.setStagestr = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.WorldBoss.WorldBossGetBossRes.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.WorldBoss.WorldBossGetBossRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.WorldBoss.WorldBossGetBossRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.WorldBoss.WorldBossGetBossRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.WorldBoss.WorldBossGetBossRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    bossinfosList: jspb.Message.toObjectList(msg.getBossinfosList(),
    proto.PbModel.WorldBoss.WorldBossModel.toObject, includeInstance),
    playerdata: (f = msg.getPlayerdata()) && proto.PbModel.WorldBoss.WorldBossPlayerData.toObject(includeInstance, f),
    starttime: jspb.Message.getFieldWithDefault(msg, 3, 0),
    endtime: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.WorldBoss.WorldBossGetBossRes}
 */
proto.PbModel.WorldBoss.WorldBossGetBossRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.WorldBoss.WorldBossGetBossRes;
  return proto.PbModel.WorldBoss.WorldBossGetBossRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.WorldBoss.WorldBossGetBossRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.WorldBoss.WorldBossGetBossRes}
 */
proto.PbModel.WorldBoss.WorldBossGetBossRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PbModel.WorldBoss.WorldBossModel;
      reader.readMessage(value,proto.PbModel.WorldBoss.WorldBossModel.deserializeBinaryFromReader);
      msg.addBossinfos(value);
      break;
    case 2:
      var value = new proto.PbModel.WorldBoss.WorldBossPlayerData;
      reader.readMessage(value,proto.PbModel.WorldBoss.WorldBossPlayerData.deserializeBinaryFromReader);
      msg.setPlayerdata(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStarttime(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEndtime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.WorldBoss.WorldBossGetBossRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.WorldBoss.WorldBossGetBossRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.WorldBoss.WorldBossGetBossRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.WorldBoss.WorldBossGetBossRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBossinfosList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.PbModel.WorldBoss.WorldBossModel.serializeBinaryToWriter
    );
  }
  f = message.getPlayerdata();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.PbModel.WorldBoss.WorldBossPlayerData.serializeBinaryToWriter
    );
  }
  f = message.getStarttime();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getEndtime();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
};


/**
 * repeated WorldBossModel BossInfos = 1;
 * @return {!Array<!proto.PbModel.WorldBoss.WorldBossModel>}
 */
proto.PbModel.WorldBoss.WorldBossGetBossRes.prototype.getBossinfosList = function() {
  return /** @type{!Array<!proto.PbModel.WorldBoss.WorldBossModel>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.WorldBoss.WorldBossModel, 1));
};


/**
 * @param {!Array<!proto.PbModel.WorldBoss.WorldBossModel>} value
 * @return {!proto.PbModel.WorldBoss.WorldBossGetBossRes} returns this
*/
proto.PbModel.WorldBoss.WorldBossGetBossRes.prototype.setBossinfosList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.PbModel.WorldBoss.WorldBossModel=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.WorldBoss.WorldBossModel}
 */
proto.PbModel.WorldBoss.WorldBossGetBossRes.prototype.addBossinfos = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.PbModel.WorldBoss.WorldBossModel, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.WorldBoss.WorldBossGetBossRes} returns this
 */
proto.PbModel.WorldBoss.WorldBossGetBossRes.prototype.clearBossinfosList = function() {
  return this.setBossinfosList([]);
};


/**
 * optional WorldBossPlayerData PlayerData = 2;
 * @return {?proto.PbModel.WorldBoss.WorldBossPlayerData}
 */
proto.PbModel.WorldBoss.WorldBossGetBossRes.prototype.getPlayerdata = function() {
  return /** @type{?proto.PbModel.WorldBoss.WorldBossPlayerData} */ (
    jspb.Message.getWrapperField(this, proto.PbModel.WorldBoss.WorldBossPlayerData, 2));
};


/**
 * @param {?proto.PbModel.WorldBoss.WorldBossPlayerData|undefined} value
 * @return {!proto.PbModel.WorldBoss.WorldBossGetBossRes} returns this
*/
proto.PbModel.WorldBoss.WorldBossGetBossRes.prototype.setPlayerdata = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.WorldBoss.WorldBossGetBossRes} returns this
 */
proto.PbModel.WorldBoss.WorldBossGetBossRes.prototype.clearPlayerdata = function() {
  return this.setPlayerdata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.WorldBoss.WorldBossGetBossRes.prototype.hasPlayerdata = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int64 StartTime = 3;
 * @return {number}
 */
proto.PbModel.WorldBoss.WorldBossGetBossRes.prototype.getStarttime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.WorldBoss.WorldBossGetBossRes} returns this
 */
proto.PbModel.WorldBoss.WorldBossGetBossRes.prototype.setStarttime = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 EndTime = 4;
 * @return {number}
 */
proto.PbModel.WorldBoss.WorldBossGetBossRes.prototype.getEndtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.WorldBoss.WorldBossGetBossRes} returns this
 */
proto.PbModel.WorldBoss.WorldBossGetBossRes.prototype.setEndtime = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.WorldBoss.WorldBossModel.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.WorldBoss.WorldBossModel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.WorldBoss.WorldBossModel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.WorldBoss.WorldBossModel.toObject = function(includeInstance, msg) {
  var f, obj = {
    bossid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    curhpper: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    refreshtime: jspb.Message.getFieldWithDefault(msg, 3, 0),
    fightnum: jspb.Message.getFieldWithDefault(msg, 4, 0),
    startfighttime: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.WorldBoss.WorldBossModel}
 */
proto.PbModel.WorldBoss.WorldBossModel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.WorldBoss.WorldBossModel;
  return proto.PbModel.WorldBoss.WorldBossModel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.WorldBoss.WorldBossModel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.WorldBoss.WorldBossModel}
 */
proto.PbModel.WorldBoss.WorldBossModel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBossid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCurhpper(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRefreshtime(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFightnum(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStartfighttime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.WorldBoss.WorldBossModel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.WorldBoss.WorldBossModel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.WorldBoss.WorldBossModel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.WorldBoss.WorldBossModel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBossid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getCurhpper();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getRefreshtime();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getFightnum();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getStartfighttime();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
};


/**
 * optional int32 BossId = 1;
 * @return {number}
 */
proto.PbModel.WorldBoss.WorldBossModel.prototype.getBossid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.WorldBoss.WorldBossModel} returns this
 */
proto.PbModel.WorldBoss.WorldBossModel.prototype.setBossid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional double CurHpPer = 2;
 * @return {number}
 */
proto.PbModel.WorldBoss.WorldBossModel.prototype.getCurhpper = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.WorldBoss.WorldBossModel} returns this
 */
proto.PbModel.WorldBoss.WorldBossModel.prototype.setCurhpper = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional int64 RefreshTime = 3;
 * @return {number}
 */
proto.PbModel.WorldBoss.WorldBossModel.prototype.getRefreshtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.WorldBoss.WorldBossModel} returns this
 */
proto.PbModel.WorldBoss.WorldBossModel.prototype.setRefreshtime = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 FightNum = 4;
 * @return {number}
 */
proto.PbModel.WorldBoss.WorldBossModel.prototype.getFightnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.WorldBoss.WorldBossModel} returns this
 */
proto.PbModel.WorldBoss.WorldBossModel.prototype.setFightnum = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 StartFightTime = 5;
 * @return {number}
 */
proto.PbModel.WorldBoss.WorldBossModel.prototype.getStartfighttime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.WorldBoss.WorldBossModel} returns this
 */
proto.PbModel.WorldBoss.WorldBossModel.prototype.setStartfighttime = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.WorldBoss.WorldBossPlayerRank.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.WorldBoss.WorldBossPlayerRank.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.WorldBoss.WorldBossPlayerRank} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.WorldBoss.WorldBossPlayerRank.toObject = function(includeInstance, msg) {
  var f, obj = {
    playerid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    dmg: jspb.Message.getFieldWithDefault(msg, 2, 0),
    formation: jspb.Message.getFieldWithDefault(msg, 3, ""),
    statdata: jspb.Message.getFieldWithDefault(msg, 4, ""),
    bossid: jspb.Message.getFieldWithDefault(msg, 5, 0),
    playercommoninfo: (f = msg.getPlayercommoninfo()) && Player_pb.PlayerCommonInfoRes.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.WorldBoss.WorldBossPlayerRank}
 */
proto.PbModel.WorldBoss.WorldBossPlayerRank.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.WorldBoss.WorldBossPlayerRank;
  return proto.PbModel.WorldBoss.WorldBossPlayerRank.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.WorldBoss.WorldBossPlayerRank} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.WorldBoss.WorldBossPlayerRank}
 */
proto.PbModel.WorldBoss.WorldBossPlayerRank.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlayerid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDmg(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFormation(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatdata(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBossid(value);
      break;
    case 6:
      var value = new Player_pb.PlayerCommonInfoRes;
      reader.readMessage(value,Player_pb.PlayerCommonInfoRes.deserializeBinaryFromReader);
      msg.setPlayercommoninfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.WorldBoss.WorldBossPlayerRank.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.WorldBoss.WorldBossPlayerRank.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.WorldBoss.WorldBossPlayerRank} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.WorldBoss.WorldBossPlayerRank.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlayerid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDmg();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getFormation();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStatdata();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getBossid();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getPlayercommoninfo();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      Player_pb.PlayerCommonInfoRes.serializeBinaryToWriter
    );
  }
};


/**
 * optional string PlayerId = 1;
 * @return {string}
 */
proto.PbModel.WorldBoss.WorldBossPlayerRank.prototype.getPlayerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.WorldBoss.WorldBossPlayerRank} returns this
 */
proto.PbModel.WorldBoss.WorldBossPlayerRank.prototype.setPlayerid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 Dmg = 2;
 * @return {number}
 */
proto.PbModel.WorldBoss.WorldBossPlayerRank.prototype.getDmg = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.WorldBoss.WorldBossPlayerRank} returns this
 */
proto.PbModel.WorldBoss.WorldBossPlayerRank.prototype.setDmg = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string Formation = 3;
 * @return {string}
 */
proto.PbModel.WorldBoss.WorldBossPlayerRank.prototype.getFormation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.WorldBoss.WorldBossPlayerRank} returns this
 */
proto.PbModel.WorldBoss.WorldBossPlayerRank.prototype.setFormation = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string StatData = 4;
 * @return {string}
 */
proto.PbModel.WorldBoss.WorldBossPlayerRank.prototype.getStatdata = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.WorldBoss.WorldBossPlayerRank} returns this
 */
proto.PbModel.WorldBoss.WorldBossPlayerRank.prototype.setStatdata = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 BossId = 5;
 * @return {number}
 */
proto.PbModel.WorldBoss.WorldBossPlayerRank.prototype.getBossid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.WorldBoss.WorldBossPlayerRank} returns this
 */
proto.PbModel.WorldBoss.WorldBossPlayerRank.prototype.setBossid = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional PbModel.Player.PlayerCommonInfoRes PlayerCommonInfo = 6;
 * @return {?proto.PbModel.Player.PlayerCommonInfoRes}
 */
proto.PbModel.WorldBoss.WorldBossPlayerRank.prototype.getPlayercommoninfo = function() {
  return /** @type{?proto.PbModel.Player.PlayerCommonInfoRes} */ (
    jspb.Message.getWrapperField(this, Player_pb.PlayerCommonInfoRes, 6));
};


/**
 * @param {?proto.PbModel.Player.PlayerCommonInfoRes|undefined} value
 * @return {!proto.PbModel.WorldBoss.WorldBossPlayerRank} returns this
*/
proto.PbModel.WorldBoss.WorldBossPlayerRank.prototype.setPlayercommoninfo = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.WorldBoss.WorldBossPlayerRank} returns this
 */
proto.PbModel.WorldBoss.WorldBossPlayerRank.prototype.clearPlayercommoninfo = function() {
  return this.setPlayercommoninfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.WorldBoss.WorldBossPlayerRank.prototype.hasPlayercommoninfo = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.WorldBoss.WorldBossPlayerData.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.WorldBoss.WorldBossPlayerData.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.WorldBoss.WorldBossPlayerData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.WorldBoss.WorldBossPlayerData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.WorldBoss.WorldBossPlayerData.toObject = function(includeInstance, msg) {
  var f, obj = {
    bossid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    challengenum: jspb.Message.getFieldWithDefault(msg, 2, 0),
    awardstatusdictMap: (f = msg.getAwardstatusdictMap()) ? f.toObject(includeInstance, proto.PbModel.WorldBoss.WorldBossReward.toObject) : [],
    lastfighttime: jspb.Message.getFieldWithDefault(msg, 4, 0),
    attentionbossidlistList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.WorldBoss.WorldBossPlayerData}
 */
proto.PbModel.WorldBoss.WorldBossPlayerData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.WorldBoss.WorldBossPlayerData;
  return proto.PbModel.WorldBoss.WorldBossPlayerData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.WorldBoss.WorldBossPlayerData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.WorldBoss.WorldBossPlayerData}
 */
proto.PbModel.WorldBoss.WorldBossPlayerData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBossid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setChallengenum(value);
      break;
    case 3:
      var value = msg.getAwardstatusdictMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readMessage, proto.PbModel.WorldBoss.WorldBossReward.deserializeBinaryFromReader, 0, new proto.PbModel.WorldBoss.WorldBossReward());
         });
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLastfighttime(value);
      break;
    case 5:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setAttentionbossidlistList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.WorldBoss.WorldBossPlayerData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.WorldBoss.WorldBossPlayerData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.WorldBoss.WorldBossPlayerData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.WorldBoss.WorldBossPlayerData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBossid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getChallengenum();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getAwardstatusdictMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeMessage, proto.PbModel.WorldBoss.WorldBossReward.serializeBinaryToWriter);
  }
  f = message.getLastfighttime();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getAttentionbossidlistList();
  if (f.length > 0) {
    writer.writePackedInt32(
      5,
      f
    );
  }
};


/**
 * optional int32 BossId = 1;
 * @return {number}
 */
proto.PbModel.WorldBoss.WorldBossPlayerData.prototype.getBossid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.WorldBoss.WorldBossPlayerData} returns this
 */
proto.PbModel.WorldBoss.WorldBossPlayerData.prototype.setBossid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 ChallengeNum = 2;
 * @return {number}
 */
proto.PbModel.WorldBoss.WorldBossPlayerData.prototype.getChallengenum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.WorldBoss.WorldBossPlayerData} returns this
 */
proto.PbModel.WorldBoss.WorldBossPlayerData.prototype.setChallengenum = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * map<int32, WorldBossReward> AwardStatusDict = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,!proto.PbModel.WorldBoss.WorldBossReward>}
 */
proto.PbModel.WorldBoss.WorldBossPlayerData.prototype.getAwardstatusdictMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,!proto.PbModel.WorldBoss.WorldBossReward>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      proto.PbModel.WorldBoss.WorldBossReward));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.PbModel.WorldBoss.WorldBossPlayerData} returns this
 */
proto.PbModel.WorldBoss.WorldBossPlayerData.prototype.clearAwardstatusdictMap = function() {
  this.getAwardstatusdictMap().clear();
  return this;};


/**
 * optional int64 LastFightTime = 4;
 * @return {number}
 */
proto.PbModel.WorldBoss.WorldBossPlayerData.prototype.getLastfighttime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.WorldBoss.WorldBossPlayerData} returns this
 */
proto.PbModel.WorldBoss.WorldBossPlayerData.prototype.setLastfighttime = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * repeated int32 AttentionBossIdList = 5;
 * @return {!Array<number>}
 */
proto.PbModel.WorldBoss.WorldBossPlayerData.prototype.getAttentionbossidlistList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.PbModel.WorldBoss.WorldBossPlayerData} returns this
 */
proto.PbModel.WorldBoss.WorldBossPlayerData.prototype.setAttentionbossidlistList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.PbModel.WorldBoss.WorldBossPlayerData} returns this
 */
proto.PbModel.WorldBoss.WorldBossPlayerData.prototype.addAttentionbossidlist = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.WorldBoss.WorldBossPlayerData} returns this
 */
proto.PbModel.WorldBoss.WorldBossPlayerData.prototype.clearAttentionbossidlistList = function() {
  return this.setAttentionbossidlistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.WorldBoss.WorldBossReward.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.WorldBoss.WorldBossReward.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.WorldBoss.WorldBossReward} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.WorldBoss.WorldBossReward.toObject = function(includeInstance, msg) {
  var f, obj = {
    rank: jspb.Message.getFieldWithDefault(msg, 1, 0),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0),
    reward: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.WorldBoss.WorldBossReward}
 */
proto.PbModel.WorldBoss.WorldBossReward.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.WorldBoss.WorldBossReward;
  return proto.PbModel.WorldBoss.WorldBossReward.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.WorldBoss.WorldBossReward} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.WorldBoss.WorldBossReward}
 */
proto.PbModel.WorldBoss.WorldBossReward.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRank(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setReward(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.WorldBoss.WorldBossReward.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.WorldBoss.WorldBossReward.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.WorldBoss.WorldBossReward} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.WorldBoss.WorldBossReward.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRank();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getReward();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int32 Rank = 1;
 * @return {number}
 */
proto.PbModel.WorldBoss.WorldBossReward.prototype.getRank = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.WorldBoss.WorldBossReward} returns this
 */
proto.PbModel.WorldBoss.WorldBossReward.prototype.setRank = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 Status = 2;
 * @return {number}
 */
proto.PbModel.WorldBoss.WorldBossReward.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.WorldBoss.WorldBossReward} returns this
 */
proto.PbModel.WorldBoss.WorldBossReward.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string Reward = 3;
 * @return {string}
 */
proto.PbModel.WorldBoss.WorldBossReward.prototype.getReward = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.WorldBoss.WorldBossReward} returns this
 */
proto.PbModel.WorldBoss.WorldBossReward.prototype.setReward = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.WorldBoss.WorldBossGetHonorRankReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.WorldBoss.WorldBossGetHonorRankReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.WorldBoss.WorldBossGetHonorRankReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.WorldBoss.WorldBossGetHonorRankReq.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.WorldBoss.WorldBossGetHonorRankReq}
 */
proto.PbModel.WorldBoss.WorldBossGetHonorRankReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.WorldBoss.WorldBossGetHonorRankReq;
  return proto.PbModel.WorldBoss.WorldBossGetHonorRankReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.WorldBoss.WorldBossGetHonorRankReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.WorldBoss.WorldBossGetHonorRankReq}
 */
proto.PbModel.WorldBoss.WorldBossGetHonorRankReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.WorldBoss.WorldBossGetHonorRankReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.WorldBoss.WorldBossGetHonorRankReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.WorldBoss.WorldBossGetHonorRankReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.WorldBoss.WorldBossGetHonorRankReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.WorldBoss.WorldBossGetHonorRankRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.WorldBoss.WorldBossGetHonorRankRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.WorldBoss.WorldBossGetHonorRankRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.WorldBoss.WorldBossGetHonorRankRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    honorrankMap: (f = msg.getHonorrankMap()) ? f.toObject(includeInstance, proto.PbModel.WorldBoss.WorldBossPlayerList.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.WorldBoss.WorldBossGetHonorRankRes}
 */
proto.PbModel.WorldBoss.WorldBossGetHonorRankRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.WorldBoss.WorldBossGetHonorRankRes;
  return proto.PbModel.WorldBoss.WorldBossGetHonorRankRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.WorldBoss.WorldBossGetHonorRankRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.WorldBoss.WorldBossGetHonorRankRes}
 */
proto.PbModel.WorldBoss.WorldBossGetHonorRankRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getHonorrankMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readMessage, proto.PbModel.WorldBoss.WorldBossPlayerList.deserializeBinaryFromReader, 0, new proto.PbModel.WorldBoss.WorldBossPlayerList());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.WorldBoss.WorldBossGetHonorRankRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.WorldBoss.WorldBossGetHonorRankRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.WorldBoss.WorldBossGetHonorRankRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.WorldBoss.WorldBossGetHonorRankRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHonorrankMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeMessage, proto.PbModel.WorldBoss.WorldBossPlayerList.serializeBinaryToWriter);
  }
};


/**
 * map<int32, WorldBossPlayerList> HonorRank = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,!proto.PbModel.WorldBoss.WorldBossPlayerList>}
 */
proto.PbModel.WorldBoss.WorldBossGetHonorRankRes.prototype.getHonorrankMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,!proto.PbModel.WorldBoss.WorldBossPlayerList>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.PbModel.WorldBoss.WorldBossPlayerList));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.PbModel.WorldBoss.WorldBossGetHonorRankRes} returns this
 */
proto.PbModel.WorldBoss.WorldBossGetHonorRankRes.prototype.clearHonorrankMap = function() {
  this.getHonorrankMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.WorldBoss.WorldBossPlayerList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.WorldBoss.WorldBossPlayerList.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.WorldBoss.WorldBossPlayerList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.WorldBoss.WorldBossPlayerList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.WorldBoss.WorldBossPlayerList.toObject = function(includeInstance, msg) {
  var f, obj = {
    playersList: jspb.Message.toObjectList(msg.getPlayersList(),
    proto.PbModel.WorldBoss.WorldBossPlayerRank.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.WorldBoss.WorldBossPlayerList}
 */
proto.PbModel.WorldBoss.WorldBossPlayerList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.WorldBoss.WorldBossPlayerList;
  return proto.PbModel.WorldBoss.WorldBossPlayerList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.WorldBoss.WorldBossPlayerList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.WorldBoss.WorldBossPlayerList}
 */
proto.PbModel.WorldBoss.WorldBossPlayerList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PbModel.WorldBoss.WorldBossPlayerRank;
      reader.readMessage(value,proto.PbModel.WorldBoss.WorldBossPlayerRank.deserializeBinaryFromReader);
      msg.addPlayers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.WorldBoss.WorldBossPlayerList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.WorldBoss.WorldBossPlayerList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.WorldBoss.WorldBossPlayerList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.WorldBoss.WorldBossPlayerList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlayersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.PbModel.WorldBoss.WorldBossPlayerRank.serializeBinaryToWriter
    );
  }
};


/**
 * repeated WorldBossPlayerRank Players = 1;
 * @return {!Array<!proto.PbModel.WorldBoss.WorldBossPlayerRank>}
 */
proto.PbModel.WorldBoss.WorldBossPlayerList.prototype.getPlayersList = function() {
  return /** @type{!Array<!proto.PbModel.WorldBoss.WorldBossPlayerRank>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.WorldBoss.WorldBossPlayerRank, 1));
};


/**
 * @param {!Array<!proto.PbModel.WorldBoss.WorldBossPlayerRank>} value
 * @return {!proto.PbModel.WorldBoss.WorldBossPlayerList} returns this
*/
proto.PbModel.WorldBoss.WorldBossPlayerList.prototype.setPlayersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.PbModel.WorldBoss.WorldBossPlayerRank=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.WorldBoss.WorldBossPlayerRank}
 */
proto.PbModel.WorldBoss.WorldBossPlayerList.prototype.addPlayers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.PbModel.WorldBoss.WorldBossPlayerRank, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.WorldBoss.WorldBossPlayerList} returns this
 */
proto.PbModel.WorldBoss.WorldBossPlayerList.prototype.clearPlayersList = function() {
  return this.setPlayersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.WorldBoss.WorldBossGetRankReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.WorldBoss.WorldBossGetRankReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.WorldBoss.WorldBossGetRankReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.WorldBoss.WorldBossGetRankReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    bossid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.WorldBoss.WorldBossGetRankReq}
 */
proto.PbModel.WorldBoss.WorldBossGetRankReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.WorldBoss.WorldBossGetRankReq;
  return proto.PbModel.WorldBoss.WorldBossGetRankReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.WorldBoss.WorldBossGetRankReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.WorldBoss.WorldBossGetRankReq}
 */
proto.PbModel.WorldBoss.WorldBossGetRankReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBossid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.WorldBoss.WorldBossGetRankReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.WorldBoss.WorldBossGetRankReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.WorldBoss.WorldBossGetRankReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.WorldBoss.WorldBossGetRankReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBossid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 BossId = 1;
 * @return {number}
 */
proto.PbModel.WorldBoss.WorldBossGetRankReq.prototype.getBossid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.WorldBoss.WorldBossGetRankReq} returns this
 */
proto.PbModel.WorldBoss.WorldBossGetRankReq.prototype.setBossid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.WorldBoss.WorldBossGetRankRes.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.WorldBoss.WorldBossGetRankRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.WorldBoss.WorldBossGetRankRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.WorldBoss.WorldBossGetRankRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.WorldBoss.WorldBossGetRankRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    playerrankList: jspb.Message.toObjectList(msg.getPlayerrankList(),
    proto.PbModel.WorldBoss.WorldBossPlayerRank.toObject, includeInstance),
    bossinfo: (f = msg.getBossinfo()) && proto.PbModel.WorldBoss.WorldBossModel.toObject(includeInstance, f),
    playerdata: (f = msg.getPlayerdata()) && proto.PbModel.WorldBoss.WorldBossPlayerData.toObject(includeInstance, f),
    myrank: jspb.Message.getFieldWithDefault(msg, 4, 0),
    selfdmg: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.WorldBoss.WorldBossGetRankRes}
 */
proto.PbModel.WorldBoss.WorldBossGetRankRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.WorldBoss.WorldBossGetRankRes;
  return proto.PbModel.WorldBoss.WorldBossGetRankRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.WorldBoss.WorldBossGetRankRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.WorldBoss.WorldBossGetRankRes}
 */
proto.PbModel.WorldBoss.WorldBossGetRankRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PbModel.WorldBoss.WorldBossPlayerRank;
      reader.readMessage(value,proto.PbModel.WorldBoss.WorldBossPlayerRank.deserializeBinaryFromReader);
      msg.addPlayerrank(value);
      break;
    case 2:
      var value = new proto.PbModel.WorldBoss.WorldBossModel;
      reader.readMessage(value,proto.PbModel.WorldBoss.WorldBossModel.deserializeBinaryFromReader);
      msg.setBossinfo(value);
      break;
    case 3:
      var value = new proto.PbModel.WorldBoss.WorldBossPlayerData;
      reader.readMessage(value,proto.PbModel.WorldBoss.WorldBossPlayerData.deserializeBinaryFromReader);
      msg.setPlayerdata(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMyrank(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSelfdmg(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.WorldBoss.WorldBossGetRankRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.WorldBoss.WorldBossGetRankRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.WorldBoss.WorldBossGetRankRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.WorldBoss.WorldBossGetRankRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlayerrankList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.PbModel.WorldBoss.WorldBossPlayerRank.serializeBinaryToWriter
    );
  }
  f = message.getBossinfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.PbModel.WorldBoss.WorldBossModel.serializeBinaryToWriter
    );
  }
  f = message.getPlayerdata();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.PbModel.WorldBoss.WorldBossPlayerData.serializeBinaryToWriter
    );
  }
  f = message.getMyrank();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getSelfdmg();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
};


/**
 * repeated WorldBossPlayerRank PlayerRank = 1;
 * @return {!Array<!proto.PbModel.WorldBoss.WorldBossPlayerRank>}
 */
proto.PbModel.WorldBoss.WorldBossGetRankRes.prototype.getPlayerrankList = function() {
  return /** @type{!Array<!proto.PbModel.WorldBoss.WorldBossPlayerRank>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.WorldBoss.WorldBossPlayerRank, 1));
};


/**
 * @param {!Array<!proto.PbModel.WorldBoss.WorldBossPlayerRank>} value
 * @return {!proto.PbModel.WorldBoss.WorldBossGetRankRes} returns this
*/
proto.PbModel.WorldBoss.WorldBossGetRankRes.prototype.setPlayerrankList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.PbModel.WorldBoss.WorldBossPlayerRank=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.WorldBoss.WorldBossPlayerRank}
 */
proto.PbModel.WorldBoss.WorldBossGetRankRes.prototype.addPlayerrank = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.PbModel.WorldBoss.WorldBossPlayerRank, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.WorldBoss.WorldBossGetRankRes} returns this
 */
proto.PbModel.WorldBoss.WorldBossGetRankRes.prototype.clearPlayerrankList = function() {
  return this.setPlayerrankList([]);
};


/**
 * optional WorldBossModel BossInfo = 2;
 * @return {?proto.PbModel.WorldBoss.WorldBossModel}
 */
proto.PbModel.WorldBoss.WorldBossGetRankRes.prototype.getBossinfo = function() {
  return /** @type{?proto.PbModel.WorldBoss.WorldBossModel} */ (
    jspb.Message.getWrapperField(this, proto.PbModel.WorldBoss.WorldBossModel, 2));
};


/**
 * @param {?proto.PbModel.WorldBoss.WorldBossModel|undefined} value
 * @return {!proto.PbModel.WorldBoss.WorldBossGetRankRes} returns this
*/
proto.PbModel.WorldBoss.WorldBossGetRankRes.prototype.setBossinfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.WorldBoss.WorldBossGetRankRes} returns this
 */
proto.PbModel.WorldBoss.WorldBossGetRankRes.prototype.clearBossinfo = function() {
  return this.setBossinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.WorldBoss.WorldBossGetRankRes.prototype.hasBossinfo = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional WorldBossPlayerData PlayerData = 3;
 * @return {?proto.PbModel.WorldBoss.WorldBossPlayerData}
 */
proto.PbModel.WorldBoss.WorldBossGetRankRes.prototype.getPlayerdata = function() {
  return /** @type{?proto.PbModel.WorldBoss.WorldBossPlayerData} */ (
    jspb.Message.getWrapperField(this, proto.PbModel.WorldBoss.WorldBossPlayerData, 3));
};


/**
 * @param {?proto.PbModel.WorldBoss.WorldBossPlayerData|undefined} value
 * @return {!proto.PbModel.WorldBoss.WorldBossGetRankRes} returns this
*/
proto.PbModel.WorldBoss.WorldBossGetRankRes.prototype.setPlayerdata = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.WorldBoss.WorldBossGetRankRes} returns this
 */
proto.PbModel.WorldBoss.WorldBossGetRankRes.prototype.clearPlayerdata = function() {
  return this.setPlayerdata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.WorldBoss.WorldBossGetRankRes.prototype.hasPlayerdata = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 MyRank = 4;
 * @return {number}
 */
proto.PbModel.WorldBoss.WorldBossGetRankRes.prototype.getMyrank = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.WorldBoss.WorldBossGetRankRes} returns this
 */
proto.PbModel.WorldBoss.WorldBossGetRankRes.prototype.setMyrank = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 SelfDmg = 5;
 * @return {number}
 */
proto.PbModel.WorldBoss.WorldBossGetRankRes.prototype.getSelfdmg = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.WorldBoss.WorldBossGetRankRes} returns this
 */
proto.PbModel.WorldBoss.WorldBossGetRankRes.prototype.setSelfdmg = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.WorldBoss.WorldBossGiveUpFightReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.WorldBoss.WorldBossGiveUpFightReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.WorldBoss.WorldBossGiveUpFightReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.WorldBoss.WorldBossGiveUpFightReq.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.WorldBoss.WorldBossGiveUpFightReq}
 */
proto.PbModel.WorldBoss.WorldBossGiveUpFightReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.WorldBoss.WorldBossGiveUpFightReq;
  return proto.PbModel.WorldBoss.WorldBossGiveUpFightReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.WorldBoss.WorldBossGiveUpFightReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.WorldBoss.WorldBossGiveUpFightReq}
 */
proto.PbModel.WorldBoss.WorldBossGiveUpFightReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.WorldBoss.WorldBossGiveUpFightReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.WorldBoss.WorldBossGiveUpFightReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.WorldBoss.WorldBossGiveUpFightReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.WorldBoss.WorldBossGiveUpFightReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.WorldBoss.WorldBossGiveUpFightRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.WorldBoss.WorldBossGiveUpFightRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.WorldBoss.WorldBossGiveUpFightRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.WorldBoss.WorldBossGiveUpFightRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    playerdata: (f = msg.getPlayerdata()) && proto.PbModel.WorldBoss.WorldBossPlayerData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.WorldBoss.WorldBossGiveUpFightRes}
 */
proto.PbModel.WorldBoss.WorldBossGiveUpFightRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.WorldBoss.WorldBossGiveUpFightRes;
  return proto.PbModel.WorldBoss.WorldBossGiveUpFightRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.WorldBoss.WorldBossGiveUpFightRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.WorldBoss.WorldBossGiveUpFightRes}
 */
proto.PbModel.WorldBoss.WorldBossGiveUpFightRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PbModel.WorldBoss.WorldBossPlayerData;
      reader.readMessage(value,proto.PbModel.WorldBoss.WorldBossPlayerData.deserializeBinaryFromReader);
      msg.setPlayerdata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.WorldBoss.WorldBossGiveUpFightRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.WorldBoss.WorldBossGiveUpFightRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.WorldBoss.WorldBossGiveUpFightRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.WorldBoss.WorldBossGiveUpFightRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlayerdata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.PbModel.WorldBoss.WorldBossPlayerData.serializeBinaryToWriter
    );
  }
};


/**
 * optional WorldBossPlayerData PlayerData = 1;
 * @return {?proto.PbModel.WorldBoss.WorldBossPlayerData}
 */
proto.PbModel.WorldBoss.WorldBossGiveUpFightRes.prototype.getPlayerdata = function() {
  return /** @type{?proto.PbModel.WorldBoss.WorldBossPlayerData} */ (
    jspb.Message.getWrapperField(this, proto.PbModel.WorldBoss.WorldBossPlayerData, 1));
};


/**
 * @param {?proto.PbModel.WorldBoss.WorldBossPlayerData|undefined} value
 * @return {!proto.PbModel.WorldBoss.WorldBossGiveUpFightRes} returns this
*/
proto.PbModel.WorldBoss.WorldBossGiveUpFightRes.prototype.setPlayerdata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.WorldBoss.WorldBossGiveUpFightRes} returns this
 */
proto.PbModel.WorldBoss.WorldBossGiveUpFightRes.prototype.clearPlayerdata = function() {
  return this.setPlayerdata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.WorldBoss.WorldBossGiveUpFightRes.prototype.hasPlayerdata = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.WorldBoss.WorldBossUnpackReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.WorldBoss.WorldBossUnpackReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.WorldBoss.WorldBossUnpackReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.WorldBoss.WorldBossUnpackReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    packid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    num: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.WorldBoss.WorldBossUnpackReq}
 */
proto.PbModel.WorldBoss.WorldBossUnpackReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.WorldBoss.WorldBossUnpackReq;
  return proto.PbModel.WorldBoss.WorldBossUnpackReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.WorldBoss.WorldBossUnpackReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.WorldBoss.WorldBossUnpackReq}
 */
proto.PbModel.WorldBoss.WorldBossUnpackReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPackid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.WorldBoss.WorldBossUnpackReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.WorldBoss.WorldBossUnpackReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.WorldBoss.WorldBossUnpackReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.WorldBoss.WorldBossUnpackReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPackid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getNum();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 packId = 1;
 * @return {number}
 */
proto.PbModel.WorldBoss.WorldBossUnpackReq.prototype.getPackid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.WorldBoss.WorldBossUnpackReq} returns this
 */
proto.PbModel.WorldBoss.WorldBossUnpackReq.prototype.setPackid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 num = 2;
 * @return {number}
 */
proto.PbModel.WorldBoss.WorldBossUnpackReq.prototype.getNum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.WorldBoss.WorldBossUnpackReq} returns this
 */
proto.PbModel.WorldBoss.WorldBossUnpackReq.prototype.setNum = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.WorldBoss.WorldBossUnpackRes.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.WorldBoss.WorldBossUnpackRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.WorldBoss.WorldBossUnpackRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.WorldBoss.WorldBossUnpackRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.WorldBoss.WorldBossUnpackRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    playerdata: (f = msg.getPlayerdata()) && proto.PbModel.WorldBoss.WorldBossPlayerData.toObject(includeInstance, f),
    rewardlistList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.WorldBoss.WorldBossUnpackRes}
 */
proto.PbModel.WorldBoss.WorldBossUnpackRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.WorldBoss.WorldBossUnpackRes;
  return proto.PbModel.WorldBoss.WorldBossUnpackRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.WorldBoss.WorldBossUnpackRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.WorldBoss.WorldBossUnpackRes}
 */
proto.PbModel.WorldBoss.WorldBossUnpackRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PbModel.WorldBoss.WorldBossPlayerData;
      reader.readMessage(value,proto.PbModel.WorldBoss.WorldBossPlayerData.deserializeBinaryFromReader);
      msg.setPlayerdata(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addRewardlist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.WorldBoss.WorldBossUnpackRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.WorldBoss.WorldBossUnpackRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.WorldBoss.WorldBossUnpackRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.WorldBoss.WorldBossUnpackRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlayerdata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.PbModel.WorldBoss.WorldBossPlayerData.serializeBinaryToWriter
    );
  }
  f = message.getRewardlistList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional WorldBossPlayerData PlayerData = 1;
 * @return {?proto.PbModel.WorldBoss.WorldBossPlayerData}
 */
proto.PbModel.WorldBoss.WorldBossUnpackRes.prototype.getPlayerdata = function() {
  return /** @type{?proto.PbModel.WorldBoss.WorldBossPlayerData} */ (
    jspb.Message.getWrapperField(this, proto.PbModel.WorldBoss.WorldBossPlayerData, 1));
};


/**
 * @param {?proto.PbModel.WorldBoss.WorldBossPlayerData|undefined} value
 * @return {!proto.PbModel.WorldBoss.WorldBossUnpackRes} returns this
*/
proto.PbModel.WorldBoss.WorldBossUnpackRes.prototype.setPlayerdata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.WorldBoss.WorldBossUnpackRes} returns this
 */
proto.PbModel.WorldBoss.WorldBossUnpackRes.prototype.clearPlayerdata = function() {
  return this.setPlayerdata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.WorldBoss.WorldBossUnpackRes.prototype.hasPlayerdata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated string RewardList = 2;
 * @return {!Array<string>}
 */
proto.PbModel.WorldBoss.WorldBossUnpackRes.prototype.getRewardlistList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.PbModel.WorldBoss.WorldBossUnpackRes} returns this
 */
proto.PbModel.WorldBoss.WorldBossUnpackRes.prototype.setRewardlistList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.PbModel.WorldBoss.WorldBossUnpackRes} returns this
 */
proto.PbModel.WorldBoss.WorldBossUnpackRes.prototype.addRewardlist = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.WorldBoss.WorldBossUnpackRes} returns this
 */
proto.PbModel.WorldBoss.WorldBossUnpackRes.prototype.clearRewardlistList = function() {
  return this.setRewardlistList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.WorldBoss.WorldBossPushAttentionBossRes.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.WorldBoss.WorldBossPushAttentionBossRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.WorldBoss.WorldBossPushAttentionBossRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.WorldBoss.WorldBossPushAttentionBossRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.WorldBoss.WorldBossPushAttentionBossRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    bossidList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.WorldBoss.WorldBossPushAttentionBossRes}
 */
proto.PbModel.WorldBoss.WorldBossPushAttentionBossRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.WorldBoss.WorldBossPushAttentionBossRes;
  return proto.PbModel.WorldBoss.WorldBossPushAttentionBossRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.WorldBoss.WorldBossPushAttentionBossRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.WorldBoss.WorldBossPushAttentionBossRes}
 */
proto.PbModel.WorldBoss.WorldBossPushAttentionBossRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setBossidList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.WorldBoss.WorldBossPushAttentionBossRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.WorldBoss.WorldBossPushAttentionBossRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.WorldBoss.WorldBossPushAttentionBossRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.WorldBoss.WorldBossPushAttentionBossRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBossidList();
  if (f.length > 0) {
    writer.writePackedInt32(
      1,
      f
    );
  }
};


/**
 * repeated int32 BossId = 1;
 * @return {!Array<number>}
 */
proto.PbModel.WorldBoss.WorldBossPushAttentionBossRes.prototype.getBossidList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.PbModel.WorldBoss.WorldBossPushAttentionBossRes} returns this
 */
proto.PbModel.WorldBoss.WorldBossPushAttentionBossRes.prototype.setBossidList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.PbModel.WorldBoss.WorldBossPushAttentionBossRes} returns this
 */
proto.PbModel.WorldBoss.WorldBossPushAttentionBossRes.prototype.addBossid = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.WorldBoss.WorldBossPushAttentionBossRes} returns this
 */
proto.PbModel.WorldBoss.WorldBossPushAttentionBossRes.prototype.clearBossidList = function() {
  return this.setBossidList([]);
};


goog.object.extend(exports, proto.PbModel.WorldBoss);
