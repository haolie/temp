// source: GVGCenter/GVGCenterMatchInfo.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.PbModel.GvGCenter.GetMatchInfoReq', null, global);
goog.exportSymbol('proto.PbModel.GvGCenter.GetMatchInfoRes', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.GvGCenter.GetMatchInfoReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.GvGCenter.GetMatchInfoReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.GvGCenter.GetMatchInfoReq.displayName = 'proto.PbModel.GvGCenter.GetMatchInfoReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.GvGCenter.GetMatchInfoRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.GvGCenter.GetMatchInfoRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.GvGCenter.GetMatchInfoRes.displayName = 'proto.PbModel.GvGCenter.GetMatchInfoRes';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.GvGCenter.GetMatchInfoReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.GvGCenter.GetMatchInfoReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.GvGCenter.GetMatchInfoReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.GvGCenter.GetMatchInfoReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    servergroupid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    zoneid: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.GvGCenter.GetMatchInfoReq}
 */
proto.PbModel.GvGCenter.GetMatchInfoReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.GvGCenter.GetMatchInfoReq;
  return proto.PbModel.GvGCenter.GetMatchInfoReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.GvGCenter.GetMatchInfoReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.GvGCenter.GetMatchInfoReq}
 */
proto.PbModel.GvGCenter.GetMatchInfoReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setServergroupid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setZoneid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.GvGCenter.GetMatchInfoReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.GvGCenter.GetMatchInfoReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.GvGCenter.GetMatchInfoReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.GvGCenter.GetMatchInfoReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getServergroupid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getZoneid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 ServerGroupId = 1;
 * @return {number}
 */
proto.PbModel.GvGCenter.GetMatchInfoReq.prototype.getServergroupid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.GvGCenter.GetMatchInfoReq} returns this
 */
proto.PbModel.GvGCenter.GetMatchInfoReq.prototype.setServergroupid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string ZoneId = 2;
 * @return {string}
 */
proto.PbModel.GvGCenter.GetMatchInfoReq.prototype.getZoneid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.GvGCenter.GetMatchInfoReq} returns this
 */
proto.PbModel.GvGCenter.GetMatchInfoReq.prototype.setZoneid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.GvGCenter.GetMatchInfoRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.GvGCenter.GetMatchInfoRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.GvGCenter.GetMatchInfoRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.GvGCenter.GetMatchInfoRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    seasonid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    pvpfightopentime: jspb.Message.getFieldWithDefault(msg, 2, 0),
    fightopentime: jspb.Message.getFieldWithDefault(msg, 3, 0),
    fightclosetime: jspb.Message.getFieldWithDefault(msg, 4, 0),
    dooropentime: jspb.Message.getFieldWithDefault(msg, 5, 0),
    himbinnuiopentime: jspb.Message.getFieldWithDefault(msg, 6, 0),
    finalfightopentime: jspb.Message.getFieldWithDefault(msg, 7, 0),
    lastgeneratematchtime: jspb.Message.getFieldWithDefault(msg, 8, 0),
    seasonendtime: jspb.Message.getFieldWithDefault(msg, 9, 0),
    truceendtime: jspb.Message.getFieldWithDefault(msg, 10, 0),
    thismatchfightclosetime: jspb.Message.getFieldWithDefault(msg, 11, 0),
    thisweektargetgeneratematchtime: jspb.Message.getFieldWithDefault(msg, 12, 0),
    dayofmatch: jspb.Message.getFieldWithDefault(msg, 13, 0),
    seansonstarttime: jspb.Message.getFieldWithDefault(msg, 14, 0),
    thisweekmatchstarttime: jspb.Message.getFieldWithDefault(msg, 15, 0),
    thisweekmatchendtime: jspb.Message.getFieldWithDefault(msg, 16, 0),
    thismatchfightopentime: jspb.Message.getFieldWithDefault(msg, 17, 0),
    thismatchbattlehandleopentime: jspb.Message.getFieldWithDefault(msg, 18, 0),
    strongholdopentime: jspb.Message.getFieldWithDefault(msg, 19, 0),
    matchround: jspb.Message.getFieldWithDefault(msg, 20, 0),
    battleopentime: jspb.Message.getFieldWithDefault(msg, 21, 0),
    battleclosetime: jspb.Message.getFieldWithDefault(msg, 22, 0),
    showseasonid: jspb.Message.getFieldWithDefault(msg, 23, 0),
    showmatchround: jspb.Message.getFieldWithDefault(msg, 24, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.GvGCenter.GetMatchInfoRes}
 */
proto.PbModel.GvGCenter.GetMatchInfoRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.GvGCenter.GetMatchInfoRes;
  return proto.PbModel.GvGCenter.GetMatchInfoRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.GvGCenter.GetMatchInfoRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.GvGCenter.GetMatchInfoRes}
 */
proto.PbModel.GvGCenter.GetMatchInfoRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSeasonid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPvpfightopentime(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFightopentime(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFightclosetime(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDooropentime(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setHimbinnuiopentime(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFinalfightopentime(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLastgeneratematchtime(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSeasonendtime(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTruceendtime(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setThismatchfightclosetime(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setThisweektargetgeneratematchtime(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDayofmatch(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSeansonstarttime(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setThisweekmatchstarttime(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setThisweekmatchendtime(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setThismatchfightopentime(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setThismatchbattlehandleopentime(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStrongholdopentime(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMatchround(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBattleopentime(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBattleclosetime(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setShowseasonid(value);
      break;
    case 24:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setShowmatchround(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.GvGCenter.GetMatchInfoRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.GvGCenter.GetMatchInfoRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.GvGCenter.GetMatchInfoRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.GvGCenter.GetMatchInfoRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSeasonid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPvpfightopentime();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getFightopentime();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getFightclosetime();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getDooropentime();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getHimbinnuiopentime();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getFinalfightopentime();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getLastgeneratematchtime();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getSeasonendtime();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getTruceendtime();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getThismatchfightclosetime();
  if (f !== 0) {
    writer.writeInt64(
      11,
      f
    );
  }
  f = message.getThisweektargetgeneratematchtime();
  if (f !== 0) {
    writer.writeInt64(
      12,
      f
    );
  }
  f = message.getDayofmatch();
  if (f !== 0) {
    writer.writeInt32(
      13,
      f
    );
  }
  f = message.getSeansonstarttime();
  if (f !== 0) {
    writer.writeInt64(
      14,
      f
    );
  }
  f = message.getThisweekmatchstarttime();
  if (f !== 0) {
    writer.writeInt64(
      15,
      f
    );
  }
  f = message.getThisweekmatchendtime();
  if (f !== 0) {
    writer.writeInt64(
      16,
      f
    );
  }
  f = message.getThismatchfightopentime();
  if (f !== 0) {
    writer.writeInt64(
      17,
      f
    );
  }
  f = message.getThismatchbattlehandleopentime();
  if (f !== 0) {
    writer.writeInt64(
      18,
      f
    );
  }
  f = message.getStrongholdopentime();
  if (f !== 0) {
    writer.writeInt64(
      19,
      f
    );
  }
  f = message.getMatchround();
  if (f !== 0) {
    writer.writeInt32(
      20,
      f
    );
  }
  f = message.getBattleopentime();
  if (f !== 0) {
    writer.writeInt64(
      21,
      f
    );
  }
  f = message.getBattleclosetime();
  if (f !== 0) {
    writer.writeInt64(
      22,
      f
    );
  }
  f = message.getShowseasonid();
  if (f !== 0) {
    writer.writeInt32(
      23,
      f
    );
  }
  f = message.getShowmatchround();
  if (f !== 0) {
    writer.writeInt32(
      24,
      f
    );
  }
};


/**
 * optional int32 SeasonId = 1;
 * @return {number}
 */
proto.PbModel.GvGCenter.GetMatchInfoRes.prototype.getSeasonid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.GvGCenter.GetMatchInfoRes} returns this
 */
proto.PbModel.GvGCenter.GetMatchInfoRes.prototype.setSeasonid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 PvpFightOpenTime = 2;
 * @return {number}
 */
proto.PbModel.GvGCenter.GetMatchInfoRes.prototype.getPvpfightopentime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.GvGCenter.GetMatchInfoRes} returns this
 */
proto.PbModel.GvGCenter.GetMatchInfoRes.prototype.setPvpfightopentime = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 FightOpenTime = 3;
 * @return {number}
 */
proto.PbModel.GvGCenter.GetMatchInfoRes.prototype.getFightopentime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.GvGCenter.GetMatchInfoRes} returns this
 */
proto.PbModel.GvGCenter.GetMatchInfoRes.prototype.setFightopentime = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 FightCloseTime = 4;
 * @return {number}
 */
proto.PbModel.GvGCenter.GetMatchInfoRes.prototype.getFightclosetime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.GvGCenter.GetMatchInfoRes} returns this
 */
proto.PbModel.GvGCenter.GetMatchInfoRes.prototype.setFightclosetime = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 DoorOpenTime = 5;
 * @return {number}
 */
proto.PbModel.GvGCenter.GetMatchInfoRes.prototype.getDooropentime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.GvGCenter.GetMatchInfoRes} returns this
 */
proto.PbModel.GvGCenter.GetMatchInfoRes.prototype.setDooropentime = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 HimBinnuiOpenTime = 6;
 * @return {number}
 */
proto.PbModel.GvGCenter.GetMatchInfoRes.prototype.getHimbinnuiopentime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.GvGCenter.GetMatchInfoRes} returns this
 */
proto.PbModel.GvGCenter.GetMatchInfoRes.prototype.setHimbinnuiopentime = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int64 FinalFightOpenTime = 7;
 * @return {number}
 */
proto.PbModel.GvGCenter.GetMatchInfoRes.prototype.getFinalfightopentime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.GvGCenter.GetMatchInfoRes} returns this
 */
proto.PbModel.GvGCenter.GetMatchInfoRes.prototype.setFinalfightopentime = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int64 LastGenerateMatchTime = 8;
 * @return {number}
 */
proto.PbModel.GvGCenter.GetMatchInfoRes.prototype.getLastgeneratematchtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.GvGCenter.GetMatchInfoRes} returns this
 */
proto.PbModel.GvGCenter.GetMatchInfoRes.prototype.setLastgeneratematchtime = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int64 SeasonEndTime = 9;
 * @return {number}
 */
proto.PbModel.GvGCenter.GetMatchInfoRes.prototype.getSeasonendtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.GvGCenter.GetMatchInfoRes} returns this
 */
proto.PbModel.GvGCenter.GetMatchInfoRes.prototype.setSeasonendtime = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int64 TruceEndTime = 10;
 * @return {number}
 */
proto.PbModel.GvGCenter.GetMatchInfoRes.prototype.getTruceendtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.GvGCenter.GetMatchInfoRes} returns this
 */
proto.PbModel.GvGCenter.GetMatchInfoRes.prototype.setTruceendtime = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int64 ThisMatchFightCloseTime = 11;
 * @return {number}
 */
proto.PbModel.GvGCenter.GetMatchInfoRes.prototype.getThismatchfightclosetime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.GvGCenter.GetMatchInfoRes} returns this
 */
proto.PbModel.GvGCenter.GetMatchInfoRes.prototype.setThismatchfightclosetime = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int64 ThisWeekTargetGenerateMatchTime = 12;
 * @return {number}
 */
proto.PbModel.GvGCenter.GetMatchInfoRes.prototype.getThisweektargetgeneratematchtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.GvGCenter.GetMatchInfoRes} returns this
 */
proto.PbModel.GvGCenter.GetMatchInfoRes.prototype.setThisweektargetgeneratematchtime = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional int32 DayOfMatch = 13;
 * @return {number}
 */
proto.PbModel.GvGCenter.GetMatchInfoRes.prototype.getDayofmatch = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.GvGCenter.GetMatchInfoRes} returns this
 */
proto.PbModel.GvGCenter.GetMatchInfoRes.prototype.setDayofmatch = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional int64 SeansonStartTime = 14;
 * @return {number}
 */
proto.PbModel.GvGCenter.GetMatchInfoRes.prototype.getSeansonstarttime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.GvGCenter.GetMatchInfoRes} returns this
 */
proto.PbModel.GvGCenter.GetMatchInfoRes.prototype.setSeansonstarttime = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional int64 ThisWeekMatchStartTime = 15;
 * @return {number}
 */
proto.PbModel.GvGCenter.GetMatchInfoRes.prototype.getThisweekmatchstarttime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.GvGCenter.GetMatchInfoRes} returns this
 */
proto.PbModel.GvGCenter.GetMatchInfoRes.prototype.setThisweekmatchstarttime = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * optional int64 ThisWeekMatchEndTime = 16;
 * @return {number}
 */
proto.PbModel.GvGCenter.GetMatchInfoRes.prototype.getThisweekmatchendtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.GvGCenter.GetMatchInfoRes} returns this
 */
proto.PbModel.GvGCenter.GetMatchInfoRes.prototype.setThisweekmatchendtime = function(value) {
  return jspb.Message.setProto3IntField(this, 16, value);
};


/**
 * optional int64 ThisMatchFightOpenTime = 17;
 * @return {number}
 */
proto.PbModel.GvGCenter.GetMatchInfoRes.prototype.getThismatchfightopentime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.GvGCenter.GetMatchInfoRes} returns this
 */
proto.PbModel.GvGCenter.GetMatchInfoRes.prototype.setThismatchfightopentime = function(value) {
  return jspb.Message.setProto3IntField(this, 17, value);
};


/**
 * optional int64 ThisMatchBattleHandleOpenTime = 18;
 * @return {number}
 */
proto.PbModel.GvGCenter.GetMatchInfoRes.prototype.getThismatchbattlehandleopentime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.GvGCenter.GetMatchInfoRes} returns this
 */
proto.PbModel.GvGCenter.GetMatchInfoRes.prototype.setThismatchbattlehandleopentime = function(value) {
  return jspb.Message.setProto3IntField(this, 18, value);
};


/**
 * optional int64 StrongholdOpenTime = 19;
 * @return {number}
 */
proto.PbModel.GvGCenter.GetMatchInfoRes.prototype.getStrongholdopentime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.GvGCenter.GetMatchInfoRes} returns this
 */
proto.PbModel.GvGCenter.GetMatchInfoRes.prototype.setStrongholdopentime = function(value) {
  return jspb.Message.setProto3IntField(this, 19, value);
};


/**
 * optional int32 MatchRound = 20;
 * @return {number}
 */
proto.PbModel.GvGCenter.GetMatchInfoRes.prototype.getMatchround = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.GvGCenter.GetMatchInfoRes} returns this
 */
proto.PbModel.GvGCenter.GetMatchInfoRes.prototype.setMatchround = function(value) {
  return jspb.Message.setProto3IntField(this, 20, value);
};


/**
 * optional int64 BattleOpenTime = 21;
 * @return {number}
 */
proto.PbModel.GvGCenter.GetMatchInfoRes.prototype.getBattleopentime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.GvGCenter.GetMatchInfoRes} returns this
 */
proto.PbModel.GvGCenter.GetMatchInfoRes.prototype.setBattleopentime = function(value) {
  return jspb.Message.setProto3IntField(this, 21, value);
};


/**
 * optional int64 BattleCloseTime = 22;
 * @return {number}
 */
proto.PbModel.GvGCenter.GetMatchInfoRes.prototype.getBattleclosetime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.GvGCenter.GetMatchInfoRes} returns this
 */
proto.PbModel.GvGCenter.GetMatchInfoRes.prototype.setBattleclosetime = function(value) {
  return jspb.Message.setProto3IntField(this, 22, value);
};


/**
 * optional int32 ShowSeasonId = 23;
 * @return {number}
 */
proto.PbModel.GvGCenter.GetMatchInfoRes.prototype.getShowseasonid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.GvGCenter.GetMatchInfoRes} returns this
 */
proto.PbModel.GvGCenter.GetMatchInfoRes.prototype.setShowseasonid = function(value) {
  return jspb.Message.setProto3IntField(this, 23, value);
};


/**
 * optional int32 ShowMatchRound = 24;
 * @return {number}
 */
proto.PbModel.GvGCenter.GetMatchInfoRes.prototype.getShowmatchround = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 24, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.GvGCenter.GetMatchInfoRes} returns this
 */
proto.PbModel.GvGCenter.GetMatchInfoRes.prototype.setShowmatchround = function(value) {
  return jspb.Message.setProto3IntField(this, 24, value);
};


goog.object.extend(exports, proto.PbModel.GvGCenter);
