// source: PveTeam.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var Resource_pb = require('./Resource_pb.js');
goog.object.extend(proto, Resource_pb);
goog.exportSymbol('proto.PbModel.PveTeam.PveTeamApplyFightReq', null, global);
goog.exportSymbol('proto.PbModel.PveTeam.PveTeamApplyFightRes', null, global);
goog.exportSymbol('proto.PbModel.PveTeam.PveTeamBossInfo', null, global);
goog.exportSymbol('proto.PbModel.PveTeam.PveTeamDrawRewardReq', null, global);
goog.exportSymbol('proto.PbModel.PveTeam.PveTeamDrawRewardRes', null, global);
goog.exportSymbol('proto.PbModel.PveTeam.PveTeamGetInfoReq', null, global);
goog.exportSymbol('proto.PbModel.PveTeam.PveTeamGetInfoRes', null, global);
goog.exportSymbol('proto.PbModel.PveTeam.PveTeamGoFightReq', null, global);
goog.exportSymbol('proto.PbModel.PveTeam.PveTeamGoFightRes', null, global);
goog.exportSymbol('proto.PbModel.PveTeam.PveTeamInfo', null, global);
goog.exportSymbol('proto.PbModel.PveTeam.PveTeamInitData', null, global);
goog.exportSymbol('proto.PbModel.PveTeam.PveTeamOverGameReq', null, global);
goog.exportSymbol('proto.PbModel.PveTeam.PveTeamOverGameRes', null, global);
goog.exportSymbol('proto.PbModel.PveTeam.PveTeamPlayerInfo', null, global);
goog.exportSymbol('proto.PbModel.PveTeam.PveTeamPushFinishedRes', null, global);
goog.exportSymbol('proto.PbModel.PveTeam.PveTeamPushPositionRes', null, global);
goog.exportSymbol('proto.PbModel.PveTeam.PveTeamPushStartRes', null, global);
goog.exportSymbol('proto.PbModel.PveTeam.PveTeamPushStatusRes', null, global);
goog.exportSymbol('proto.PbModel.PveTeam.PveTeamSelectBossReq', null, global);
goog.exportSymbol('proto.PbModel.PveTeam.PveTeamSelectBossRes', null, global);
goog.exportSymbol('proto.PbModel.PveTeam.PveTeamSelectToFightReq', null, global);
goog.exportSymbol('proto.PbModel.PveTeam.PveTeamSelectToFightRes', null, global);
goog.exportSymbol('proto.PbModel.PveTeam.PveTeamSetAutoFightReq', null, global);
goog.exportSymbol('proto.PbModel.PveTeam.PveTeamSetAutoFightRes', null, global);
goog.exportSymbol('proto.PbModel.PveTeam.PveTeamStartFightReq', null, global);
goog.exportSymbol('proto.PbModel.PveTeam.PveTeamStartFightRes', null, global);
goog.exportSymbol('proto.PbModel.PveTeam.PveTeamUpdatePositionReq', null, global);
goog.exportSymbol('proto.PbModel.PveTeam.PveTeamUpdatePositionRes', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.PveTeam.PveTeamPushFinishedRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.PveTeam.PveTeamPushFinishedRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.PveTeam.PveTeamPushFinishedRes.displayName = 'proto.PbModel.PveTeam.PveTeamPushFinishedRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.PveTeam.PveTeamPushPositionRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.PveTeam.PveTeamPushPositionRes.repeatedFields_, null);
};
goog.inherits(proto.PbModel.PveTeam.PveTeamPushPositionRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.PveTeam.PveTeamPushPositionRes.displayName = 'proto.PbModel.PveTeam.PveTeamPushPositionRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.PveTeam.PveTeamPushStartRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.PveTeam.PveTeamPushStartRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.PveTeam.PveTeamPushStartRes.displayName = 'proto.PbModel.PveTeam.PveTeamPushStartRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.PveTeam.PveTeamPushStatusRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.PveTeam.PveTeamPushStatusRes.repeatedFields_, null);
};
goog.inherits(proto.PbModel.PveTeam.PveTeamPushStatusRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.PveTeam.PveTeamPushStatusRes.displayName = 'proto.PbModel.PveTeam.PveTeamPushStatusRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.PveTeam.PveTeamApplyFightReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.PveTeam.PveTeamApplyFightReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.PveTeam.PveTeamApplyFightReq.displayName = 'proto.PbModel.PveTeam.PveTeamApplyFightReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.PveTeam.PveTeamApplyFightRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.PveTeam.PveTeamApplyFightRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.PveTeam.PveTeamApplyFightRes.displayName = 'proto.PbModel.PveTeam.PveTeamApplyFightRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.PveTeam.PveTeamGetInfoReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.PveTeam.PveTeamGetInfoReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.PveTeam.PveTeamGetInfoReq.displayName = 'proto.PbModel.PveTeam.PveTeamGetInfoReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.PveTeam.PveTeamGetInfoRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.PveTeam.PveTeamGetInfoRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.PveTeam.PveTeamGetInfoRes.displayName = 'proto.PbModel.PveTeam.PveTeamGetInfoRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.PveTeam.PveTeamDrawRewardReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.PveTeam.PveTeamDrawRewardReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.PveTeam.PveTeamDrawRewardReq.displayName = 'proto.PbModel.PveTeam.PveTeamDrawRewardReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.PveTeam.PveTeamDrawRewardRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.PveTeam.PveTeamDrawRewardRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.PveTeam.PveTeamDrawRewardRes.displayName = 'proto.PbModel.PveTeam.PveTeamDrawRewardRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.PveTeam.PveTeamGoFightReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.PveTeam.PveTeamGoFightReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.PveTeam.PveTeamGoFightReq.displayName = 'proto.PbModel.PveTeam.PveTeamGoFightReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.PveTeam.PveTeamGoFightRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.PveTeam.PveTeamGoFightRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.PveTeam.PveTeamGoFightRes.displayName = 'proto.PbModel.PveTeam.PveTeamGoFightRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.PveTeam.PveTeamInitData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.PveTeam.PveTeamInitData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.PveTeam.PveTeamInitData.displayName = 'proto.PbModel.PveTeam.PveTeamInitData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.PveTeam.PveTeamInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.PveTeam.PveTeamInfo.repeatedFields_, null);
};
goog.inherits(proto.PbModel.PveTeam.PveTeamInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.PveTeam.PveTeamInfo.displayName = 'proto.PbModel.PveTeam.PveTeamInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.PveTeam.PveTeamPlayerInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.PveTeam.PveTeamPlayerInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.PveTeam.PveTeamPlayerInfo.displayName = 'proto.PbModel.PveTeam.PveTeamPlayerInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.PveTeam.PveTeamBossInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.PveTeam.PveTeamBossInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.PveTeam.PveTeamBossInfo.displayName = 'proto.PbModel.PveTeam.PveTeamBossInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.PveTeam.PveTeamOverGameReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.PveTeam.PveTeamOverGameReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.PveTeam.PveTeamOverGameReq.displayName = 'proto.PbModel.PveTeam.PveTeamOverGameReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.PveTeam.PveTeamOverGameRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.PveTeam.PveTeamOverGameRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.PveTeam.PveTeamOverGameRes.displayName = 'proto.PbModel.PveTeam.PveTeamOverGameRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.PveTeam.PveTeamSelectBossReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.PveTeam.PveTeamSelectBossReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.PveTeam.PveTeamSelectBossReq.displayName = 'proto.PbModel.PveTeam.PveTeamSelectBossReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.PveTeam.PveTeamSelectBossRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.PveTeam.PveTeamSelectBossRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.PveTeam.PveTeamSelectBossRes.displayName = 'proto.PbModel.PveTeam.PveTeamSelectBossRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.PveTeam.PveTeamSelectToFightReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.PveTeam.PveTeamSelectToFightReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.PveTeam.PveTeamSelectToFightReq.displayName = 'proto.PbModel.PveTeam.PveTeamSelectToFightReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.PveTeam.PveTeamSelectToFightRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.PveTeam.PveTeamSelectToFightRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.PveTeam.PveTeamSelectToFightRes.displayName = 'proto.PbModel.PveTeam.PveTeamSelectToFightRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.PveTeam.PveTeamStartFightReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.PveTeam.PveTeamStartFightReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.PveTeam.PveTeamStartFightReq.displayName = 'proto.PbModel.PveTeam.PveTeamStartFightReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.PveTeam.PveTeamStartFightRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.PveTeam.PveTeamStartFightRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.PveTeam.PveTeamStartFightRes.displayName = 'proto.PbModel.PveTeam.PveTeamStartFightRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.PveTeam.PveTeamSetAutoFightReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.PveTeam.PveTeamSetAutoFightReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.PveTeam.PveTeamSetAutoFightReq.displayName = 'proto.PbModel.PveTeam.PveTeamSetAutoFightReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.PveTeam.PveTeamSetAutoFightRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.PveTeam.PveTeamSetAutoFightRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.PveTeam.PveTeamSetAutoFightRes.displayName = 'proto.PbModel.PveTeam.PveTeamSetAutoFightRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.PveTeam.PveTeamUpdatePositionReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.PveTeam.PveTeamUpdatePositionReq.repeatedFields_, null);
};
goog.inherits(proto.PbModel.PveTeam.PveTeamUpdatePositionReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.PveTeam.PveTeamUpdatePositionReq.displayName = 'proto.PbModel.PveTeam.PveTeamUpdatePositionReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.PveTeam.PveTeamUpdatePositionRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.PveTeam.PveTeamUpdatePositionRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.PveTeam.PveTeamUpdatePositionRes.displayName = 'proto.PbModel.PveTeam.PveTeamUpdatePositionRes';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.PveTeam.PveTeamPushFinishedRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.PveTeam.PveTeamPushFinishedRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.PveTeam.PveTeamPushFinishedRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PveTeam.PveTeamPushFinishedRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    issuccess: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    maxchapterid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    todayrewardtimes: jspb.Message.getFieldWithDefault(msg, 4, 0),
    basegetgameresourcelist: (f = msg.getBasegetgameresourcelist()) && Resource_pb.ResourceToClientModel.toObject(includeInstance, f),
    playername: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.PveTeam.PveTeamPushFinishedRes}
 */
proto.PbModel.PveTeam.PveTeamPushFinishedRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.PveTeam.PveTeamPushFinishedRes;
  return proto.PbModel.PveTeam.PveTeamPushFinishedRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.PveTeam.PveTeamPushFinishedRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.PveTeam.PveTeamPushFinishedRes}
 */
proto.PbModel.PveTeam.PveTeamPushFinishedRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIssuccess(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxchapterid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTodayrewardtimes(value);
      break;
    case 5:
      var value = new Resource_pb.ResourceToClientModel;
      reader.readMessage(value,Resource_pb.ResourceToClientModel.deserializeBinaryFromReader);
      msg.setBasegetgameresourcelist(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlayername(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.PveTeam.PveTeamPushFinishedRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.PveTeam.PveTeamPushFinishedRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.PveTeam.PveTeamPushFinishedRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PveTeam.PveTeamPushFinishedRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIssuccess();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getMaxchapterid();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getTodayrewardtimes();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getBasegetgameresourcelist();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      Resource_pb.ResourceToClientModel.serializeBinaryToWriter
    );
  }
  f = message.getPlayername();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string Id = 1;
 * @return {string}
 */
proto.PbModel.PveTeam.PveTeamPushFinishedRes.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.PveTeam.PveTeamPushFinishedRes} returns this
 */
proto.PbModel.PveTeam.PveTeamPushFinishedRes.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool IsSuccess = 2;
 * @return {boolean}
 */
proto.PbModel.PveTeam.PveTeamPushFinishedRes.prototype.getIssuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PbModel.PveTeam.PveTeamPushFinishedRes} returns this
 */
proto.PbModel.PveTeam.PveTeamPushFinishedRes.prototype.setIssuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional int32 MaxChapterId = 3;
 * @return {number}
 */
proto.PbModel.PveTeam.PveTeamPushFinishedRes.prototype.getMaxchapterid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.PveTeam.PveTeamPushFinishedRes} returns this
 */
proto.PbModel.PveTeam.PveTeamPushFinishedRes.prototype.setMaxchapterid = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 TodayRewardTimes = 4;
 * @return {number}
 */
proto.PbModel.PveTeam.PveTeamPushFinishedRes.prototype.getTodayrewardtimes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.PveTeam.PveTeamPushFinishedRes} returns this
 */
proto.PbModel.PveTeam.PveTeamPushFinishedRes.prototype.setTodayrewardtimes = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional PbModel.Resource.ResourceToClientModel BaseGetGameResourceList = 5;
 * @return {?proto.PbModel.Resource.ResourceToClientModel}
 */
proto.PbModel.PveTeam.PveTeamPushFinishedRes.prototype.getBasegetgameresourcelist = function() {
  return /** @type{?proto.PbModel.Resource.ResourceToClientModel} */ (
    jspb.Message.getWrapperField(this, Resource_pb.ResourceToClientModel, 5));
};


/**
 * @param {?proto.PbModel.Resource.ResourceToClientModel|undefined} value
 * @return {!proto.PbModel.PveTeam.PveTeamPushFinishedRes} returns this
*/
proto.PbModel.PveTeam.PveTeamPushFinishedRes.prototype.setBasegetgameresourcelist = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.PveTeam.PveTeamPushFinishedRes} returns this
 */
proto.PbModel.PveTeam.PveTeamPushFinishedRes.prototype.clearBasegetgameresourcelist = function() {
  return this.setBasegetgameresourcelist(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.PveTeam.PveTeamPushFinishedRes.prototype.hasBasegetgameresourcelist = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string PlayerName = 6;
 * @return {string}
 */
proto.PbModel.PveTeam.PveTeamPushFinishedRes.prototype.getPlayername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.PveTeam.PveTeamPushFinishedRes} returns this
 */
proto.PbModel.PveTeam.PveTeamPushFinishedRes.prototype.setPlayername = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.PveTeam.PveTeamPushPositionRes.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.PveTeam.PveTeamPushPositionRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.PveTeam.PveTeamPushPositionRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.PveTeam.PveTeamPushPositionRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PveTeam.PveTeamPushPositionRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    positioninfoList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.PveTeam.PveTeamPushPositionRes}
 */
proto.PbModel.PveTeam.PveTeamPushPositionRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.PveTeam.PveTeamPushPositionRes;
  return proto.PbModel.PveTeam.PveTeamPushPositionRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.PveTeam.PveTeamPushPositionRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.PveTeam.PveTeamPushPositionRes}
 */
proto.PbModel.PveTeam.PveTeamPushPositionRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.addPositioninfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.PveTeam.PveTeamPushPositionRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.PveTeam.PveTeamPushPositionRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.PveTeam.PveTeamPushPositionRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PveTeam.PveTeamPushPositionRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPositioninfoList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      7,
      f
    );
  }
};


/**
 * repeated string PositionInfo = 7;
 * @return {!Array<string>}
 */
proto.PbModel.PveTeam.PveTeamPushPositionRes.prototype.getPositioninfoList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 7));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.PbModel.PveTeam.PveTeamPushPositionRes} returns this
 */
proto.PbModel.PveTeam.PveTeamPushPositionRes.prototype.setPositioninfoList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.PbModel.PveTeam.PveTeamPushPositionRes} returns this
 */
proto.PbModel.PveTeam.PveTeamPushPositionRes.prototype.addPositioninfo = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.PveTeam.PveTeamPushPositionRes} returns this
 */
proto.PbModel.PveTeam.PveTeamPushPositionRes.prototype.clearPositioninfoList = function() {
  return this.setPositioninfoList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.PveTeam.PveTeamPushStartRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.PveTeam.PveTeamPushStartRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.PveTeam.PveTeamPushStartRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PveTeam.PveTeamPushStartRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    teaminfo: (f = msg.getTeaminfo()) && proto.PbModel.PveTeam.PveTeamInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.PveTeam.PveTeamPushStartRes}
 */
proto.PbModel.PveTeam.PveTeamPushStartRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.PveTeam.PveTeamPushStartRes;
  return proto.PbModel.PveTeam.PveTeamPushStartRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.PveTeam.PveTeamPushStartRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.PveTeam.PveTeamPushStartRes}
 */
proto.PbModel.PveTeam.PveTeamPushStartRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PbModel.PveTeam.PveTeamInfo;
      reader.readMessage(value,proto.PbModel.PveTeam.PveTeamInfo.deserializeBinaryFromReader);
      msg.setTeaminfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.PveTeam.PveTeamPushStartRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.PveTeam.PveTeamPushStartRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.PveTeam.PveTeamPushStartRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PveTeam.PveTeamPushStartRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTeaminfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.PbModel.PveTeam.PveTeamInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional PveTeamInfo TeamInfo = 1;
 * @return {?proto.PbModel.PveTeam.PveTeamInfo}
 */
proto.PbModel.PveTeam.PveTeamPushStartRes.prototype.getTeaminfo = function() {
  return /** @type{?proto.PbModel.PveTeam.PveTeamInfo} */ (
    jspb.Message.getWrapperField(this, proto.PbModel.PveTeam.PveTeamInfo, 1));
};


/**
 * @param {?proto.PbModel.PveTeam.PveTeamInfo|undefined} value
 * @return {!proto.PbModel.PveTeam.PveTeamPushStartRes} returns this
*/
proto.PbModel.PveTeam.PveTeamPushStartRes.prototype.setTeaminfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.PveTeam.PveTeamPushStartRes} returns this
 */
proto.PbModel.PveTeam.PveTeamPushStartRes.prototype.clearTeaminfo = function() {
  return this.setTeaminfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.PveTeam.PveTeamPushStartRes.prototype.hasTeaminfo = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.PveTeam.PveTeamPushStatusRes.repeatedFields_ = [5,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.PveTeam.PveTeamPushStatusRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.PveTeam.PveTeamPushStatusRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.PveTeam.PveTeamPushStatusRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PveTeam.PveTeamPushStatusRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    teamstatus: jspb.Message.getFieldWithDefault(msg, 2, 0),
    selectbossorder: jspb.Message.getFieldWithDefault(msg, 4, 0),
    playerlistList: jspb.Message.toObjectList(msg.getPlayerlistList(),
    proto.PbModel.PveTeam.PveTeamPlayerInfo.toObject, includeInstance),
    bosslistList: jspb.Message.toObjectList(msg.getBosslistList(),
    proto.PbModel.PveTeam.PveTeamBossInfo.toObject, includeInstance),
    countdowntime: jspb.Message.getFieldWithDefault(msg, 7, 0),
    selectplayerid: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.PveTeam.PveTeamPushStatusRes}
 */
proto.PbModel.PveTeam.PveTeamPushStatusRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.PveTeam.PveTeamPushStatusRes;
  return proto.PbModel.PveTeam.PveTeamPushStatusRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.PveTeam.PveTeamPushStatusRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.PveTeam.PveTeamPushStatusRes}
 */
proto.PbModel.PveTeam.PveTeamPushStatusRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTeamstatus(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSelectbossorder(value);
      break;
    case 5:
      var value = new proto.PbModel.PveTeam.PveTeamPlayerInfo;
      reader.readMessage(value,proto.PbModel.PveTeam.PveTeamPlayerInfo.deserializeBinaryFromReader);
      msg.addPlayerlist(value);
      break;
    case 6:
      var value = new proto.PbModel.PveTeam.PveTeamBossInfo;
      reader.readMessage(value,proto.PbModel.PveTeam.PveTeamBossInfo.deserializeBinaryFromReader);
      msg.addBosslist(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCountdowntime(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setSelectplayerid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.PveTeam.PveTeamPushStatusRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.PveTeam.PveTeamPushStatusRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.PveTeam.PveTeamPushStatusRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PveTeam.PveTeamPushStatusRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTeamstatus();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getSelectbossorder();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getPlayerlistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.PbModel.PveTeam.PveTeamPlayerInfo.serializeBinaryToWriter
    );
  }
  f = message.getBosslistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.PbModel.PveTeam.PveTeamBossInfo.serializeBinaryToWriter
    );
  }
  f = message.getCountdowntime();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getSelectplayerid();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional string Id = 1;
 * @return {string}
 */
proto.PbModel.PveTeam.PveTeamPushStatusRes.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.PveTeam.PveTeamPushStatusRes} returns this
 */
proto.PbModel.PveTeam.PveTeamPushStatusRes.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 TeamStatus = 2;
 * @return {number}
 */
proto.PbModel.PveTeam.PveTeamPushStatusRes.prototype.getTeamstatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.PveTeam.PveTeamPushStatusRes} returns this
 */
proto.PbModel.PveTeam.PveTeamPushStatusRes.prototype.setTeamstatus = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 SelectBossOrder = 4;
 * @return {number}
 */
proto.PbModel.PveTeam.PveTeamPushStatusRes.prototype.getSelectbossorder = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.PveTeam.PveTeamPushStatusRes} returns this
 */
proto.PbModel.PveTeam.PveTeamPushStatusRes.prototype.setSelectbossorder = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * repeated PveTeamPlayerInfo PlayerList = 5;
 * @return {!Array<!proto.PbModel.PveTeam.PveTeamPlayerInfo>}
 */
proto.PbModel.PveTeam.PveTeamPushStatusRes.prototype.getPlayerlistList = function() {
  return /** @type{!Array<!proto.PbModel.PveTeam.PveTeamPlayerInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.PveTeam.PveTeamPlayerInfo, 5));
};


/**
 * @param {!Array<!proto.PbModel.PveTeam.PveTeamPlayerInfo>} value
 * @return {!proto.PbModel.PveTeam.PveTeamPushStatusRes} returns this
*/
proto.PbModel.PveTeam.PveTeamPushStatusRes.prototype.setPlayerlistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.PbModel.PveTeam.PveTeamPlayerInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.PveTeam.PveTeamPlayerInfo}
 */
proto.PbModel.PveTeam.PveTeamPushStatusRes.prototype.addPlayerlist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.PbModel.PveTeam.PveTeamPlayerInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.PveTeam.PveTeamPushStatusRes} returns this
 */
proto.PbModel.PveTeam.PveTeamPushStatusRes.prototype.clearPlayerlistList = function() {
  return this.setPlayerlistList([]);
};


/**
 * repeated PveTeamBossInfo BossList = 6;
 * @return {!Array<!proto.PbModel.PveTeam.PveTeamBossInfo>}
 */
proto.PbModel.PveTeam.PveTeamPushStatusRes.prototype.getBosslistList = function() {
  return /** @type{!Array<!proto.PbModel.PveTeam.PveTeamBossInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.PveTeam.PveTeamBossInfo, 6));
};


/**
 * @param {!Array<!proto.PbModel.PveTeam.PveTeamBossInfo>} value
 * @return {!proto.PbModel.PveTeam.PveTeamPushStatusRes} returns this
*/
proto.PbModel.PveTeam.PveTeamPushStatusRes.prototype.setBosslistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.PbModel.PveTeam.PveTeamBossInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.PveTeam.PveTeamBossInfo}
 */
proto.PbModel.PveTeam.PveTeamPushStatusRes.prototype.addBosslist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.PbModel.PveTeam.PveTeamBossInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.PveTeam.PveTeamPushStatusRes} returns this
 */
proto.PbModel.PveTeam.PveTeamPushStatusRes.prototype.clearBosslistList = function() {
  return this.setBosslistList([]);
};


/**
 * optional int64 CountdownTime = 7;
 * @return {number}
 */
proto.PbModel.PveTeam.PveTeamPushStatusRes.prototype.getCountdowntime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.PveTeam.PveTeamPushStatusRes} returns this
 */
proto.PbModel.PveTeam.PveTeamPushStatusRes.prototype.setCountdowntime = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string SelectPlayerId = 8;
 * @return {string}
 */
proto.PbModel.PveTeam.PveTeamPushStatusRes.prototype.getSelectplayerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.PveTeam.PveTeamPushStatusRes} returns this
 */
proto.PbModel.PveTeam.PveTeamPushStatusRes.prototype.setSelectplayerid = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.PveTeam.PveTeamApplyFightReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.PveTeam.PveTeamApplyFightReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.PveTeam.PveTeamApplyFightReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PveTeam.PveTeamApplyFightReq.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.PveTeam.PveTeamApplyFightReq}
 */
proto.PbModel.PveTeam.PveTeamApplyFightReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.PveTeam.PveTeamApplyFightReq;
  return proto.PbModel.PveTeam.PveTeamApplyFightReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.PveTeam.PveTeamApplyFightReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.PveTeam.PveTeamApplyFightReq}
 */
proto.PbModel.PveTeam.PveTeamApplyFightReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.PveTeam.PveTeamApplyFightReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.PveTeam.PveTeamApplyFightReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.PveTeam.PveTeamApplyFightReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PveTeam.PveTeamApplyFightReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.PveTeam.PveTeamApplyFightRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.PveTeam.PveTeamApplyFightRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.PveTeam.PveTeamApplyFightRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PveTeam.PveTeamApplyFightRes.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.PveTeam.PveTeamApplyFightRes}
 */
proto.PbModel.PveTeam.PveTeamApplyFightRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.PveTeam.PveTeamApplyFightRes;
  return proto.PbModel.PveTeam.PveTeamApplyFightRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.PveTeam.PveTeamApplyFightRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.PveTeam.PveTeamApplyFightRes}
 */
proto.PbModel.PveTeam.PveTeamApplyFightRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.PveTeam.PveTeamApplyFightRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.PveTeam.PveTeamApplyFightRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.PveTeam.PveTeamApplyFightRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PveTeam.PveTeamApplyFightRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.PveTeam.PveTeamGetInfoReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.PveTeam.PveTeamGetInfoReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.PveTeam.PveTeamGetInfoReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PveTeam.PveTeamGetInfoReq.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.PveTeam.PveTeamGetInfoReq}
 */
proto.PbModel.PveTeam.PveTeamGetInfoReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.PveTeam.PveTeamGetInfoReq;
  return proto.PbModel.PveTeam.PveTeamGetInfoReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.PveTeam.PveTeamGetInfoReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.PveTeam.PveTeamGetInfoReq}
 */
proto.PbModel.PveTeam.PveTeamGetInfoReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.PveTeam.PveTeamGetInfoReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.PveTeam.PveTeamGetInfoReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.PveTeam.PveTeamGetInfoReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PveTeam.PveTeamGetInfoReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.PveTeam.PveTeamGetInfoRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.PveTeam.PveTeamGetInfoRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.PveTeam.PveTeamGetInfoRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PveTeam.PveTeamGetInfoRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    maxchapterid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    todayrewardtimes: jspb.Message.getFieldWithDefault(msg, 2, 0),
    hasteam: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    teaminfo: (f = msg.getTeaminfo()) && proto.PbModel.PveTeam.PveTeamInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.PveTeam.PveTeamGetInfoRes}
 */
proto.PbModel.PveTeam.PveTeamGetInfoRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.PveTeam.PveTeamGetInfoRes;
  return proto.PbModel.PveTeam.PveTeamGetInfoRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.PveTeam.PveTeamGetInfoRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.PveTeam.PveTeamGetInfoRes}
 */
proto.PbModel.PveTeam.PveTeamGetInfoRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxchapterid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTodayrewardtimes(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHasteam(value);
      break;
    case 4:
      var value = new proto.PbModel.PveTeam.PveTeamInfo;
      reader.readMessage(value,proto.PbModel.PveTeam.PveTeamInfo.deserializeBinaryFromReader);
      msg.setTeaminfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.PveTeam.PveTeamGetInfoRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.PveTeam.PveTeamGetInfoRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.PveTeam.PveTeamGetInfoRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PveTeam.PveTeamGetInfoRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMaxchapterid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTodayrewardtimes();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getHasteam();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getTeaminfo();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.PbModel.PveTeam.PveTeamInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 MaxChapterId = 1;
 * @return {number}
 */
proto.PbModel.PveTeam.PveTeamGetInfoRes.prototype.getMaxchapterid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.PveTeam.PveTeamGetInfoRes} returns this
 */
proto.PbModel.PveTeam.PveTeamGetInfoRes.prototype.setMaxchapterid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 TodayRewardTimes = 2;
 * @return {number}
 */
proto.PbModel.PveTeam.PveTeamGetInfoRes.prototype.getTodayrewardtimes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.PveTeam.PveTeamGetInfoRes} returns this
 */
proto.PbModel.PveTeam.PveTeamGetInfoRes.prototype.setTodayrewardtimes = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool HasTeam = 3;
 * @return {boolean}
 */
proto.PbModel.PveTeam.PveTeamGetInfoRes.prototype.getHasteam = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PbModel.PveTeam.PveTeamGetInfoRes} returns this
 */
proto.PbModel.PveTeam.PveTeamGetInfoRes.prototype.setHasteam = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional PveTeamInfo TeamInfo = 4;
 * @return {?proto.PbModel.PveTeam.PveTeamInfo}
 */
proto.PbModel.PveTeam.PveTeamGetInfoRes.prototype.getTeaminfo = function() {
  return /** @type{?proto.PbModel.PveTeam.PveTeamInfo} */ (
    jspb.Message.getWrapperField(this, proto.PbModel.PveTeam.PveTeamInfo, 4));
};


/**
 * @param {?proto.PbModel.PveTeam.PveTeamInfo|undefined} value
 * @return {!proto.PbModel.PveTeam.PveTeamGetInfoRes} returns this
*/
proto.PbModel.PveTeam.PveTeamGetInfoRes.prototype.setTeaminfo = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.PveTeam.PveTeamGetInfoRes} returns this
 */
proto.PbModel.PveTeam.PveTeamGetInfoRes.prototype.clearTeaminfo = function() {
  return this.setTeaminfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.PveTeam.PveTeamGetInfoRes.prototype.hasTeaminfo = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.PveTeam.PveTeamDrawRewardReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.PveTeam.PveTeamDrawRewardReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.PveTeam.PveTeamDrawRewardReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PveTeam.PveTeamDrawRewardReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    isdraw: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.PveTeam.PveTeamDrawRewardReq}
 */
proto.PbModel.PveTeam.PveTeamDrawRewardReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.PveTeam.PveTeamDrawRewardReq;
  return proto.PbModel.PveTeam.PveTeamDrawRewardReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.PveTeam.PveTeamDrawRewardReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.PveTeam.PveTeamDrawRewardReq}
 */
proto.PbModel.PveTeam.PveTeamDrawRewardReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsdraw(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.PveTeam.PveTeamDrawRewardReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.PveTeam.PveTeamDrawRewardReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.PveTeam.PveTeamDrawRewardReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PveTeam.PveTeamDrawRewardReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIsdraw();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool IsDraw = 1;
 * @return {boolean}
 */
proto.PbModel.PveTeam.PveTeamDrawRewardReq.prototype.getIsdraw = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PbModel.PveTeam.PveTeamDrawRewardReq} returns this
 */
proto.PbModel.PveTeam.PveTeamDrawRewardReq.prototype.setIsdraw = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.PveTeam.PveTeamDrawRewardRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.PveTeam.PveTeamDrawRewardRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.PveTeam.PveTeamDrawRewardRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PveTeam.PveTeamDrawRewardRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    basegetgameresourcelist: (f = msg.getBasegetgameresourcelist()) && Resource_pb.ResourceToClientModel.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.PveTeam.PveTeamDrawRewardRes}
 */
proto.PbModel.PveTeam.PveTeamDrawRewardRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.PveTeam.PveTeamDrawRewardRes;
  return proto.PbModel.PveTeam.PveTeamDrawRewardRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.PveTeam.PveTeamDrawRewardRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.PveTeam.PveTeamDrawRewardRes}
 */
proto.PbModel.PveTeam.PveTeamDrawRewardRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new Resource_pb.ResourceToClientModel;
      reader.readMessage(value,Resource_pb.ResourceToClientModel.deserializeBinaryFromReader);
      msg.setBasegetgameresourcelist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.PveTeam.PveTeamDrawRewardRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.PveTeam.PveTeamDrawRewardRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.PveTeam.PveTeamDrawRewardRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PveTeam.PveTeamDrawRewardRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBasegetgameresourcelist();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      Resource_pb.ResourceToClientModel.serializeBinaryToWriter
    );
  }
};


/**
 * optional PbModel.Resource.ResourceToClientModel BaseGetGameResourceList = 1;
 * @return {?proto.PbModel.Resource.ResourceToClientModel}
 */
proto.PbModel.PveTeam.PveTeamDrawRewardRes.prototype.getBasegetgameresourcelist = function() {
  return /** @type{?proto.PbModel.Resource.ResourceToClientModel} */ (
    jspb.Message.getWrapperField(this, Resource_pb.ResourceToClientModel, 1));
};


/**
 * @param {?proto.PbModel.Resource.ResourceToClientModel|undefined} value
 * @return {!proto.PbModel.PveTeam.PveTeamDrawRewardRes} returns this
*/
proto.PbModel.PveTeam.PveTeamDrawRewardRes.prototype.setBasegetgameresourcelist = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.PveTeam.PveTeamDrawRewardRes} returns this
 */
proto.PbModel.PveTeam.PveTeamDrawRewardRes.prototype.clearBasegetgameresourcelist = function() {
  return this.setBasegetgameresourcelist(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.PveTeam.PveTeamDrawRewardRes.prototype.hasBasegetgameresourcelist = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.PveTeam.PveTeamGoFightReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.PveTeam.PveTeamGoFightReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.PveTeam.PveTeamGoFightReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PveTeam.PveTeamGoFightReq.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.PveTeam.PveTeamGoFightReq}
 */
proto.PbModel.PveTeam.PveTeamGoFightReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.PveTeam.PveTeamGoFightReq;
  return proto.PbModel.PveTeam.PveTeamGoFightReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.PveTeam.PveTeamGoFightReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.PveTeam.PveTeamGoFightReq}
 */
proto.PbModel.PveTeam.PveTeamGoFightReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.PveTeam.PveTeamGoFightReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.PveTeam.PveTeamGoFightReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.PveTeam.PveTeamGoFightReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PveTeam.PveTeamGoFightReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.PveTeam.PveTeamGoFightRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.PveTeam.PveTeamGoFightRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.PveTeam.PveTeamGoFightRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PveTeam.PveTeamGoFightRes.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.PveTeam.PveTeamGoFightRes}
 */
proto.PbModel.PveTeam.PveTeamGoFightRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.PveTeam.PveTeamGoFightRes;
  return proto.PbModel.PveTeam.PveTeamGoFightRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.PveTeam.PveTeamGoFightRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.PveTeam.PveTeamGoFightRes}
 */
proto.PbModel.PveTeam.PveTeamGoFightRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.PveTeam.PveTeamGoFightRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.PveTeam.PveTeamGoFightRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.PveTeam.PveTeamGoFightRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PveTeam.PveTeamGoFightRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.PveTeam.PveTeamInitData.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.PveTeam.PveTeamInitData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.PveTeam.PveTeamInitData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PveTeam.PveTeamInitData.toObject = function(includeInstance, msg) {
  var f, obj = {
    isingame: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    teaminfo: (f = msg.getTeaminfo()) && proto.PbModel.PveTeam.PveTeamInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.PveTeam.PveTeamInitData}
 */
proto.PbModel.PveTeam.PveTeamInitData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.PveTeam.PveTeamInitData;
  return proto.PbModel.PveTeam.PveTeamInitData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.PveTeam.PveTeamInitData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.PveTeam.PveTeamInitData}
 */
proto.PbModel.PveTeam.PveTeamInitData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsingame(value);
      break;
    case 2:
      var value = new proto.PbModel.PveTeam.PveTeamInfo;
      reader.readMessage(value,proto.PbModel.PveTeam.PveTeamInfo.deserializeBinaryFromReader);
      msg.setTeaminfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.PveTeam.PveTeamInitData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.PveTeam.PveTeamInitData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.PveTeam.PveTeamInitData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PveTeam.PveTeamInitData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIsingame();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getTeaminfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.PbModel.PveTeam.PveTeamInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool IsInGame = 1;
 * @return {boolean}
 */
proto.PbModel.PveTeam.PveTeamInitData.prototype.getIsingame = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PbModel.PveTeam.PveTeamInitData} returns this
 */
proto.PbModel.PveTeam.PveTeamInitData.prototype.setIsingame = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional PveTeamInfo TeamInfo = 2;
 * @return {?proto.PbModel.PveTeam.PveTeamInfo}
 */
proto.PbModel.PveTeam.PveTeamInitData.prototype.getTeaminfo = function() {
  return /** @type{?proto.PbModel.PveTeam.PveTeamInfo} */ (
    jspb.Message.getWrapperField(this, proto.PbModel.PveTeam.PveTeamInfo, 2));
};


/**
 * @param {?proto.PbModel.PveTeam.PveTeamInfo|undefined} value
 * @return {!proto.PbModel.PveTeam.PveTeamInitData} returns this
*/
proto.PbModel.PveTeam.PveTeamInitData.prototype.setTeaminfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.PveTeam.PveTeamInitData} returns this
 */
proto.PbModel.PveTeam.PveTeamInitData.prototype.clearTeaminfo = function() {
  return this.setTeaminfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.PveTeam.PveTeamInitData.prototype.hasTeaminfo = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.PveTeam.PveTeamInfo.repeatedFields_ = [5,6,7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.PveTeam.PveTeamInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.PveTeam.PveTeamInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.PveTeam.PveTeamInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PveTeam.PveTeamInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    teamstatus: jspb.Message.getFieldWithDefault(msg, 2, 0),
    chapterid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    selectbossorder: jspb.Message.getFieldWithDefault(msg, 4, 0),
    playerlistList: jspb.Message.toObjectList(msg.getPlayerlistList(),
    proto.PbModel.PveTeam.PveTeamPlayerInfo.toObject, includeInstance),
    bosslistList: jspb.Message.toObjectList(msg.getBosslistList(),
    proto.PbModel.PveTeam.PveTeamBossInfo.toObject, includeInstance),
    positioninfoList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f,
    countdowntime: jspb.Message.getFieldWithDefault(msg, 8, 0),
    selectplayerid: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.PveTeam.PveTeamInfo}
 */
proto.PbModel.PveTeam.PveTeamInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.PveTeam.PveTeamInfo;
  return proto.PbModel.PveTeam.PveTeamInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.PveTeam.PveTeamInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.PveTeam.PveTeamInfo}
 */
proto.PbModel.PveTeam.PveTeamInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTeamstatus(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setChapterid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSelectbossorder(value);
      break;
    case 5:
      var value = new proto.PbModel.PveTeam.PveTeamPlayerInfo;
      reader.readMessage(value,proto.PbModel.PveTeam.PveTeamPlayerInfo.deserializeBinaryFromReader);
      msg.addPlayerlist(value);
      break;
    case 6:
      var value = new proto.PbModel.PveTeam.PveTeamBossInfo;
      reader.readMessage(value,proto.PbModel.PveTeam.PveTeamBossInfo.deserializeBinaryFromReader);
      msg.addBosslist(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.addPositioninfo(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCountdowntime(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setSelectplayerid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.PveTeam.PveTeamInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.PveTeam.PveTeamInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.PveTeam.PveTeamInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PveTeam.PveTeamInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTeamstatus();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getChapterid();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getSelectbossorder();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getPlayerlistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.PbModel.PveTeam.PveTeamPlayerInfo.serializeBinaryToWriter
    );
  }
  f = message.getBosslistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.PbModel.PveTeam.PveTeamBossInfo.serializeBinaryToWriter
    );
  }
  f = message.getPositioninfoList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      7,
      f
    );
  }
  f = message.getCountdowntime();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getSelectplayerid();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional string Id = 1;
 * @return {string}
 */
proto.PbModel.PveTeam.PveTeamInfo.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.PveTeam.PveTeamInfo} returns this
 */
proto.PbModel.PveTeam.PveTeamInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 TeamStatus = 2;
 * @return {number}
 */
proto.PbModel.PveTeam.PveTeamInfo.prototype.getTeamstatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.PveTeam.PveTeamInfo} returns this
 */
proto.PbModel.PveTeam.PveTeamInfo.prototype.setTeamstatus = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 chapterId = 3;
 * @return {number}
 */
proto.PbModel.PveTeam.PveTeamInfo.prototype.getChapterid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.PveTeam.PveTeamInfo} returns this
 */
proto.PbModel.PveTeam.PveTeamInfo.prototype.setChapterid = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 SelectBossOrder = 4;
 * @return {number}
 */
proto.PbModel.PveTeam.PveTeamInfo.prototype.getSelectbossorder = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.PveTeam.PveTeamInfo} returns this
 */
proto.PbModel.PveTeam.PveTeamInfo.prototype.setSelectbossorder = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * repeated PveTeamPlayerInfo PlayerList = 5;
 * @return {!Array<!proto.PbModel.PveTeam.PveTeamPlayerInfo>}
 */
proto.PbModel.PveTeam.PveTeamInfo.prototype.getPlayerlistList = function() {
  return /** @type{!Array<!proto.PbModel.PveTeam.PveTeamPlayerInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.PveTeam.PveTeamPlayerInfo, 5));
};


/**
 * @param {!Array<!proto.PbModel.PveTeam.PveTeamPlayerInfo>} value
 * @return {!proto.PbModel.PveTeam.PveTeamInfo} returns this
*/
proto.PbModel.PveTeam.PveTeamInfo.prototype.setPlayerlistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.PbModel.PveTeam.PveTeamPlayerInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.PveTeam.PveTeamPlayerInfo}
 */
proto.PbModel.PveTeam.PveTeamInfo.prototype.addPlayerlist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.PbModel.PveTeam.PveTeamPlayerInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.PveTeam.PveTeamInfo} returns this
 */
proto.PbModel.PveTeam.PveTeamInfo.prototype.clearPlayerlistList = function() {
  return this.setPlayerlistList([]);
};


/**
 * repeated PveTeamBossInfo BossList = 6;
 * @return {!Array<!proto.PbModel.PveTeam.PveTeamBossInfo>}
 */
proto.PbModel.PveTeam.PveTeamInfo.prototype.getBosslistList = function() {
  return /** @type{!Array<!proto.PbModel.PveTeam.PveTeamBossInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.PveTeam.PveTeamBossInfo, 6));
};


/**
 * @param {!Array<!proto.PbModel.PveTeam.PveTeamBossInfo>} value
 * @return {!proto.PbModel.PveTeam.PveTeamInfo} returns this
*/
proto.PbModel.PveTeam.PveTeamInfo.prototype.setBosslistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.PbModel.PveTeam.PveTeamBossInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.PveTeam.PveTeamBossInfo}
 */
proto.PbModel.PveTeam.PveTeamInfo.prototype.addBosslist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.PbModel.PveTeam.PveTeamBossInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.PveTeam.PveTeamInfo} returns this
 */
proto.PbModel.PveTeam.PveTeamInfo.prototype.clearBosslistList = function() {
  return this.setBosslistList([]);
};


/**
 * repeated string PositionInfo = 7;
 * @return {!Array<string>}
 */
proto.PbModel.PveTeam.PveTeamInfo.prototype.getPositioninfoList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 7));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.PbModel.PveTeam.PveTeamInfo} returns this
 */
proto.PbModel.PveTeam.PveTeamInfo.prototype.setPositioninfoList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.PbModel.PveTeam.PveTeamInfo} returns this
 */
proto.PbModel.PveTeam.PveTeamInfo.prototype.addPositioninfo = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.PveTeam.PveTeamInfo} returns this
 */
proto.PbModel.PveTeam.PveTeamInfo.prototype.clearPositioninfoList = function() {
  return this.setPositioninfoList([]);
};


/**
 * optional int64 CountdownTime = 8;
 * @return {number}
 */
proto.PbModel.PveTeam.PveTeamInfo.prototype.getCountdowntime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.PveTeam.PveTeamInfo} returns this
 */
proto.PbModel.PveTeam.PveTeamInfo.prototype.setCountdowntime = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional string SelectPlayerId = 9;
 * @return {string}
 */
proto.PbModel.PveTeam.PveTeamInfo.prototype.getSelectplayerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.PveTeam.PveTeamInfo} returns this
 */
proto.PbModel.PveTeam.PveTeamInfo.prototype.setSelectplayerid = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.PveTeam.PveTeamPlayerInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.PveTeam.PveTeamPlayerInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.PveTeam.PveTeamPlayerInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PveTeam.PveTeamPlayerInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    playerstatus: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.PveTeam.PveTeamPlayerInfo}
 */
proto.PbModel.PveTeam.PveTeamPlayerInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.PveTeam.PveTeamPlayerInfo;
  return proto.PbModel.PveTeam.PveTeamPlayerInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.PveTeam.PveTeamPlayerInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.PveTeam.PveTeamPlayerInfo}
 */
proto.PbModel.PveTeam.PveTeamPlayerInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPlayerstatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.PveTeam.PveTeamPlayerInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.PveTeam.PveTeamPlayerInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.PveTeam.PveTeamPlayerInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PveTeam.PveTeamPlayerInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPlayerstatus();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string Id = 1;
 * @return {string}
 */
proto.PbModel.PveTeam.PveTeamPlayerInfo.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.PveTeam.PveTeamPlayerInfo} returns this
 */
proto.PbModel.PveTeam.PveTeamPlayerInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 PlayerStatus = 2;
 * @return {number}
 */
proto.PbModel.PveTeam.PveTeamPlayerInfo.prototype.getPlayerstatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.PveTeam.PveTeamPlayerInfo} returns this
 */
proto.PbModel.PveTeam.PveTeamPlayerInfo.prototype.setPlayerstatus = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.PveTeam.PveTeamBossInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.PveTeam.PveTeamBossInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.PveTeam.PveTeamBossInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PveTeam.PveTeamBossInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    order: jspb.Message.getFieldWithDefault(msg, 1, 0),
    iskilled: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    killplayerid: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.PveTeam.PveTeamBossInfo}
 */
proto.PbModel.PveTeam.PveTeamBossInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.PveTeam.PveTeamBossInfo;
  return proto.PbModel.PveTeam.PveTeamBossInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.PveTeam.PveTeamBossInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.PveTeam.PveTeamBossInfo}
 */
proto.PbModel.PveTeam.PveTeamBossInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOrder(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIskilled(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setKillplayerid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.PveTeam.PveTeamBossInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.PveTeam.PveTeamBossInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.PveTeam.PveTeamBossInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PveTeam.PveTeamBossInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrder();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getIskilled();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getKillplayerid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int32 Order = 1;
 * @return {number}
 */
proto.PbModel.PveTeam.PveTeamBossInfo.prototype.getOrder = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.PveTeam.PveTeamBossInfo} returns this
 */
proto.PbModel.PveTeam.PveTeamBossInfo.prototype.setOrder = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool IsKilled = 2;
 * @return {boolean}
 */
proto.PbModel.PveTeam.PveTeamBossInfo.prototype.getIskilled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PbModel.PveTeam.PveTeamBossInfo} returns this
 */
proto.PbModel.PveTeam.PveTeamBossInfo.prototype.setIskilled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional string KillPlayerId = 3;
 * @return {string}
 */
proto.PbModel.PveTeam.PveTeamBossInfo.prototype.getKillplayerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.PveTeam.PveTeamBossInfo} returns this
 */
proto.PbModel.PveTeam.PveTeamBossInfo.prototype.setKillplayerid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.PveTeam.PveTeamOverGameReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.PveTeam.PveTeamOverGameReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.PveTeam.PveTeamOverGameReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PveTeam.PveTeamOverGameReq.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.PveTeam.PveTeamOverGameReq}
 */
proto.PbModel.PveTeam.PveTeamOverGameReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.PveTeam.PveTeamOverGameReq;
  return proto.PbModel.PveTeam.PveTeamOverGameReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.PveTeam.PveTeamOverGameReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.PveTeam.PveTeamOverGameReq}
 */
proto.PbModel.PveTeam.PveTeamOverGameReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.PveTeam.PveTeamOverGameReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.PveTeam.PveTeamOverGameReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.PveTeam.PveTeamOverGameReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PveTeam.PveTeamOverGameReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.PveTeam.PveTeamOverGameRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.PveTeam.PveTeamOverGameRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.PveTeam.PveTeamOverGameRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PveTeam.PveTeamOverGameRes.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.PveTeam.PveTeamOverGameRes}
 */
proto.PbModel.PveTeam.PveTeamOverGameRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.PveTeam.PveTeamOverGameRes;
  return proto.PbModel.PveTeam.PveTeamOverGameRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.PveTeam.PveTeamOverGameRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.PveTeam.PveTeamOverGameRes}
 */
proto.PbModel.PveTeam.PveTeamOverGameRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.PveTeam.PveTeamOverGameRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.PveTeam.PveTeamOverGameRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.PveTeam.PveTeamOverGameRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PveTeam.PveTeamOverGameRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.PveTeam.PveTeamSelectBossReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.PveTeam.PveTeamSelectBossReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.PveTeam.PveTeamSelectBossReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PveTeam.PveTeamSelectBossReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    order: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.PveTeam.PveTeamSelectBossReq}
 */
proto.PbModel.PveTeam.PveTeamSelectBossReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.PveTeam.PveTeamSelectBossReq;
  return proto.PbModel.PveTeam.PveTeamSelectBossReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.PveTeam.PveTeamSelectBossReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.PveTeam.PveTeamSelectBossReq}
 */
proto.PbModel.PveTeam.PveTeamSelectBossReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOrder(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.PveTeam.PveTeamSelectBossReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.PveTeam.PveTeamSelectBossReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.PveTeam.PveTeamSelectBossReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PveTeam.PveTeamSelectBossReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrder();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 Order = 1;
 * @return {number}
 */
proto.PbModel.PveTeam.PveTeamSelectBossReq.prototype.getOrder = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.PveTeam.PveTeamSelectBossReq} returns this
 */
proto.PbModel.PveTeam.PveTeamSelectBossReq.prototype.setOrder = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.PveTeam.PveTeamSelectBossRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.PveTeam.PveTeamSelectBossRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.PveTeam.PveTeamSelectBossRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PveTeam.PveTeamSelectBossRes.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.PveTeam.PveTeamSelectBossRes}
 */
proto.PbModel.PveTeam.PveTeamSelectBossRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.PveTeam.PveTeamSelectBossRes;
  return proto.PbModel.PveTeam.PveTeamSelectBossRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.PveTeam.PveTeamSelectBossRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.PveTeam.PveTeamSelectBossRes}
 */
proto.PbModel.PveTeam.PveTeamSelectBossRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.PveTeam.PveTeamSelectBossRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.PveTeam.PveTeamSelectBossRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.PveTeam.PveTeamSelectBossRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PveTeam.PveTeamSelectBossRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.PveTeam.PveTeamSelectToFightReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.PveTeam.PveTeamSelectToFightReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.PveTeam.PveTeamSelectToFightReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PveTeam.PveTeamSelectToFightReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    playerid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.PveTeam.PveTeamSelectToFightReq}
 */
proto.PbModel.PveTeam.PveTeamSelectToFightReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.PveTeam.PveTeamSelectToFightReq;
  return proto.PbModel.PveTeam.PveTeamSelectToFightReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.PveTeam.PveTeamSelectToFightReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.PveTeam.PveTeamSelectToFightReq}
 */
proto.PbModel.PveTeam.PveTeamSelectToFightReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlayerid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.PveTeam.PveTeamSelectToFightReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.PveTeam.PveTeamSelectToFightReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.PveTeam.PveTeamSelectToFightReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PveTeam.PveTeamSelectToFightReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlayerid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string PlayerId = 1;
 * @return {string}
 */
proto.PbModel.PveTeam.PveTeamSelectToFightReq.prototype.getPlayerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.PveTeam.PveTeamSelectToFightReq} returns this
 */
proto.PbModel.PveTeam.PveTeamSelectToFightReq.prototype.setPlayerid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.PveTeam.PveTeamSelectToFightRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.PveTeam.PveTeamSelectToFightRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.PveTeam.PveTeamSelectToFightRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PveTeam.PveTeamSelectToFightRes.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.PveTeam.PveTeamSelectToFightRes}
 */
proto.PbModel.PveTeam.PveTeamSelectToFightRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.PveTeam.PveTeamSelectToFightRes;
  return proto.PbModel.PveTeam.PveTeamSelectToFightRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.PveTeam.PveTeamSelectToFightRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.PveTeam.PveTeamSelectToFightRes}
 */
proto.PbModel.PveTeam.PveTeamSelectToFightRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.PveTeam.PveTeamSelectToFightRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.PveTeam.PveTeamSelectToFightRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.PveTeam.PveTeamSelectToFightRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PveTeam.PveTeamSelectToFightRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.PveTeam.PveTeamStartFightReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.PveTeam.PveTeamStartFightReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.PveTeam.PveTeamStartFightReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PveTeam.PveTeamStartFightReq.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.PveTeam.PveTeamStartFightReq}
 */
proto.PbModel.PveTeam.PveTeamStartFightReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.PveTeam.PveTeamStartFightReq;
  return proto.PbModel.PveTeam.PveTeamStartFightReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.PveTeam.PveTeamStartFightReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.PveTeam.PveTeamStartFightReq}
 */
proto.PbModel.PveTeam.PveTeamStartFightReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.PveTeam.PveTeamStartFightReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.PveTeam.PveTeamStartFightReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.PveTeam.PveTeamStartFightReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PveTeam.PveTeamStartFightReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.PveTeam.PveTeamStartFightRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.PveTeam.PveTeamStartFightRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.PveTeam.PveTeamStartFightRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PveTeam.PveTeamStartFightRes.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.PveTeam.PveTeamStartFightRes}
 */
proto.PbModel.PveTeam.PveTeamStartFightRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.PveTeam.PveTeamStartFightRes;
  return proto.PbModel.PveTeam.PveTeamStartFightRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.PveTeam.PveTeamStartFightRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.PveTeam.PveTeamStartFightRes}
 */
proto.PbModel.PveTeam.PveTeamStartFightRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.PveTeam.PveTeamStartFightRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.PveTeam.PveTeamStartFightRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.PveTeam.PveTeamStartFightRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PveTeam.PveTeamStartFightRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.PveTeam.PveTeamSetAutoFightReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.PveTeam.PveTeamSetAutoFightReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.PveTeam.PveTeamSetAutoFightReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PveTeam.PveTeamSetAutoFightReq.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.PveTeam.PveTeamSetAutoFightReq}
 */
proto.PbModel.PveTeam.PveTeamSetAutoFightReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.PveTeam.PveTeamSetAutoFightReq;
  return proto.PbModel.PveTeam.PveTeamSetAutoFightReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.PveTeam.PveTeamSetAutoFightReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.PveTeam.PveTeamSetAutoFightReq}
 */
proto.PbModel.PveTeam.PveTeamSetAutoFightReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.PveTeam.PveTeamSetAutoFightReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.PveTeam.PveTeamSetAutoFightReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.PveTeam.PveTeamSetAutoFightReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PveTeam.PveTeamSetAutoFightReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.PveTeam.PveTeamSetAutoFightRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.PveTeam.PveTeamSetAutoFightRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.PveTeam.PveTeamSetAutoFightRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PveTeam.PveTeamSetAutoFightRes.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.PveTeam.PveTeamSetAutoFightRes}
 */
proto.PbModel.PveTeam.PveTeamSetAutoFightRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.PveTeam.PveTeamSetAutoFightRes;
  return proto.PbModel.PveTeam.PveTeamSetAutoFightRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.PveTeam.PveTeamSetAutoFightRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.PveTeam.PveTeamSetAutoFightRes}
 */
proto.PbModel.PveTeam.PveTeamSetAutoFightRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.PveTeam.PveTeamSetAutoFightRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.PveTeam.PveTeamSetAutoFightRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.PveTeam.PveTeamSetAutoFightRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PveTeam.PveTeamSetAutoFightRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.PveTeam.PveTeamUpdatePositionReq.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.PveTeam.PveTeamUpdatePositionReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.PveTeam.PveTeamUpdatePositionReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.PveTeam.PveTeamUpdatePositionReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PveTeam.PveTeamUpdatePositionReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    positioninfoList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.PveTeam.PveTeamUpdatePositionReq}
 */
proto.PbModel.PveTeam.PveTeamUpdatePositionReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.PveTeam.PveTeamUpdatePositionReq;
  return proto.PbModel.PveTeam.PveTeamUpdatePositionReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.PveTeam.PveTeamUpdatePositionReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.PveTeam.PveTeamUpdatePositionReq}
 */
proto.PbModel.PveTeam.PveTeamUpdatePositionReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.addPositioninfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.PveTeam.PveTeamUpdatePositionReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.PveTeam.PveTeamUpdatePositionReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.PveTeam.PveTeamUpdatePositionReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PveTeam.PveTeamUpdatePositionReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPositioninfoList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      7,
      f
    );
  }
};


/**
 * repeated string PositionInfo = 7;
 * @return {!Array<string>}
 */
proto.PbModel.PveTeam.PveTeamUpdatePositionReq.prototype.getPositioninfoList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 7));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.PbModel.PveTeam.PveTeamUpdatePositionReq} returns this
 */
proto.PbModel.PveTeam.PveTeamUpdatePositionReq.prototype.setPositioninfoList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.PbModel.PveTeam.PveTeamUpdatePositionReq} returns this
 */
proto.PbModel.PveTeam.PveTeamUpdatePositionReq.prototype.addPositioninfo = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.PveTeam.PveTeamUpdatePositionReq} returns this
 */
proto.PbModel.PveTeam.PveTeamUpdatePositionReq.prototype.clearPositioninfoList = function() {
  return this.setPositioninfoList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.PveTeam.PveTeamUpdatePositionRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.PveTeam.PveTeamUpdatePositionRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.PveTeam.PveTeamUpdatePositionRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PveTeam.PveTeamUpdatePositionRes.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.PveTeam.PveTeamUpdatePositionRes}
 */
proto.PbModel.PveTeam.PveTeamUpdatePositionRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.PveTeam.PveTeamUpdatePositionRes;
  return proto.PbModel.PveTeam.PveTeamUpdatePositionRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.PveTeam.PveTeamUpdatePositionRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.PveTeam.PveTeamUpdatePositionRes}
 */
proto.PbModel.PveTeam.PveTeamUpdatePositionRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.PveTeam.PveTeamUpdatePositionRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.PveTeam.PveTeamUpdatePositionRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.PveTeam.PveTeamUpdatePositionRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PveTeam.PveTeamUpdatePositionRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


goog.object.extend(exports, proto.PbModel.PveTeam);
