// source: ActivityCalendar.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.PbModel.ActivityCalendar.ActivityCalendarActivityInfo', null, global);
goog.exportSymbol('proto.PbModel.ActivityCalendar.ActivityCalendarGetInfoReq', null, global);
goog.exportSymbol('proto.PbModel.ActivityCalendar.ActivityCalendarGetInfoRes', null, global);
goog.exportSymbol('proto.PbModel.ActivityCalendar.ActivityCalendarInfo', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.ActivityCalendar.ActivityCalendarGetInfoReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.ActivityCalendar.ActivityCalendarGetInfoReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.ActivityCalendar.ActivityCalendarGetInfoReq.displayName = 'proto.PbModel.ActivityCalendar.ActivityCalendarGetInfoReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.ActivityCalendar.ActivityCalendarGetInfoRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.ActivityCalendar.ActivityCalendarGetInfoRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.ActivityCalendar.ActivityCalendarGetInfoRes.displayName = 'proto.PbModel.ActivityCalendar.ActivityCalendarGetInfoRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.ActivityCalendar.ActivityCalendarInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.ActivityCalendar.ActivityCalendarInfo.repeatedFields_, null);
};
goog.inherits(proto.PbModel.ActivityCalendar.ActivityCalendarInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.ActivityCalendar.ActivityCalendarInfo.displayName = 'proto.PbModel.ActivityCalendar.ActivityCalendarInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.ActivityCalendar.ActivityCalendarActivityInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.ActivityCalendar.ActivityCalendarActivityInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.ActivityCalendar.ActivityCalendarActivityInfo.displayName = 'proto.PbModel.ActivityCalendar.ActivityCalendarActivityInfo';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.ActivityCalendar.ActivityCalendarGetInfoReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.ActivityCalendar.ActivityCalendarGetInfoReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.ActivityCalendar.ActivityCalendarGetInfoReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.ActivityCalendar.ActivityCalendarGetInfoReq.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.ActivityCalendar.ActivityCalendarGetInfoReq}
 */
proto.PbModel.ActivityCalendar.ActivityCalendarGetInfoReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.ActivityCalendar.ActivityCalendarGetInfoReq;
  return proto.PbModel.ActivityCalendar.ActivityCalendarGetInfoReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.ActivityCalendar.ActivityCalendarGetInfoReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.ActivityCalendar.ActivityCalendarGetInfoReq}
 */
proto.PbModel.ActivityCalendar.ActivityCalendarGetInfoReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.ActivityCalendar.ActivityCalendarGetInfoReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.ActivityCalendar.ActivityCalendarGetInfoReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.ActivityCalendar.ActivityCalendarGetInfoReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.ActivityCalendar.ActivityCalendarGetInfoReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.ActivityCalendar.ActivityCalendarGetInfoRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.ActivityCalendar.ActivityCalendarGetInfoRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.ActivityCalendar.ActivityCalendarGetInfoRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.ActivityCalendar.ActivityCalendarGetInfoRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    newdesc: jspb.Message.getFieldWithDefault(msg, 1, ""),
    comdesc: jspb.Message.getFieldWithDefault(msg, 2, ""),
    curdata: (f = msg.getCurdata()) && proto.PbModel.ActivityCalendar.ActivityCalendarInfo.toObject(includeInstance, f),
    nextdata: (f = msg.getNextdata()) && proto.PbModel.ActivityCalendar.ActivityCalendarInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.ActivityCalendar.ActivityCalendarGetInfoRes}
 */
proto.PbModel.ActivityCalendar.ActivityCalendarGetInfoRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.ActivityCalendar.ActivityCalendarGetInfoRes;
  return proto.PbModel.ActivityCalendar.ActivityCalendarGetInfoRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.ActivityCalendar.ActivityCalendarGetInfoRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.ActivityCalendar.ActivityCalendarGetInfoRes}
 */
proto.PbModel.ActivityCalendar.ActivityCalendarGetInfoRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNewdesc(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setComdesc(value);
      break;
    case 3:
      var value = new proto.PbModel.ActivityCalendar.ActivityCalendarInfo;
      reader.readMessage(value,proto.PbModel.ActivityCalendar.ActivityCalendarInfo.deserializeBinaryFromReader);
      msg.setCurdata(value);
      break;
    case 4:
      var value = new proto.PbModel.ActivityCalendar.ActivityCalendarInfo;
      reader.readMessage(value,proto.PbModel.ActivityCalendar.ActivityCalendarInfo.deserializeBinaryFromReader);
      msg.setNextdata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.ActivityCalendar.ActivityCalendarGetInfoRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.ActivityCalendar.ActivityCalendarGetInfoRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.ActivityCalendar.ActivityCalendarGetInfoRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.ActivityCalendar.ActivityCalendarGetInfoRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNewdesc();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getComdesc();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCurdata();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.PbModel.ActivityCalendar.ActivityCalendarInfo.serializeBinaryToWriter
    );
  }
  f = message.getNextdata();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.PbModel.ActivityCalendar.ActivityCalendarInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional string NewDesc = 1;
 * @return {string}
 */
proto.PbModel.ActivityCalendar.ActivityCalendarGetInfoRes.prototype.getNewdesc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.ActivityCalendar.ActivityCalendarGetInfoRes} returns this
 */
proto.PbModel.ActivityCalendar.ActivityCalendarGetInfoRes.prototype.setNewdesc = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string ComDesc = 2;
 * @return {string}
 */
proto.PbModel.ActivityCalendar.ActivityCalendarGetInfoRes.prototype.getComdesc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.ActivityCalendar.ActivityCalendarGetInfoRes} returns this
 */
proto.PbModel.ActivityCalendar.ActivityCalendarGetInfoRes.prototype.setComdesc = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional ActivityCalendarInfo CurData = 3;
 * @return {?proto.PbModel.ActivityCalendar.ActivityCalendarInfo}
 */
proto.PbModel.ActivityCalendar.ActivityCalendarGetInfoRes.prototype.getCurdata = function() {
  return /** @type{?proto.PbModel.ActivityCalendar.ActivityCalendarInfo} */ (
    jspb.Message.getWrapperField(this, proto.PbModel.ActivityCalendar.ActivityCalendarInfo, 3));
};


/**
 * @param {?proto.PbModel.ActivityCalendar.ActivityCalendarInfo|undefined} value
 * @return {!proto.PbModel.ActivityCalendar.ActivityCalendarGetInfoRes} returns this
*/
proto.PbModel.ActivityCalendar.ActivityCalendarGetInfoRes.prototype.setCurdata = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.ActivityCalendar.ActivityCalendarGetInfoRes} returns this
 */
proto.PbModel.ActivityCalendar.ActivityCalendarGetInfoRes.prototype.clearCurdata = function() {
  return this.setCurdata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.ActivityCalendar.ActivityCalendarGetInfoRes.prototype.hasCurdata = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ActivityCalendarInfo NextData = 4;
 * @return {?proto.PbModel.ActivityCalendar.ActivityCalendarInfo}
 */
proto.PbModel.ActivityCalendar.ActivityCalendarGetInfoRes.prototype.getNextdata = function() {
  return /** @type{?proto.PbModel.ActivityCalendar.ActivityCalendarInfo} */ (
    jspb.Message.getWrapperField(this, proto.PbModel.ActivityCalendar.ActivityCalendarInfo, 4));
};


/**
 * @param {?proto.PbModel.ActivityCalendar.ActivityCalendarInfo|undefined} value
 * @return {!proto.PbModel.ActivityCalendar.ActivityCalendarGetInfoRes} returns this
*/
proto.PbModel.ActivityCalendar.ActivityCalendarGetInfoRes.prototype.setNextdata = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.ActivityCalendar.ActivityCalendarGetInfoRes} returns this
 */
proto.PbModel.ActivityCalendar.ActivityCalendarGetInfoRes.prototype.clearNextdata = function() {
  return this.setNextdata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.ActivityCalendar.ActivityCalendarGetInfoRes.prototype.hasNextdata = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.ActivityCalendar.ActivityCalendarInfo.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.ActivityCalendar.ActivityCalendarInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.ActivityCalendar.ActivityCalendarInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.ActivityCalendar.ActivityCalendarInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.ActivityCalendar.ActivityCalendarInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    isnew: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    datemin: jspb.Message.getFieldWithDefault(msg, 2, 0),
    datemax: jspb.Message.getFieldWithDefault(msg, 3, 0),
    activitylistList: jspb.Message.toObjectList(msg.getActivitylistList(),
    proto.PbModel.ActivityCalendar.ActivityCalendarActivityInfo.toObject, includeInstance),
    iconstr: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.ActivityCalendar.ActivityCalendarInfo}
 */
proto.PbModel.ActivityCalendar.ActivityCalendarInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.ActivityCalendar.ActivityCalendarInfo;
  return proto.PbModel.ActivityCalendar.ActivityCalendarInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.ActivityCalendar.ActivityCalendarInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.ActivityCalendar.ActivityCalendarInfo}
 */
proto.PbModel.ActivityCalendar.ActivityCalendarInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsnew(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDatemin(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDatemax(value);
      break;
    case 4:
      var value = new proto.PbModel.ActivityCalendar.ActivityCalendarActivityInfo;
      reader.readMessage(value,proto.PbModel.ActivityCalendar.ActivityCalendarActivityInfo.deserializeBinaryFromReader);
      msg.addActivitylist(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setIconstr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.ActivityCalendar.ActivityCalendarInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.ActivityCalendar.ActivityCalendarInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.ActivityCalendar.ActivityCalendarInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.ActivityCalendar.ActivityCalendarInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIsnew();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getDatemin();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getDatemax();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getActivitylistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.PbModel.ActivityCalendar.ActivityCalendarActivityInfo.serializeBinaryToWriter
    );
  }
  f = message.getIconstr();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional bool IsNew = 1;
 * @return {boolean}
 */
proto.PbModel.ActivityCalendar.ActivityCalendarInfo.prototype.getIsnew = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PbModel.ActivityCalendar.ActivityCalendarInfo} returns this
 */
proto.PbModel.ActivityCalendar.ActivityCalendarInfo.prototype.setIsnew = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional int64 DateMin = 2;
 * @return {number}
 */
proto.PbModel.ActivityCalendar.ActivityCalendarInfo.prototype.getDatemin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.ActivityCalendar.ActivityCalendarInfo} returns this
 */
proto.PbModel.ActivityCalendar.ActivityCalendarInfo.prototype.setDatemin = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 DateMax = 3;
 * @return {number}
 */
proto.PbModel.ActivityCalendar.ActivityCalendarInfo.prototype.getDatemax = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.ActivityCalendar.ActivityCalendarInfo} returns this
 */
proto.PbModel.ActivityCalendar.ActivityCalendarInfo.prototype.setDatemax = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated ActivityCalendarActivityInfo ActivityList = 4;
 * @return {!Array<!proto.PbModel.ActivityCalendar.ActivityCalendarActivityInfo>}
 */
proto.PbModel.ActivityCalendar.ActivityCalendarInfo.prototype.getActivitylistList = function() {
  return /** @type{!Array<!proto.PbModel.ActivityCalendar.ActivityCalendarActivityInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.ActivityCalendar.ActivityCalendarActivityInfo, 4));
};


/**
 * @param {!Array<!proto.PbModel.ActivityCalendar.ActivityCalendarActivityInfo>} value
 * @return {!proto.PbModel.ActivityCalendar.ActivityCalendarInfo} returns this
*/
proto.PbModel.ActivityCalendar.ActivityCalendarInfo.prototype.setActivitylistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.PbModel.ActivityCalendar.ActivityCalendarActivityInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.ActivityCalendar.ActivityCalendarActivityInfo}
 */
proto.PbModel.ActivityCalendar.ActivityCalendarInfo.prototype.addActivitylist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.PbModel.ActivityCalendar.ActivityCalendarActivityInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.ActivityCalendar.ActivityCalendarInfo} returns this
 */
proto.PbModel.ActivityCalendar.ActivityCalendarInfo.prototype.clearActivitylistList = function() {
  return this.setActivitylistList([]);
};


/**
 * optional string IConStr = 5;
 * @return {string}
 */
proto.PbModel.ActivityCalendar.ActivityCalendarInfo.prototype.getIconstr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.ActivityCalendar.ActivityCalendarInfo} returns this
 */
proto.PbModel.ActivityCalendar.ActivityCalendarInfo.prototype.setIconstr = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.ActivityCalendar.ActivityCalendarActivityInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.ActivityCalendar.ActivityCalendarActivityInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.ActivityCalendar.ActivityCalendarActivityInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.ActivityCalendar.ActivityCalendarActivityInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    datemin: jspb.Message.getFieldWithDefault(msg, 2, 0),
    datemax: jspb.Message.getFieldWithDefault(msg, 3, 0),
    activityname: jspb.Message.getFieldWithDefault(msg, 4, ""),
    iconstr: jspb.Message.getFieldWithDefault(msg, 5, ""),
    jumpconstr: jspb.Message.getFieldWithDefault(msg, 6, ""),
    jumpsubid: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.ActivityCalendar.ActivityCalendarActivityInfo}
 */
proto.PbModel.ActivityCalendar.ActivityCalendarActivityInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.ActivityCalendar.ActivityCalendarActivityInfo;
  return proto.PbModel.ActivityCalendar.ActivityCalendarActivityInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.ActivityCalendar.ActivityCalendarActivityInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.ActivityCalendar.ActivityCalendarActivityInfo}
 */
proto.PbModel.ActivityCalendar.ActivityCalendarActivityInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDatemin(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDatemax(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setActivityname(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setIconstr(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setJumpconstr(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setJumpsubid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.ActivityCalendar.ActivityCalendarActivityInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.ActivityCalendar.ActivityCalendarActivityInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.ActivityCalendar.ActivityCalendarActivityInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.ActivityCalendar.ActivityCalendarActivityInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getDatemin();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getDatemax();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getActivityname();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getIconstr();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getJumpconstr();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getJumpsubid();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
};


/**
 * optional int32 Id = 1;
 * @return {number}
 */
proto.PbModel.ActivityCalendar.ActivityCalendarActivityInfo.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.ActivityCalendar.ActivityCalendarActivityInfo} returns this
 */
proto.PbModel.ActivityCalendar.ActivityCalendarActivityInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 DateMin = 2;
 * @return {number}
 */
proto.PbModel.ActivityCalendar.ActivityCalendarActivityInfo.prototype.getDatemin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.ActivityCalendar.ActivityCalendarActivityInfo} returns this
 */
proto.PbModel.ActivityCalendar.ActivityCalendarActivityInfo.prototype.setDatemin = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 DateMax = 3;
 * @return {number}
 */
proto.PbModel.ActivityCalendar.ActivityCalendarActivityInfo.prototype.getDatemax = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.ActivityCalendar.ActivityCalendarActivityInfo} returns this
 */
proto.PbModel.ActivityCalendar.ActivityCalendarActivityInfo.prototype.setDatemax = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string ActivityName = 4;
 * @return {string}
 */
proto.PbModel.ActivityCalendar.ActivityCalendarActivityInfo.prototype.getActivityname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.ActivityCalendar.ActivityCalendarActivityInfo} returns this
 */
proto.PbModel.ActivityCalendar.ActivityCalendarActivityInfo.prototype.setActivityname = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string IConStr = 5;
 * @return {string}
 */
proto.PbModel.ActivityCalendar.ActivityCalendarActivityInfo.prototype.getIconstr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.ActivityCalendar.ActivityCalendarActivityInfo} returns this
 */
proto.PbModel.ActivityCalendar.ActivityCalendarActivityInfo.prototype.setIconstr = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string JumpConStr = 6;
 * @return {string}
 */
proto.PbModel.ActivityCalendar.ActivityCalendarActivityInfo.prototype.getJumpconstr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.ActivityCalendar.ActivityCalendarActivityInfo} returns this
 */
proto.PbModel.ActivityCalendar.ActivityCalendarActivityInfo.prototype.setJumpconstr = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int32 JumpSubId = 7;
 * @return {number}
 */
proto.PbModel.ActivityCalendar.ActivityCalendarActivityInfo.prototype.getJumpsubid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.ActivityCalendar.ActivityCalendarActivityInfo} returns this
 */
proto.PbModel.ActivityCalendar.ActivityCalendarActivityInfo.prototype.setJumpsubid = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


goog.object.extend(exports, proto.PbModel.ActivityCalendar);
