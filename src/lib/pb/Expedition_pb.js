// source: Expedition.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var Resource_pb = require('./Resource_pb.js');
goog.object.extend(proto, Resource_pb);
var Fight_pb = require('./Fight_pb.js');
goog.object.extend(proto, Fight_pb);
var Team_pb = require('./Team_pb.js');
goog.object.extend(proto, Team_pb);
var Player_pb = require('./Player_pb.js');
goog.object.extend(proto, Player_pb);
goog.exportSymbol('proto.PbModel.Expedition.ExpeditionBossFightReq', null, global);
goog.exportSymbol('proto.PbModel.Expedition.ExpeditionBossFightRes', null, global);
goog.exportSymbol('proto.PbModel.Expedition.ExpeditionBossRankModel', null, global);
goog.exportSymbol('proto.PbModel.Expedition.ExpeditionChoiceBuffReq', null, global);
goog.exportSymbol('proto.PbModel.Expedition.ExpeditionChoiceBuffRes', null, global);
goog.exportSymbol('proto.PbModel.Expedition.ExpeditionGetHeroStatusInfoReq', null, global);
goog.exportSymbol('proto.PbModel.Expedition.ExpeditionGetHeroStatusInfoRes', null, global);
goog.exportSymbol('proto.PbModel.Expedition.ExpeditionGetHpGoodsReq', null, global);
goog.exportSymbol('proto.PbModel.Expedition.ExpeditionGetHpGoodsRes', null, global);
goog.exportSymbol('proto.PbModel.Expedition.ExpeditionGetInfoReq', null, global);
goog.exportSymbol('proto.PbModel.Expedition.ExpeditionGetInfoRes', null, global);
goog.exportSymbol('proto.PbModel.Expedition.ExpeditionGetNodeFightInfoReq', null, global);
goog.exportSymbol('proto.PbModel.Expedition.ExpeditionGetNodeFightInfoRes', null, global);
goog.exportSymbol('proto.PbModel.Expedition.ExpeditionGetNpcStatusInfoReq', null, global);
goog.exportSymbol('proto.PbModel.Expedition.ExpeditionGetNpcStatusInfoRes', null, global);
goog.exportSymbol('proto.PbModel.Expedition.ExpeditionGetRankInfoReq', null, global);
goog.exportSymbol('proto.PbModel.Expedition.ExpeditionGetRankInfoRes', null, global);
goog.exportSymbol('proto.PbModel.Expedition.ExpeditionGetReportInfo', null, global);
goog.exportSymbol('proto.PbModel.Expedition.ExpeditionGetReportInfoReq', null, global);
goog.exportSymbol('proto.PbModel.Expedition.ExpeditionGetReportInfoRes', null, global);
goog.exportSymbol('proto.PbModel.Expedition.ExpeditionGetShopInfoReq', null, global);
goog.exportSymbol('proto.PbModel.Expedition.ExpeditionGetShopInfoRes', null, global);
goog.exportSymbol('proto.PbModel.Expedition.ExpeditionMopUpReq', null, global);
goog.exportSymbol('proto.PbModel.Expedition.ExpeditionMopUpRes', null, global);
goog.exportSymbol('proto.PbModel.Expedition.ExpeditionNodeFightReq', null, global);
goog.exportSymbol('proto.PbModel.Expedition.ExpeditionNodeFightRes', null, global);
goog.exportSymbol('proto.PbModel.Expedition.ExpeditionPushInfoRes', null, global);
goog.exportSymbol('proto.PbModel.Expedition.ExpeditionRandomBuffReq', null, global);
goog.exportSymbol('proto.PbModel.Expedition.ExpeditionRandomBuffRes', null, global);
goog.exportSymbol('proto.PbModel.Expedition.ExpeditionReceiveAccumulateReq', null, global);
goog.exportSymbol('proto.PbModel.Expedition.ExpeditionReceiveAccumulateRes', null, global);
goog.exportSymbol('proto.PbModel.Expedition.ExpeditionReceiveAchieveReq', null, global);
goog.exportSymbol('proto.PbModel.Expedition.ExpeditionReceiveAchieveRes', null, global);
goog.exportSymbol('proto.PbModel.Expedition.ExpeditionShopBuyReq', null, global);
goog.exportSymbol('proto.PbModel.Expedition.ExpeditionShopBuyRes', null, global);
goog.exportSymbol('proto.PbModel.Expedition.ExpeditionTeamInfoModel', null, global);
goog.exportSymbol('proto.PbModel.Expedition.ExpeditionUseHpGoodsReq', null, global);
goog.exportSymbol('proto.PbModel.Expedition.ExpeditionUseHpGoodsRes', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Expedition.ExpeditionBossFightReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Expedition.ExpeditionBossFightReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Expedition.ExpeditionBossFightReq.displayName = 'proto.PbModel.Expedition.ExpeditionBossFightReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Expedition.ExpeditionBossFightRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Expedition.ExpeditionBossFightRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Expedition.ExpeditionBossFightRes.displayName = 'proto.PbModel.Expedition.ExpeditionBossFightRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Expedition.ExpeditionChoiceBuffReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Expedition.ExpeditionChoiceBuffReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Expedition.ExpeditionChoiceBuffReq.displayName = 'proto.PbModel.Expedition.ExpeditionChoiceBuffReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Expedition.ExpeditionChoiceBuffRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Expedition.ExpeditionChoiceBuffRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Expedition.ExpeditionChoiceBuffRes.displayName = 'proto.PbModel.Expedition.ExpeditionChoiceBuffRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Expedition.ExpeditionGetHeroStatusInfoReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Expedition.ExpeditionGetHeroStatusInfoReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Expedition.ExpeditionGetHeroStatusInfoReq.displayName = 'proto.PbModel.Expedition.ExpeditionGetHeroStatusInfoReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Expedition.ExpeditionGetHeroStatusInfoRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Expedition.ExpeditionGetHeroStatusInfoRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Expedition.ExpeditionGetHeroStatusInfoRes.displayName = 'proto.PbModel.Expedition.ExpeditionGetHeroStatusInfoRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Expedition.ExpeditionGetHpGoodsReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Expedition.ExpeditionGetHpGoodsReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Expedition.ExpeditionGetHpGoodsReq.displayName = 'proto.PbModel.Expedition.ExpeditionGetHpGoodsReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Expedition.ExpeditionGetHpGoodsRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Expedition.ExpeditionGetHpGoodsRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Expedition.ExpeditionGetHpGoodsRes.displayName = 'proto.PbModel.Expedition.ExpeditionGetHpGoodsRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Expedition.ExpeditionGetInfoReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Expedition.ExpeditionGetInfoReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Expedition.ExpeditionGetInfoReq.displayName = 'proto.PbModel.Expedition.ExpeditionGetInfoReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Expedition.ExpeditionGetInfoRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Expedition.ExpeditionGetInfoRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Expedition.ExpeditionGetInfoRes.displayName = 'proto.PbModel.Expedition.ExpeditionGetInfoRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Expedition.ExpeditionGetNodeFightInfoReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.Expedition.ExpeditionGetNodeFightInfoReq.repeatedFields_, null);
};
goog.inherits(proto.PbModel.Expedition.ExpeditionGetNodeFightInfoReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Expedition.ExpeditionGetNodeFightInfoReq.displayName = 'proto.PbModel.Expedition.ExpeditionGetNodeFightInfoReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Expedition.ExpeditionGetNodeFightInfoRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.Expedition.ExpeditionGetNodeFightInfoRes.repeatedFields_, null);
};
goog.inherits(proto.PbModel.Expedition.ExpeditionGetNodeFightInfoRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Expedition.ExpeditionGetNodeFightInfoRes.displayName = 'proto.PbModel.Expedition.ExpeditionGetNodeFightInfoRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Expedition.ExpeditionGetNpcStatusInfoReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Expedition.ExpeditionGetNpcStatusInfoReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Expedition.ExpeditionGetNpcStatusInfoReq.displayName = 'proto.PbModel.Expedition.ExpeditionGetNpcStatusInfoReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Expedition.ExpeditionGetNpcStatusInfoRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Expedition.ExpeditionGetNpcStatusInfoRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Expedition.ExpeditionGetNpcStatusInfoRes.displayName = 'proto.PbModel.Expedition.ExpeditionGetNpcStatusInfoRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Expedition.ExpeditionGetRankInfoReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Expedition.ExpeditionGetRankInfoReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Expedition.ExpeditionGetRankInfoReq.displayName = 'proto.PbModel.Expedition.ExpeditionGetRankInfoReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Expedition.ExpeditionGetRankInfoRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.Expedition.ExpeditionGetRankInfoRes.repeatedFields_, null);
};
goog.inherits(proto.PbModel.Expedition.ExpeditionGetRankInfoRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Expedition.ExpeditionGetRankInfoRes.displayName = 'proto.PbModel.Expedition.ExpeditionGetRankInfoRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Expedition.ExpeditionBossRankModel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.Expedition.ExpeditionBossRankModel.repeatedFields_, null);
};
goog.inherits(proto.PbModel.Expedition.ExpeditionBossRankModel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Expedition.ExpeditionBossRankModel.displayName = 'proto.PbModel.Expedition.ExpeditionBossRankModel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Expedition.ExpeditionTeamInfoModel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Expedition.ExpeditionTeamInfoModel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Expedition.ExpeditionTeamInfoModel.displayName = 'proto.PbModel.Expedition.ExpeditionTeamInfoModel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Expedition.ExpeditionGetReportInfoReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Expedition.ExpeditionGetReportInfoReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Expedition.ExpeditionGetReportInfoReq.displayName = 'proto.PbModel.Expedition.ExpeditionGetReportInfoReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Expedition.ExpeditionGetReportInfoRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.Expedition.ExpeditionGetReportInfoRes.repeatedFields_, null);
};
goog.inherits(proto.PbModel.Expedition.ExpeditionGetReportInfoRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Expedition.ExpeditionGetReportInfoRes.displayName = 'proto.PbModel.Expedition.ExpeditionGetReportInfoRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Expedition.ExpeditionGetReportInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Expedition.ExpeditionGetReportInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Expedition.ExpeditionGetReportInfo.displayName = 'proto.PbModel.Expedition.ExpeditionGetReportInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Expedition.ExpeditionGetShopInfoReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Expedition.ExpeditionGetShopInfoReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Expedition.ExpeditionGetShopInfoReq.displayName = 'proto.PbModel.Expedition.ExpeditionGetShopInfoReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Expedition.ExpeditionGetShopInfoRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Expedition.ExpeditionGetShopInfoRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Expedition.ExpeditionGetShopInfoRes.displayName = 'proto.PbModel.Expedition.ExpeditionGetShopInfoRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Expedition.ExpeditionMopUpReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Expedition.ExpeditionMopUpReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Expedition.ExpeditionMopUpReq.displayName = 'proto.PbModel.Expedition.ExpeditionMopUpReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Expedition.ExpeditionMopUpRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Expedition.ExpeditionMopUpRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Expedition.ExpeditionMopUpRes.displayName = 'proto.PbModel.Expedition.ExpeditionMopUpRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Expedition.ExpeditionNodeFightReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Expedition.ExpeditionNodeFightReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Expedition.ExpeditionNodeFightReq.displayName = 'proto.PbModel.Expedition.ExpeditionNodeFightReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Expedition.ExpeditionNodeFightRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Expedition.ExpeditionNodeFightRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Expedition.ExpeditionNodeFightRes.displayName = 'proto.PbModel.Expedition.ExpeditionNodeFightRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Expedition.ExpeditionRandomBuffReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Expedition.ExpeditionRandomBuffReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Expedition.ExpeditionRandomBuffReq.displayName = 'proto.PbModel.Expedition.ExpeditionRandomBuffReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Expedition.ExpeditionRandomBuffRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Expedition.ExpeditionRandomBuffRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Expedition.ExpeditionRandomBuffRes.displayName = 'proto.PbModel.Expedition.ExpeditionRandomBuffRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Expedition.ExpeditionReceiveAccumulateReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Expedition.ExpeditionReceiveAccumulateReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Expedition.ExpeditionReceiveAccumulateReq.displayName = 'proto.PbModel.Expedition.ExpeditionReceiveAccumulateReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Expedition.ExpeditionReceiveAccumulateRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Expedition.ExpeditionReceiveAccumulateRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Expedition.ExpeditionReceiveAccumulateRes.displayName = 'proto.PbModel.Expedition.ExpeditionReceiveAccumulateRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Expedition.ExpeditionReceiveAchieveReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Expedition.ExpeditionReceiveAchieveReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Expedition.ExpeditionReceiveAchieveReq.displayName = 'proto.PbModel.Expedition.ExpeditionReceiveAchieveReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Expedition.ExpeditionReceiveAchieveRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Expedition.ExpeditionReceiveAchieveRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Expedition.ExpeditionReceiveAchieveRes.displayName = 'proto.PbModel.Expedition.ExpeditionReceiveAchieveRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Expedition.ExpeditionShopBuyReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Expedition.ExpeditionShopBuyReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Expedition.ExpeditionShopBuyReq.displayName = 'proto.PbModel.Expedition.ExpeditionShopBuyReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Expedition.ExpeditionShopBuyRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Expedition.ExpeditionShopBuyRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Expedition.ExpeditionShopBuyRes.displayName = 'proto.PbModel.Expedition.ExpeditionShopBuyRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Expedition.ExpeditionUseHpGoodsReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Expedition.ExpeditionUseHpGoodsReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Expedition.ExpeditionUseHpGoodsReq.displayName = 'proto.PbModel.Expedition.ExpeditionUseHpGoodsReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Expedition.ExpeditionUseHpGoodsRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Expedition.ExpeditionUseHpGoodsRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Expedition.ExpeditionUseHpGoodsRes.displayName = 'proto.PbModel.Expedition.ExpeditionUseHpGoodsRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Expedition.ExpeditionPushInfoRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Expedition.ExpeditionPushInfoRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Expedition.ExpeditionPushInfoRes.displayName = 'proto.PbModel.Expedition.ExpeditionPushInfoRes';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Expedition.ExpeditionBossFightReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Expedition.ExpeditionBossFightReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Expedition.ExpeditionBossFightReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionBossFightReq.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Expedition.ExpeditionBossFightReq}
 */
proto.PbModel.Expedition.ExpeditionBossFightReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Expedition.ExpeditionBossFightReq;
  return proto.PbModel.Expedition.ExpeditionBossFightReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Expedition.ExpeditionBossFightReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Expedition.ExpeditionBossFightReq}
 */
proto.PbModel.Expedition.ExpeditionBossFightReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Expedition.ExpeditionBossFightReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Expedition.ExpeditionBossFightReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Expedition.ExpeditionBossFightReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionBossFightReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Expedition.ExpeditionBossFightRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Expedition.ExpeditionBossFightRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Expedition.ExpeditionBossFightRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionBossFightRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    basegetgameresourcelist: (f = msg.getBasegetgameresourcelist()) && Resource_pb.ResourceToClientModel.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Expedition.ExpeditionBossFightRes}
 */
proto.PbModel.Expedition.ExpeditionBossFightRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Expedition.ExpeditionBossFightRes;
  return proto.PbModel.Expedition.ExpeditionBossFightRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Expedition.ExpeditionBossFightRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Expedition.ExpeditionBossFightRes}
 */
proto.PbModel.Expedition.ExpeditionBossFightRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new Resource_pb.ResourceToClientModel;
      reader.readMessage(value,Resource_pb.ResourceToClientModel.deserializeBinaryFromReader);
      msg.setBasegetgameresourcelist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Expedition.ExpeditionBossFightRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Expedition.ExpeditionBossFightRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Expedition.ExpeditionBossFightRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionBossFightRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBasegetgameresourcelist();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      Resource_pb.ResourceToClientModel.serializeBinaryToWriter
    );
  }
};


/**
 * optional PbModel.Resource.ResourceToClientModel BaseGetGameResourceList = 1;
 * @return {?proto.PbModel.Resource.ResourceToClientModel}
 */
proto.PbModel.Expedition.ExpeditionBossFightRes.prototype.getBasegetgameresourcelist = function() {
  return /** @type{?proto.PbModel.Resource.ResourceToClientModel} */ (
    jspb.Message.getWrapperField(this, Resource_pb.ResourceToClientModel, 1));
};


/**
 * @param {?proto.PbModel.Resource.ResourceToClientModel|undefined} value
 * @return {!proto.PbModel.Expedition.ExpeditionBossFightRes} returns this
*/
proto.PbModel.Expedition.ExpeditionBossFightRes.prototype.setBasegetgameresourcelist = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.Expedition.ExpeditionBossFightRes} returns this
 */
proto.PbModel.Expedition.ExpeditionBossFightRes.prototype.clearBasegetgameresourcelist = function() {
  return this.setBasegetgameresourcelist(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.Expedition.ExpeditionBossFightRes.prototype.hasBasegetgameresourcelist = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Expedition.ExpeditionChoiceBuffReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Expedition.ExpeditionChoiceBuffReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Expedition.ExpeditionChoiceBuffReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionChoiceBuffReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodeid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    buffid: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Expedition.ExpeditionChoiceBuffReq}
 */
proto.PbModel.Expedition.ExpeditionChoiceBuffReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Expedition.ExpeditionChoiceBuffReq;
  return proto.PbModel.Expedition.ExpeditionChoiceBuffReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Expedition.ExpeditionChoiceBuffReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Expedition.ExpeditionChoiceBuffReq}
 */
proto.PbModel.Expedition.ExpeditionChoiceBuffReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNodeid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBuffid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Expedition.ExpeditionChoiceBuffReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Expedition.ExpeditionChoiceBuffReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Expedition.ExpeditionChoiceBuffReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionChoiceBuffReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodeid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getBuffid();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 NodeId = 1;
 * @return {number}
 */
proto.PbModel.Expedition.ExpeditionChoiceBuffReq.prototype.getNodeid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Expedition.ExpeditionChoiceBuffReq} returns this
 */
proto.PbModel.Expedition.ExpeditionChoiceBuffReq.prototype.setNodeid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 BuffId = 2;
 * @return {number}
 */
proto.PbModel.Expedition.ExpeditionChoiceBuffReq.prototype.getBuffid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Expedition.ExpeditionChoiceBuffReq} returns this
 */
proto.PbModel.Expedition.ExpeditionChoiceBuffReq.prototype.setBuffid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Expedition.ExpeditionChoiceBuffRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Expedition.ExpeditionChoiceBuffRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Expedition.ExpeditionChoiceBuffRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionChoiceBuffRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    passnodeinfo: jspb.Message.getFieldWithDefault(msg, 1, ""),
    curpassnodeid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    curbuff: jspb.Message.getFieldWithDefault(msg, 3, ""),
    buffgroupnuminfos: jspb.Message.getFieldWithDefault(msg, 4, ""),
    passcount: jspb.Message.getFieldWithDefault(msg, 5, 0),
    bossisopen: jspb.Message.getBooleanFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Expedition.ExpeditionChoiceBuffRes}
 */
proto.PbModel.Expedition.ExpeditionChoiceBuffRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Expedition.ExpeditionChoiceBuffRes;
  return proto.PbModel.Expedition.ExpeditionChoiceBuffRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Expedition.ExpeditionChoiceBuffRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Expedition.ExpeditionChoiceBuffRes}
 */
proto.PbModel.Expedition.ExpeditionChoiceBuffRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassnodeinfo(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCurpassnodeid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurbuff(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuffgroupnuminfos(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPasscount(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBossisopen(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Expedition.ExpeditionChoiceBuffRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Expedition.ExpeditionChoiceBuffRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Expedition.ExpeditionChoiceBuffRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionChoiceBuffRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPassnodeinfo();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCurpassnodeid();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getCurbuff();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBuffgroupnuminfos();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPasscount();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getBossisopen();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional string PassNodeInfo = 1;
 * @return {string}
 */
proto.PbModel.Expedition.ExpeditionChoiceBuffRes.prototype.getPassnodeinfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Expedition.ExpeditionChoiceBuffRes} returns this
 */
proto.PbModel.Expedition.ExpeditionChoiceBuffRes.prototype.setPassnodeinfo = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 CurPassNodeId = 2;
 * @return {number}
 */
proto.PbModel.Expedition.ExpeditionChoiceBuffRes.prototype.getCurpassnodeid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Expedition.ExpeditionChoiceBuffRes} returns this
 */
proto.PbModel.Expedition.ExpeditionChoiceBuffRes.prototype.setCurpassnodeid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string CurBuff = 3;
 * @return {string}
 */
proto.PbModel.Expedition.ExpeditionChoiceBuffRes.prototype.getCurbuff = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Expedition.ExpeditionChoiceBuffRes} returns this
 */
proto.PbModel.Expedition.ExpeditionChoiceBuffRes.prototype.setCurbuff = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string BuffGroupNumInfos = 4;
 * @return {string}
 */
proto.PbModel.Expedition.ExpeditionChoiceBuffRes.prototype.getBuffgroupnuminfos = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Expedition.ExpeditionChoiceBuffRes} returns this
 */
proto.PbModel.Expedition.ExpeditionChoiceBuffRes.prototype.setBuffgroupnuminfos = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 PassCount = 5;
 * @return {number}
 */
proto.PbModel.Expedition.ExpeditionChoiceBuffRes.prototype.getPasscount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Expedition.ExpeditionChoiceBuffRes} returns this
 */
proto.PbModel.Expedition.ExpeditionChoiceBuffRes.prototype.setPasscount = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional bool BossIsOpen = 6;
 * @return {boolean}
 */
proto.PbModel.Expedition.ExpeditionChoiceBuffRes.prototype.getBossisopen = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PbModel.Expedition.ExpeditionChoiceBuffRes} returns this
 */
proto.PbModel.Expedition.ExpeditionChoiceBuffRes.prototype.setBossisopen = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Expedition.ExpeditionGetHeroStatusInfoReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Expedition.ExpeditionGetHeroStatusInfoReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Expedition.ExpeditionGetHeroStatusInfoReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionGetHeroStatusInfoReq.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Expedition.ExpeditionGetHeroStatusInfoReq}
 */
proto.PbModel.Expedition.ExpeditionGetHeroStatusInfoReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Expedition.ExpeditionGetHeroStatusInfoReq;
  return proto.PbModel.Expedition.ExpeditionGetHeroStatusInfoReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Expedition.ExpeditionGetHeroStatusInfoReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Expedition.ExpeditionGetHeroStatusInfoReq}
 */
proto.PbModel.Expedition.ExpeditionGetHeroStatusInfoReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Expedition.ExpeditionGetHeroStatusInfoReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Expedition.ExpeditionGetHeroStatusInfoReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Expedition.ExpeditionGetHeroStatusInfoReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionGetHeroStatusInfoReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Expedition.ExpeditionGetHeroStatusInfoRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Expedition.ExpeditionGetHeroStatusInfoRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Expedition.ExpeditionGetHeroStatusInfoRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionGetHeroStatusInfoRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    hpcount: jspb.Message.getFieldWithDefault(msg, 1, 0),
    infosMap: (f = msg.getInfosMap()) ? f.toObject(includeInstance, proto.PbModel.Fight.FightRemainHp.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Expedition.ExpeditionGetHeroStatusInfoRes}
 */
proto.PbModel.Expedition.ExpeditionGetHeroStatusInfoRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Expedition.ExpeditionGetHeroStatusInfoRes;
  return proto.PbModel.Expedition.ExpeditionGetHeroStatusInfoRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Expedition.ExpeditionGetHeroStatusInfoRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Expedition.ExpeditionGetHeroStatusInfoRes}
 */
proto.PbModel.Expedition.ExpeditionGetHeroStatusInfoRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHpcount(value);
      break;
    case 2:
      var value = msg.getInfosMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.PbModel.Fight.FightRemainHp.deserializeBinaryFromReader, "", new proto.PbModel.Fight.FightRemainHp());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Expedition.ExpeditionGetHeroStatusInfoRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Expedition.ExpeditionGetHeroStatusInfoRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Expedition.ExpeditionGetHeroStatusInfoRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionGetHeroStatusInfoRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHpcount();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getInfosMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.PbModel.Fight.FightRemainHp.serializeBinaryToWriter);
  }
};


/**
 * optional int32 HPCount = 1;
 * @return {number}
 */
proto.PbModel.Expedition.ExpeditionGetHeroStatusInfoRes.prototype.getHpcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Expedition.ExpeditionGetHeroStatusInfoRes} returns this
 */
proto.PbModel.Expedition.ExpeditionGetHeroStatusInfoRes.prototype.setHpcount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * map<string, PbModel.Fight.FightRemainHp> Infos = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.PbModel.Fight.FightRemainHp>}
 */
proto.PbModel.Expedition.ExpeditionGetHeroStatusInfoRes.prototype.getInfosMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.PbModel.Fight.FightRemainHp>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      proto.PbModel.Fight.FightRemainHp));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.PbModel.Expedition.ExpeditionGetHeroStatusInfoRes} returns this
 */
proto.PbModel.Expedition.ExpeditionGetHeroStatusInfoRes.prototype.clearInfosMap = function() {
  this.getInfosMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Expedition.ExpeditionGetHpGoodsReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Expedition.ExpeditionGetHpGoodsReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Expedition.ExpeditionGetHpGoodsReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionGetHpGoodsReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    num: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Expedition.ExpeditionGetHpGoodsReq}
 */
proto.PbModel.Expedition.ExpeditionGetHpGoodsReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Expedition.ExpeditionGetHpGoodsReq;
  return proto.PbModel.Expedition.ExpeditionGetHpGoodsReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Expedition.ExpeditionGetHpGoodsReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Expedition.ExpeditionGetHpGoodsReq}
 */
proto.PbModel.Expedition.ExpeditionGetHpGoodsReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Expedition.ExpeditionGetHpGoodsReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Expedition.ExpeditionGetHpGoodsReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Expedition.ExpeditionGetHpGoodsReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionGetHpGoodsReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNum();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 Num = 1;
 * @return {number}
 */
proto.PbModel.Expedition.ExpeditionGetHpGoodsReq.prototype.getNum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Expedition.ExpeditionGetHpGoodsReq} returns this
 */
proto.PbModel.Expedition.ExpeditionGetHpGoodsReq.prototype.setNum = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Expedition.ExpeditionGetHpGoodsRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Expedition.ExpeditionGetHpGoodsRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Expedition.ExpeditionGetHpGoodsRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionGetHpGoodsRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    hpcount: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Expedition.ExpeditionGetHpGoodsRes}
 */
proto.PbModel.Expedition.ExpeditionGetHpGoodsRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Expedition.ExpeditionGetHpGoodsRes;
  return proto.PbModel.Expedition.ExpeditionGetHpGoodsRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Expedition.ExpeditionGetHpGoodsRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Expedition.ExpeditionGetHpGoodsRes}
 */
proto.PbModel.Expedition.ExpeditionGetHpGoodsRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHpcount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Expedition.ExpeditionGetHpGoodsRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Expedition.ExpeditionGetHpGoodsRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Expedition.ExpeditionGetHpGoodsRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionGetHpGoodsRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHpcount();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 HPCount = 1;
 * @return {number}
 */
proto.PbModel.Expedition.ExpeditionGetHpGoodsRes.prototype.getHpcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Expedition.ExpeditionGetHpGoodsRes} returns this
 */
proto.PbModel.Expedition.ExpeditionGetHpGoodsRes.prototype.setHpcount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Expedition.ExpeditionGetInfoReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Expedition.ExpeditionGetInfoReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Expedition.ExpeditionGetInfoReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionGetInfoReq.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Expedition.ExpeditionGetInfoReq}
 */
proto.PbModel.Expedition.ExpeditionGetInfoReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Expedition.ExpeditionGetInfoReq;
  return proto.PbModel.Expedition.ExpeditionGetInfoReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Expedition.ExpeditionGetInfoReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Expedition.ExpeditionGetInfoReq}
 */
proto.PbModel.Expedition.ExpeditionGetInfoReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Expedition.ExpeditionGetInfoReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Expedition.ExpeditionGetInfoReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Expedition.ExpeditionGetInfoReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionGetInfoReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Expedition.ExpeditionGetInfoRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Expedition.ExpeditionGetInfoRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Expedition.ExpeditionGetInfoRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionGetInfoRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    bossid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    dateid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    curmaxdamage: jspb.Message.getFieldWithDefault(msg, 3, 0),
    damagerawardid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    bossrawardsstr: jspb.Message.getFieldWithDefault(msg, 5, ""),
    curshowstage: jspb.Message.getFieldWithDefault(msg, 6, 0),
    bossisopen: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    mopupisopen: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    nodeinfo: jspb.Message.getFieldWithDefault(msg, 9, ""),
    passnodeinfo: jspb.Message.getFieldWithDefault(msg, 10, ""),
    curpassnodeid: jspb.Message.getFieldWithDefault(msg, 11, 0),
    curbuff: jspb.Message.getFieldWithDefault(msg, 12, ""),
    buffgroupnuminfos: jspb.Message.getFieldWithDefault(msg, 13, ""),
    passcount: jspb.Message.getFieldWithDefault(msg, 14, 0),
    hpcount: jspb.Message.getFieldWithDefault(msg, 15, 0),
    getachieveids: jspb.Message.getFieldWithDefault(msg, 16, ""),
    nextrefreshtime: jspb.Message.getFieldWithDefault(msg, 17, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Expedition.ExpeditionGetInfoRes}
 */
proto.PbModel.Expedition.ExpeditionGetInfoRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Expedition.ExpeditionGetInfoRes;
  return proto.PbModel.Expedition.ExpeditionGetInfoRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Expedition.ExpeditionGetInfoRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Expedition.ExpeditionGetInfoRes}
 */
proto.PbModel.Expedition.ExpeditionGetInfoRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBossid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDateid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCurmaxdamage(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDamagerawardid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setBossrawardsstr(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCurshowstage(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBossisopen(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMopupisopen(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setNodeinfo(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassnodeinfo(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCurpassnodeid(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurbuff(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuffgroupnuminfos(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPasscount(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHpcount(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setGetachieveids(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNextrefreshtime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Expedition.ExpeditionGetInfoRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Expedition.ExpeditionGetInfoRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Expedition.ExpeditionGetInfoRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionGetInfoRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBossid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getDateid();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getCurmaxdamage();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getDamagerawardid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getBossrawardsstr();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCurshowstage();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getBossisopen();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getMopupisopen();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getNodeinfo();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getPassnodeinfo();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getCurpassnodeid();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getCurbuff();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getBuffgroupnuminfos();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getPasscount();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getHpcount();
  if (f !== 0) {
    writer.writeInt32(
      15,
      f
    );
  }
  f = message.getGetachieveids();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getNextrefreshtime();
  if (f !== 0) {
    writer.writeInt64(
      17,
      f
    );
  }
};


/**
 * optional int32 BossId = 1;
 * @return {number}
 */
proto.PbModel.Expedition.ExpeditionGetInfoRes.prototype.getBossid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Expedition.ExpeditionGetInfoRes} returns this
 */
proto.PbModel.Expedition.ExpeditionGetInfoRes.prototype.setBossid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 DateId = 2;
 * @return {number}
 */
proto.PbModel.Expedition.ExpeditionGetInfoRes.prototype.getDateid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Expedition.ExpeditionGetInfoRes} returns this
 */
proto.PbModel.Expedition.ExpeditionGetInfoRes.prototype.setDateid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 CurMaxDamage = 3;
 * @return {number}
 */
proto.PbModel.Expedition.ExpeditionGetInfoRes.prototype.getCurmaxdamage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Expedition.ExpeditionGetInfoRes} returns this
 */
proto.PbModel.Expedition.ExpeditionGetInfoRes.prototype.setCurmaxdamage = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string DamageRawardId = 4;
 * @return {string}
 */
proto.PbModel.Expedition.ExpeditionGetInfoRes.prototype.getDamagerawardid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Expedition.ExpeditionGetInfoRes} returns this
 */
proto.PbModel.Expedition.ExpeditionGetInfoRes.prototype.setDamagerawardid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string BossRawardsStr = 5;
 * @return {string}
 */
proto.PbModel.Expedition.ExpeditionGetInfoRes.prototype.getBossrawardsstr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Expedition.ExpeditionGetInfoRes} returns this
 */
proto.PbModel.Expedition.ExpeditionGetInfoRes.prototype.setBossrawardsstr = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int32 CurShowStage = 6;
 * @return {number}
 */
proto.PbModel.Expedition.ExpeditionGetInfoRes.prototype.getCurshowstage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Expedition.ExpeditionGetInfoRes} returns this
 */
proto.PbModel.Expedition.ExpeditionGetInfoRes.prototype.setCurshowstage = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional bool BossIsOpen = 7;
 * @return {boolean}
 */
proto.PbModel.Expedition.ExpeditionGetInfoRes.prototype.getBossisopen = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PbModel.Expedition.ExpeditionGetInfoRes} returns this
 */
proto.PbModel.Expedition.ExpeditionGetInfoRes.prototype.setBossisopen = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional bool MopUpIsOpen = 8;
 * @return {boolean}
 */
proto.PbModel.Expedition.ExpeditionGetInfoRes.prototype.getMopupisopen = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PbModel.Expedition.ExpeditionGetInfoRes} returns this
 */
proto.PbModel.Expedition.ExpeditionGetInfoRes.prototype.setMopupisopen = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional string NodeInfo = 9;
 * @return {string}
 */
proto.PbModel.Expedition.ExpeditionGetInfoRes.prototype.getNodeinfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Expedition.ExpeditionGetInfoRes} returns this
 */
proto.PbModel.Expedition.ExpeditionGetInfoRes.prototype.setNodeinfo = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string PassNodeInfo = 10;
 * @return {string}
 */
proto.PbModel.Expedition.ExpeditionGetInfoRes.prototype.getPassnodeinfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Expedition.ExpeditionGetInfoRes} returns this
 */
proto.PbModel.Expedition.ExpeditionGetInfoRes.prototype.setPassnodeinfo = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional int32 CurPassNodeId = 11;
 * @return {number}
 */
proto.PbModel.Expedition.ExpeditionGetInfoRes.prototype.getCurpassnodeid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Expedition.ExpeditionGetInfoRes} returns this
 */
proto.PbModel.Expedition.ExpeditionGetInfoRes.prototype.setCurpassnodeid = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional string CurBuff = 12;
 * @return {string}
 */
proto.PbModel.Expedition.ExpeditionGetInfoRes.prototype.getCurbuff = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Expedition.ExpeditionGetInfoRes} returns this
 */
proto.PbModel.Expedition.ExpeditionGetInfoRes.prototype.setCurbuff = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string BuffGroupNumInfos = 13;
 * @return {string}
 */
proto.PbModel.Expedition.ExpeditionGetInfoRes.prototype.getBuffgroupnuminfos = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Expedition.ExpeditionGetInfoRes} returns this
 */
proto.PbModel.Expedition.ExpeditionGetInfoRes.prototype.setBuffgroupnuminfos = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional int32 PassCount = 14;
 * @return {number}
 */
proto.PbModel.Expedition.ExpeditionGetInfoRes.prototype.getPasscount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Expedition.ExpeditionGetInfoRes} returns this
 */
proto.PbModel.Expedition.ExpeditionGetInfoRes.prototype.setPasscount = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional int32 HPCount = 15;
 * @return {number}
 */
proto.PbModel.Expedition.ExpeditionGetInfoRes.prototype.getHpcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Expedition.ExpeditionGetInfoRes} returns this
 */
proto.PbModel.Expedition.ExpeditionGetInfoRes.prototype.setHpcount = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * optional string GetAchieveIds = 16;
 * @return {string}
 */
proto.PbModel.Expedition.ExpeditionGetInfoRes.prototype.getGetachieveids = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Expedition.ExpeditionGetInfoRes} returns this
 */
proto.PbModel.Expedition.ExpeditionGetInfoRes.prototype.setGetachieveids = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional int64 NextRefreshTime = 17;
 * @return {number}
 */
proto.PbModel.Expedition.ExpeditionGetInfoRes.prototype.getNextrefreshtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Expedition.ExpeditionGetInfoRes} returns this
 */
proto.PbModel.Expedition.ExpeditionGetInfoRes.prototype.setNextrefreshtime = function(value) {
  return jspb.Message.setProto3IntField(this, 17, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.Expedition.ExpeditionGetNodeFightInfoReq.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Expedition.ExpeditionGetNodeFightInfoReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Expedition.ExpeditionGetNodeFightInfoReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Expedition.ExpeditionGetNodeFightInfoReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionGetNodeFightInfoReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodeid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    teamlistList: jspb.Message.toObjectList(msg.getTeamlistList(),
    Team_pb.Team.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Expedition.ExpeditionGetNodeFightInfoReq}
 */
proto.PbModel.Expedition.ExpeditionGetNodeFightInfoReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Expedition.ExpeditionGetNodeFightInfoReq;
  return proto.PbModel.Expedition.ExpeditionGetNodeFightInfoReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Expedition.ExpeditionGetNodeFightInfoReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Expedition.ExpeditionGetNodeFightInfoReq}
 */
proto.PbModel.Expedition.ExpeditionGetNodeFightInfoReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNodeid(value);
      break;
    case 2:
      var value = new Team_pb.Team;
      reader.readMessage(value,Team_pb.Team.deserializeBinaryFromReader);
      msg.addTeamlist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Expedition.ExpeditionGetNodeFightInfoReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Expedition.ExpeditionGetNodeFightInfoReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Expedition.ExpeditionGetNodeFightInfoReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionGetNodeFightInfoReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodeid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTeamlistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      Team_pb.Team.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 NodeId = 1;
 * @return {number}
 */
proto.PbModel.Expedition.ExpeditionGetNodeFightInfoReq.prototype.getNodeid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Expedition.ExpeditionGetNodeFightInfoReq} returns this
 */
proto.PbModel.Expedition.ExpeditionGetNodeFightInfoReq.prototype.setNodeid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated PbModel.Team.Team TeamList = 2;
 * @return {!Array<!proto.PbModel.Team.Team>}
 */
proto.PbModel.Expedition.ExpeditionGetNodeFightInfoReq.prototype.getTeamlistList = function() {
  return /** @type{!Array<!proto.PbModel.Team.Team>} */ (
    jspb.Message.getRepeatedWrapperField(this, Team_pb.Team, 2));
};


/**
 * @param {!Array<!proto.PbModel.Team.Team>} value
 * @return {!proto.PbModel.Expedition.ExpeditionGetNodeFightInfoReq} returns this
*/
proto.PbModel.Expedition.ExpeditionGetNodeFightInfoReq.prototype.setTeamlistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.PbModel.Team.Team=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.Team.Team}
 */
proto.PbModel.Expedition.ExpeditionGetNodeFightInfoReq.prototype.addTeamlist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.PbModel.Team.Team, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.Expedition.ExpeditionGetNodeFightInfoReq} returns this
 */
proto.PbModel.Expedition.ExpeditionGetNodeFightInfoReq.prototype.clearTeamlistList = function() {
  return this.setTeamlistList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.Expedition.ExpeditionGetNodeFightInfoRes.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Expedition.ExpeditionGetNodeFightInfoRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Expedition.ExpeditionGetNodeFightInfoRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Expedition.ExpeditionGetNodeFightInfoRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionGetNodeFightInfoRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    teamlistList: jspb.Message.toObjectList(msg.getTeamlistList(),
    Team_pb.Team.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Expedition.ExpeditionGetNodeFightInfoRes}
 */
proto.PbModel.Expedition.ExpeditionGetNodeFightInfoRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Expedition.ExpeditionGetNodeFightInfoRes;
  return proto.PbModel.Expedition.ExpeditionGetNodeFightInfoRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Expedition.ExpeditionGetNodeFightInfoRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Expedition.ExpeditionGetNodeFightInfoRes}
 */
proto.PbModel.Expedition.ExpeditionGetNodeFightInfoRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new Team_pb.Team;
      reader.readMessage(value,Team_pb.Team.deserializeBinaryFromReader);
      msg.addTeamlist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Expedition.ExpeditionGetNodeFightInfoRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Expedition.ExpeditionGetNodeFightInfoRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Expedition.ExpeditionGetNodeFightInfoRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionGetNodeFightInfoRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTeamlistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      Team_pb.Team.serializeBinaryToWriter
    );
  }
};


/**
 * repeated PbModel.Team.Team TeamList = 1;
 * @return {!Array<!proto.PbModel.Team.Team>}
 */
proto.PbModel.Expedition.ExpeditionGetNodeFightInfoRes.prototype.getTeamlistList = function() {
  return /** @type{!Array<!proto.PbModel.Team.Team>} */ (
    jspb.Message.getRepeatedWrapperField(this, Team_pb.Team, 1));
};


/**
 * @param {!Array<!proto.PbModel.Team.Team>} value
 * @return {!proto.PbModel.Expedition.ExpeditionGetNodeFightInfoRes} returns this
*/
proto.PbModel.Expedition.ExpeditionGetNodeFightInfoRes.prototype.setTeamlistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.PbModel.Team.Team=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.Team.Team}
 */
proto.PbModel.Expedition.ExpeditionGetNodeFightInfoRes.prototype.addTeamlist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.PbModel.Team.Team, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.Expedition.ExpeditionGetNodeFightInfoRes} returns this
 */
proto.PbModel.Expedition.ExpeditionGetNodeFightInfoRes.prototype.clearTeamlistList = function() {
  return this.setTeamlistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Expedition.ExpeditionGetNpcStatusInfoReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Expedition.ExpeditionGetNpcStatusInfoReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Expedition.ExpeditionGetNpcStatusInfoReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionGetNpcStatusInfoReq.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Expedition.ExpeditionGetNpcStatusInfoReq}
 */
proto.PbModel.Expedition.ExpeditionGetNpcStatusInfoReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Expedition.ExpeditionGetNpcStatusInfoReq;
  return proto.PbModel.Expedition.ExpeditionGetNpcStatusInfoReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Expedition.ExpeditionGetNpcStatusInfoReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Expedition.ExpeditionGetNpcStatusInfoReq}
 */
proto.PbModel.Expedition.ExpeditionGetNpcStatusInfoReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Expedition.ExpeditionGetNpcStatusInfoReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Expedition.ExpeditionGetNpcStatusInfoReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Expedition.ExpeditionGetNpcStatusInfoReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionGetNpcStatusInfoReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Expedition.ExpeditionGetNpcStatusInfoRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Expedition.ExpeditionGetNpcStatusInfoRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Expedition.ExpeditionGetNpcStatusInfoRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionGetNpcStatusInfoRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    infosMap: (f = msg.getInfosMap()) ? f.toObject(includeInstance, proto.PbModel.Fight.FightRemainHp.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Expedition.ExpeditionGetNpcStatusInfoRes}
 */
proto.PbModel.Expedition.ExpeditionGetNpcStatusInfoRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Expedition.ExpeditionGetNpcStatusInfoRes;
  return proto.PbModel.Expedition.ExpeditionGetNpcStatusInfoRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Expedition.ExpeditionGetNpcStatusInfoRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Expedition.ExpeditionGetNpcStatusInfoRes}
 */
proto.PbModel.Expedition.ExpeditionGetNpcStatusInfoRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getInfosMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.PbModel.Fight.FightRemainHp.deserializeBinaryFromReader, "", new proto.PbModel.Fight.FightRemainHp());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Expedition.ExpeditionGetNpcStatusInfoRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Expedition.ExpeditionGetNpcStatusInfoRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Expedition.ExpeditionGetNpcStatusInfoRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionGetNpcStatusInfoRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInfosMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.PbModel.Fight.FightRemainHp.serializeBinaryToWriter);
  }
};


/**
 * map<string, PbModel.Fight.FightRemainHp> Infos = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.PbModel.Fight.FightRemainHp>}
 */
proto.PbModel.Expedition.ExpeditionGetNpcStatusInfoRes.prototype.getInfosMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.PbModel.Fight.FightRemainHp>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.PbModel.Fight.FightRemainHp));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.PbModel.Expedition.ExpeditionGetNpcStatusInfoRes} returns this
 */
proto.PbModel.Expedition.ExpeditionGetNpcStatusInfoRes.prototype.clearInfosMap = function() {
  this.getInfosMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Expedition.ExpeditionGetRankInfoReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Expedition.ExpeditionGetRankInfoReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Expedition.ExpeditionGetRankInfoReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionGetRankInfoReq.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Expedition.ExpeditionGetRankInfoReq}
 */
proto.PbModel.Expedition.ExpeditionGetRankInfoReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Expedition.ExpeditionGetRankInfoReq;
  return proto.PbModel.Expedition.ExpeditionGetRankInfoReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Expedition.ExpeditionGetRankInfoReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Expedition.ExpeditionGetRankInfoReq}
 */
proto.PbModel.Expedition.ExpeditionGetRankInfoReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Expedition.ExpeditionGetRankInfoReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Expedition.ExpeditionGetRankInfoReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Expedition.ExpeditionGetRankInfoReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionGetRankInfoReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.Expedition.ExpeditionGetRankInfoRes.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Expedition.ExpeditionGetRankInfoRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Expedition.ExpeditionGetRankInfoRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Expedition.ExpeditionGetRankInfoRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionGetRankInfoRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    myrankinfo: (f = msg.getMyrankinfo()) && proto.PbModel.Expedition.ExpeditionBossRankModel.toObject(includeInstance, f),
    rankinfosList: jspb.Message.toObjectList(msg.getRankinfosList(),
    proto.PbModel.Expedition.ExpeditionBossRankModel.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Expedition.ExpeditionGetRankInfoRes}
 */
proto.PbModel.Expedition.ExpeditionGetRankInfoRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Expedition.ExpeditionGetRankInfoRes;
  return proto.PbModel.Expedition.ExpeditionGetRankInfoRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Expedition.ExpeditionGetRankInfoRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Expedition.ExpeditionGetRankInfoRes}
 */
proto.PbModel.Expedition.ExpeditionGetRankInfoRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PbModel.Expedition.ExpeditionBossRankModel;
      reader.readMessage(value,proto.PbModel.Expedition.ExpeditionBossRankModel.deserializeBinaryFromReader);
      msg.setMyrankinfo(value);
      break;
    case 2:
      var value = new proto.PbModel.Expedition.ExpeditionBossRankModel;
      reader.readMessage(value,proto.PbModel.Expedition.ExpeditionBossRankModel.deserializeBinaryFromReader);
      msg.addRankinfos(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Expedition.ExpeditionGetRankInfoRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Expedition.ExpeditionGetRankInfoRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Expedition.ExpeditionGetRankInfoRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionGetRankInfoRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMyrankinfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.PbModel.Expedition.ExpeditionBossRankModel.serializeBinaryToWriter
    );
  }
  f = message.getRankinfosList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.PbModel.Expedition.ExpeditionBossRankModel.serializeBinaryToWriter
    );
  }
};


/**
 * optional ExpeditionBossRankModel MyRankInfo = 1;
 * @return {?proto.PbModel.Expedition.ExpeditionBossRankModel}
 */
proto.PbModel.Expedition.ExpeditionGetRankInfoRes.prototype.getMyrankinfo = function() {
  return /** @type{?proto.PbModel.Expedition.ExpeditionBossRankModel} */ (
    jspb.Message.getWrapperField(this, proto.PbModel.Expedition.ExpeditionBossRankModel, 1));
};


/**
 * @param {?proto.PbModel.Expedition.ExpeditionBossRankModel|undefined} value
 * @return {!proto.PbModel.Expedition.ExpeditionGetRankInfoRes} returns this
*/
proto.PbModel.Expedition.ExpeditionGetRankInfoRes.prototype.setMyrankinfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.Expedition.ExpeditionGetRankInfoRes} returns this
 */
proto.PbModel.Expedition.ExpeditionGetRankInfoRes.prototype.clearMyrankinfo = function() {
  return this.setMyrankinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.Expedition.ExpeditionGetRankInfoRes.prototype.hasMyrankinfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated ExpeditionBossRankModel RankInfos = 2;
 * @return {!Array<!proto.PbModel.Expedition.ExpeditionBossRankModel>}
 */
proto.PbModel.Expedition.ExpeditionGetRankInfoRes.prototype.getRankinfosList = function() {
  return /** @type{!Array<!proto.PbModel.Expedition.ExpeditionBossRankModel>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.Expedition.ExpeditionBossRankModel, 2));
};


/**
 * @param {!Array<!proto.PbModel.Expedition.ExpeditionBossRankModel>} value
 * @return {!proto.PbModel.Expedition.ExpeditionGetRankInfoRes} returns this
*/
proto.PbModel.Expedition.ExpeditionGetRankInfoRes.prototype.setRankinfosList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.PbModel.Expedition.ExpeditionBossRankModel=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.Expedition.ExpeditionBossRankModel}
 */
proto.PbModel.Expedition.ExpeditionGetRankInfoRes.prototype.addRankinfos = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.PbModel.Expedition.ExpeditionBossRankModel, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.Expedition.ExpeditionGetRankInfoRes} returns this
 */
proto.PbModel.Expedition.ExpeditionGetRankInfoRes.prototype.clearRankinfosList = function() {
  return this.setRankinfosList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.Expedition.ExpeditionBossRankModel.repeatedFields_ = [11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Expedition.ExpeditionBossRankModel.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Expedition.ExpeditionBossRankModel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Expedition.ExpeditionBossRankModel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionBossRankModel.toObject = function(includeInstance, msg) {
  var f, obj = {
    playerid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    lv: jspb.Message.getFieldWithDefault(msg, 2, 0),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    headimageid: jspb.Message.getFieldWithDefault(msg, 4, 0),
    fap: jspb.Message.getFieldWithDefault(msg, 5, 0),
    rank: jspb.Message.getFieldWithDefault(msg, 6, 0),
    damage: jspb.Message.getFieldWithDefault(msg, 7, 0),
    reportid: jspb.Message.getFieldWithDefault(msg, 8, ""),
    curbuff: jspb.Message.getFieldWithDefault(msg, 9, ""),
    statdata: jspb.Message.getFieldWithDefault(msg, 10, ""),
    heroinfolistList: jspb.Message.toObjectList(msg.getHeroinfolistList(),
    proto.PbModel.Expedition.ExpeditionTeamInfoModel.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Expedition.ExpeditionBossRankModel}
 */
proto.PbModel.Expedition.ExpeditionBossRankModel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Expedition.ExpeditionBossRankModel;
  return proto.PbModel.Expedition.ExpeditionBossRankModel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Expedition.ExpeditionBossRankModel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Expedition.ExpeditionBossRankModel}
 */
proto.PbModel.Expedition.ExpeditionBossRankModel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlayerid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLv(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHeadimageid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFap(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRank(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDamage(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setReportid(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurbuff(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatdata(value);
      break;
    case 11:
      var value = new proto.PbModel.Expedition.ExpeditionTeamInfoModel;
      reader.readMessage(value,proto.PbModel.Expedition.ExpeditionTeamInfoModel.deserializeBinaryFromReader);
      msg.addHeroinfolist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Expedition.ExpeditionBossRankModel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Expedition.ExpeditionBossRankModel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Expedition.ExpeditionBossRankModel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionBossRankModel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlayerid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLv();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getHeadimageid();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getFap();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getRank();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getDamage();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getReportid();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getCurbuff();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getStatdata();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getHeroinfolistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      proto.PbModel.Expedition.ExpeditionTeamInfoModel.serializeBinaryToWriter
    );
  }
};


/**
 * optional string PlayerId = 1;
 * @return {string}
 */
proto.PbModel.Expedition.ExpeditionBossRankModel.prototype.getPlayerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Expedition.ExpeditionBossRankModel} returns this
 */
proto.PbModel.Expedition.ExpeditionBossRankModel.prototype.setPlayerid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 Lv = 2;
 * @return {number}
 */
proto.PbModel.Expedition.ExpeditionBossRankModel.prototype.getLv = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Expedition.ExpeditionBossRankModel} returns this
 */
proto.PbModel.Expedition.ExpeditionBossRankModel.prototype.setLv = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string Name = 3;
 * @return {string}
 */
proto.PbModel.Expedition.ExpeditionBossRankModel.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Expedition.ExpeditionBossRankModel} returns this
 */
proto.PbModel.Expedition.ExpeditionBossRankModel.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 HeadImageId = 4;
 * @return {number}
 */
proto.PbModel.Expedition.ExpeditionBossRankModel.prototype.getHeadimageid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Expedition.ExpeditionBossRankModel} returns this
 */
proto.PbModel.Expedition.ExpeditionBossRankModel.prototype.setHeadimageid = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 Fap = 5;
 * @return {number}
 */
proto.PbModel.Expedition.ExpeditionBossRankModel.prototype.getFap = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Expedition.ExpeditionBossRankModel} returns this
 */
proto.PbModel.Expedition.ExpeditionBossRankModel.prototype.setFap = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 Rank = 6;
 * @return {number}
 */
proto.PbModel.Expedition.ExpeditionBossRankModel.prototype.getRank = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Expedition.ExpeditionBossRankModel} returns this
 */
proto.PbModel.Expedition.ExpeditionBossRankModel.prototype.setRank = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int64 Damage = 7;
 * @return {number}
 */
proto.PbModel.Expedition.ExpeditionBossRankModel.prototype.getDamage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Expedition.ExpeditionBossRankModel} returns this
 */
proto.PbModel.Expedition.ExpeditionBossRankModel.prototype.setDamage = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string ReportId = 8;
 * @return {string}
 */
proto.PbModel.Expedition.ExpeditionBossRankModel.prototype.getReportid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Expedition.ExpeditionBossRankModel} returns this
 */
proto.PbModel.Expedition.ExpeditionBossRankModel.prototype.setReportid = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string CurBuff = 9;
 * @return {string}
 */
proto.PbModel.Expedition.ExpeditionBossRankModel.prototype.getCurbuff = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Expedition.ExpeditionBossRankModel} returns this
 */
proto.PbModel.Expedition.ExpeditionBossRankModel.prototype.setCurbuff = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string StatData = 10;
 * @return {string}
 */
proto.PbModel.Expedition.ExpeditionBossRankModel.prototype.getStatdata = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Expedition.ExpeditionBossRankModel} returns this
 */
proto.PbModel.Expedition.ExpeditionBossRankModel.prototype.setStatdata = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * repeated ExpeditionTeamInfoModel HeroInfoList = 11;
 * @return {!Array<!proto.PbModel.Expedition.ExpeditionTeamInfoModel>}
 */
proto.PbModel.Expedition.ExpeditionBossRankModel.prototype.getHeroinfolistList = function() {
  return /** @type{!Array<!proto.PbModel.Expedition.ExpeditionTeamInfoModel>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.Expedition.ExpeditionTeamInfoModel, 11));
};


/**
 * @param {!Array<!proto.PbModel.Expedition.ExpeditionTeamInfoModel>} value
 * @return {!proto.PbModel.Expedition.ExpeditionBossRankModel} returns this
*/
proto.PbModel.Expedition.ExpeditionBossRankModel.prototype.setHeroinfolistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.PbModel.Expedition.ExpeditionTeamInfoModel=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.Expedition.ExpeditionTeamInfoModel}
 */
proto.PbModel.Expedition.ExpeditionBossRankModel.prototype.addHeroinfolist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.PbModel.Expedition.ExpeditionTeamInfoModel, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.Expedition.ExpeditionBossRankModel} returns this
 */
proto.PbModel.Expedition.ExpeditionBossRankModel.prototype.clearHeroinfolistList = function() {
  return this.setHeroinfolistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Expedition.ExpeditionTeamInfoModel.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Expedition.ExpeditionTeamInfoModel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Expedition.ExpeditionTeamInfoModel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionTeamInfoModel.toObject = function(includeInstance, msg) {
  var f, obj = {
    heromodelid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    star: jspb.Message.getFieldWithDefault(msg, 2, 0),
    lv: jspb.Message.getFieldWithDefault(msg, 3, 0),
    valuelv: jspb.Message.getFieldWithDefault(msg, 4, 0),
    entityid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    ifawakening: jspb.Message.getBooleanFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Expedition.ExpeditionTeamInfoModel}
 */
proto.PbModel.Expedition.ExpeditionTeamInfoModel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Expedition.ExpeditionTeamInfoModel;
  return proto.PbModel.Expedition.ExpeditionTeamInfoModel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Expedition.ExpeditionTeamInfoModel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Expedition.ExpeditionTeamInfoModel}
 */
proto.PbModel.Expedition.ExpeditionTeamInfoModel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHeromodelid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStar(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLv(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setValuelv(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setEntityid(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIfawakening(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Expedition.ExpeditionTeamInfoModel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Expedition.ExpeditionTeamInfoModel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Expedition.ExpeditionTeamInfoModel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionTeamInfoModel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeromodelid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getStar();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getLv();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getValuelv();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getEntityid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getIfawakening();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional int32 HeroModelId = 1;
 * @return {number}
 */
proto.PbModel.Expedition.ExpeditionTeamInfoModel.prototype.getHeromodelid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Expedition.ExpeditionTeamInfoModel} returns this
 */
proto.PbModel.Expedition.ExpeditionTeamInfoModel.prototype.setHeromodelid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 Star = 2;
 * @return {number}
 */
proto.PbModel.Expedition.ExpeditionTeamInfoModel.prototype.getStar = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Expedition.ExpeditionTeamInfoModel} returns this
 */
proto.PbModel.Expedition.ExpeditionTeamInfoModel.prototype.setStar = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 Lv = 3;
 * @return {number}
 */
proto.PbModel.Expedition.ExpeditionTeamInfoModel.prototype.getLv = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Expedition.ExpeditionTeamInfoModel} returns this
 */
proto.PbModel.Expedition.ExpeditionTeamInfoModel.prototype.setLv = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 ValueLv = 4;
 * @return {number}
 */
proto.PbModel.Expedition.ExpeditionTeamInfoModel.prototype.getValuelv = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Expedition.ExpeditionTeamInfoModel} returns this
 */
proto.PbModel.Expedition.ExpeditionTeamInfoModel.prototype.setValuelv = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string EntityId = 5;
 * @return {string}
 */
proto.PbModel.Expedition.ExpeditionTeamInfoModel.prototype.getEntityid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Expedition.ExpeditionTeamInfoModel} returns this
 */
proto.PbModel.Expedition.ExpeditionTeamInfoModel.prototype.setEntityid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool IfAwakening = 6;
 * @return {boolean}
 */
proto.PbModel.Expedition.ExpeditionTeamInfoModel.prototype.getIfawakening = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PbModel.Expedition.ExpeditionTeamInfoModel} returns this
 */
proto.PbModel.Expedition.ExpeditionTeamInfoModel.prototype.setIfawakening = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Expedition.ExpeditionGetReportInfoReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Expedition.ExpeditionGetReportInfoReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Expedition.ExpeditionGetReportInfoReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionGetReportInfoReq.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Expedition.ExpeditionGetReportInfoReq}
 */
proto.PbModel.Expedition.ExpeditionGetReportInfoReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Expedition.ExpeditionGetReportInfoReq;
  return proto.PbModel.Expedition.ExpeditionGetReportInfoReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Expedition.ExpeditionGetReportInfoReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Expedition.ExpeditionGetReportInfoReq}
 */
proto.PbModel.Expedition.ExpeditionGetReportInfoReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Expedition.ExpeditionGetReportInfoReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Expedition.ExpeditionGetReportInfoReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Expedition.ExpeditionGetReportInfoReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionGetReportInfoReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.Expedition.ExpeditionGetReportInfoRes.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Expedition.ExpeditionGetReportInfoRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Expedition.ExpeditionGetReportInfoRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Expedition.ExpeditionGetReportInfoRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionGetReportInfoRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    infosList: jspb.Message.toObjectList(msg.getInfosList(),
    proto.PbModel.Expedition.ExpeditionGetReportInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Expedition.ExpeditionGetReportInfoRes}
 */
proto.PbModel.Expedition.ExpeditionGetReportInfoRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Expedition.ExpeditionGetReportInfoRes;
  return proto.PbModel.Expedition.ExpeditionGetReportInfoRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Expedition.ExpeditionGetReportInfoRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Expedition.ExpeditionGetReportInfoRes}
 */
proto.PbModel.Expedition.ExpeditionGetReportInfoRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PbModel.Expedition.ExpeditionGetReportInfo;
      reader.readMessage(value,proto.PbModel.Expedition.ExpeditionGetReportInfo.deserializeBinaryFromReader);
      msg.addInfos(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Expedition.ExpeditionGetReportInfoRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Expedition.ExpeditionGetReportInfoRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Expedition.ExpeditionGetReportInfoRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionGetReportInfoRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInfosList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.PbModel.Expedition.ExpeditionGetReportInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ExpeditionGetReportInfo Infos = 1;
 * @return {!Array<!proto.PbModel.Expedition.ExpeditionGetReportInfo>}
 */
proto.PbModel.Expedition.ExpeditionGetReportInfoRes.prototype.getInfosList = function() {
  return /** @type{!Array<!proto.PbModel.Expedition.ExpeditionGetReportInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.Expedition.ExpeditionGetReportInfo, 1));
};


/**
 * @param {!Array<!proto.PbModel.Expedition.ExpeditionGetReportInfo>} value
 * @return {!proto.PbModel.Expedition.ExpeditionGetReportInfoRes} returns this
*/
proto.PbModel.Expedition.ExpeditionGetReportInfoRes.prototype.setInfosList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.PbModel.Expedition.ExpeditionGetReportInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.Expedition.ExpeditionGetReportInfo}
 */
proto.PbModel.Expedition.ExpeditionGetReportInfoRes.prototype.addInfos = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.PbModel.Expedition.ExpeditionGetReportInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.Expedition.ExpeditionGetReportInfoRes} returns this
 */
proto.PbModel.Expedition.ExpeditionGetReportInfoRes.prototype.clearInfosList = function() {
  return this.setInfosList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Expedition.ExpeditionGetReportInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Expedition.ExpeditionGetReportInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Expedition.ExpeditionGetReportInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionGetReportInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    damage: jspb.Message.getFieldWithDefault(msg, 2, 0),
    reportid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    playerinfo: (f = msg.getPlayerinfo()) && Player_pb.PlayerCommonInfoRes.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Expedition.ExpeditionGetReportInfo}
 */
proto.PbModel.Expedition.ExpeditionGetReportInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Expedition.ExpeditionGetReportInfo;
  return proto.PbModel.Expedition.ExpeditionGetReportInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Expedition.ExpeditionGetReportInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Expedition.ExpeditionGetReportInfo}
 */
proto.PbModel.Expedition.ExpeditionGetReportInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDamage(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setReportid(value);
      break;
    case 4:
      var value = new Player_pb.PlayerCommonInfoRes;
      reader.readMessage(value,Player_pb.PlayerCommonInfoRes.deserializeBinaryFromReader);
      msg.setPlayerinfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Expedition.ExpeditionGetReportInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Expedition.ExpeditionGetReportInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Expedition.ExpeditionGetReportInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionGetReportInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDamage();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getReportid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPlayerinfo();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      Player_pb.PlayerCommonInfoRes.serializeBinaryToWriter
    );
  }
};


/**
 * optional string Id = 1;
 * @return {string}
 */
proto.PbModel.Expedition.ExpeditionGetReportInfo.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Expedition.ExpeditionGetReportInfo} returns this
 */
proto.PbModel.Expedition.ExpeditionGetReportInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 Damage = 2;
 * @return {number}
 */
proto.PbModel.Expedition.ExpeditionGetReportInfo.prototype.getDamage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Expedition.ExpeditionGetReportInfo} returns this
 */
proto.PbModel.Expedition.ExpeditionGetReportInfo.prototype.setDamage = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string ReportId = 3;
 * @return {string}
 */
proto.PbModel.Expedition.ExpeditionGetReportInfo.prototype.getReportid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Expedition.ExpeditionGetReportInfo} returns this
 */
proto.PbModel.Expedition.ExpeditionGetReportInfo.prototype.setReportid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional PbModel.Player.PlayerCommonInfoRes PlayerInfo = 4;
 * @return {?proto.PbModel.Player.PlayerCommonInfoRes}
 */
proto.PbModel.Expedition.ExpeditionGetReportInfo.prototype.getPlayerinfo = function() {
  return /** @type{?proto.PbModel.Player.PlayerCommonInfoRes} */ (
    jspb.Message.getWrapperField(this, Player_pb.PlayerCommonInfoRes, 4));
};


/**
 * @param {?proto.PbModel.Player.PlayerCommonInfoRes|undefined} value
 * @return {!proto.PbModel.Expedition.ExpeditionGetReportInfo} returns this
*/
proto.PbModel.Expedition.ExpeditionGetReportInfo.prototype.setPlayerinfo = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.Expedition.ExpeditionGetReportInfo} returns this
 */
proto.PbModel.Expedition.ExpeditionGetReportInfo.prototype.clearPlayerinfo = function() {
  return this.setPlayerinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.Expedition.ExpeditionGetReportInfo.prototype.hasPlayerinfo = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Expedition.ExpeditionGetShopInfoReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Expedition.ExpeditionGetShopInfoReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Expedition.ExpeditionGetShopInfoReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionGetShopInfoReq.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Expedition.ExpeditionGetShopInfoReq}
 */
proto.PbModel.Expedition.ExpeditionGetShopInfoReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Expedition.ExpeditionGetShopInfoReq;
  return proto.PbModel.Expedition.ExpeditionGetShopInfoReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Expedition.ExpeditionGetShopInfoReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Expedition.ExpeditionGetShopInfoReq}
 */
proto.PbModel.Expedition.ExpeditionGetShopInfoReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Expedition.ExpeditionGetShopInfoReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Expedition.ExpeditionGetShopInfoReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Expedition.ExpeditionGetShopInfoReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionGetShopInfoReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Expedition.ExpeditionGetShopInfoRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Expedition.ExpeditionGetShopInfoRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Expedition.ExpeditionGetShopInfoRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionGetShopInfoRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    buydicMap: (f = msg.getBuydicMap()) ? f.toObject(includeInstance, undefined) : [],
    accumulate: jspb.Message.getFieldWithDefault(msg, 2, ""),
    accumulatereward: jspb.Message.getFieldWithDefault(msg, 3, ""),
    isaccumulatereward: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    accumulatetime: jspb.Message.getFieldWithDefault(msg, 5, 0),
    refreshtime: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Expedition.ExpeditionGetShopInfoRes}
 */
proto.PbModel.Expedition.ExpeditionGetShopInfoRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Expedition.ExpeditionGetShopInfoRes;
  return proto.PbModel.Expedition.ExpeditionGetShopInfoRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Expedition.ExpeditionGetShopInfoRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Expedition.ExpeditionGetShopInfoRes}
 */
proto.PbModel.Expedition.ExpeditionGetShopInfoRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getBuydicMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readInt32, null, 0, 0);
         });
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccumulate(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccumulatereward(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsaccumulatereward(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAccumulatetime(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRefreshtime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Expedition.ExpeditionGetShopInfoRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Expedition.ExpeditionGetShopInfoRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Expedition.ExpeditionGetShopInfoRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionGetShopInfoRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBuydicMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeInt32);
  }
  f = message.getAccumulate();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAccumulatereward();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIsaccumulatereward();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getAccumulatetime();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getRefreshtime();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
};


/**
 * map<int32, int32> BuyDic = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,number>}
 */
proto.PbModel.Expedition.ExpeditionGetShopInfoRes.prototype.getBuydicMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,number>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.PbModel.Expedition.ExpeditionGetShopInfoRes} returns this
 */
proto.PbModel.Expedition.ExpeditionGetShopInfoRes.prototype.clearBuydicMap = function() {
  this.getBuydicMap().clear();
  return this;};


/**
 * optional string Accumulate = 2;
 * @return {string}
 */
proto.PbModel.Expedition.ExpeditionGetShopInfoRes.prototype.getAccumulate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Expedition.ExpeditionGetShopInfoRes} returns this
 */
proto.PbModel.Expedition.ExpeditionGetShopInfoRes.prototype.setAccumulate = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string AccumulateReward = 3;
 * @return {string}
 */
proto.PbModel.Expedition.ExpeditionGetShopInfoRes.prototype.getAccumulatereward = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Expedition.ExpeditionGetShopInfoRes} returns this
 */
proto.PbModel.Expedition.ExpeditionGetShopInfoRes.prototype.setAccumulatereward = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool IsAccumulateReward = 4;
 * @return {boolean}
 */
proto.PbModel.Expedition.ExpeditionGetShopInfoRes.prototype.getIsaccumulatereward = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PbModel.Expedition.ExpeditionGetShopInfoRes} returns this
 */
proto.PbModel.Expedition.ExpeditionGetShopInfoRes.prototype.setIsaccumulatereward = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional int64 AccumulateTime = 5;
 * @return {number}
 */
proto.PbModel.Expedition.ExpeditionGetShopInfoRes.prototype.getAccumulatetime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Expedition.ExpeditionGetShopInfoRes} returns this
 */
proto.PbModel.Expedition.ExpeditionGetShopInfoRes.prototype.setAccumulatetime = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 RefreshTime = 6;
 * @return {number}
 */
proto.PbModel.Expedition.ExpeditionGetShopInfoRes.prototype.getRefreshtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Expedition.ExpeditionGetShopInfoRes} returns this
 */
proto.PbModel.Expedition.ExpeditionGetShopInfoRes.prototype.setRefreshtime = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Expedition.ExpeditionMopUpReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Expedition.ExpeditionMopUpReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Expedition.ExpeditionMopUpReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionMopUpReq.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Expedition.ExpeditionMopUpReq}
 */
proto.PbModel.Expedition.ExpeditionMopUpReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Expedition.ExpeditionMopUpReq;
  return proto.PbModel.Expedition.ExpeditionMopUpReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Expedition.ExpeditionMopUpReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Expedition.ExpeditionMopUpReq}
 */
proto.PbModel.Expedition.ExpeditionMopUpReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Expedition.ExpeditionMopUpReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Expedition.ExpeditionMopUpReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Expedition.ExpeditionMopUpReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionMopUpReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Expedition.ExpeditionMopUpRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Expedition.ExpeditionMopUpRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Expedition.ExpeditionMopUpRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionMopUpRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    info: (f = msg.getInfo()) && proto.PbModel.Expedition.ExpeditionGetInfoRes.toObject(includeInstance, f),
    getresourcedicMap: (f = msg.getGetresourcedicMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Expedition.ExpeditionMopUpRes}
 */
proto.PbModel.Expedition.ExpeditionMopUpRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Expedition.ExpeditionMopUpRes;
  return proto.PbModel.Expedition.ExpeditionMopUpRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Expedition.ExpeditionMopUpRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Expedition.ExpeditionMopUpRes}
 */
proto.PbModel.Expedition.ExpeditionMopUpRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PbModel.Expedition.ExpeditionGetInfoRes;
      reader.readMessage(value,proto.PbModel.Expedition.ExpeditionGetInfoRes.deserializeBinaryFromReader);
      msg.setInfo(value);
      break;
    case 2:
      var value = msg.getGetresourcedicMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readString, null, 0, "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Expedition.ExpeditionMopUpRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Expedition.ExpeditionMopUpRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Expedition.ExpeditionMopUpRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionMopUpRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.PbModel.Expedition.ExpeditionGetInfoRes.serializeBinaryToWriter
    );
  }
  f = message.getGetresourcedicMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional ExpeditionGetInfoRes Info = 1;
 * @return {?proto.PbModel.Expedition.ExpeditionGetInfoRes}
 */
proto.PbModel.Expedition.ExpeditionMopUpRes.prototype.getInfo = function() {
  return /** @type{?proto.PbModel.Expedition.ExpeditionGetInfoRes} */ (
    jspb.Message.getWrapperField(this, proto.PbModel.Expedition.ExpeditionGetInfoRes, 1));
};


/**
 * @param {?proto.PbModel.Expedition.ExpeditionGetInfoRes|undefined} value
 * @return {!proto.PbModel.Expedition.ExpeditionMopUpRes} returns this
*/
proto.PbModel.Expedition.ExpeditionMopUpRes.prototype.setInfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.Expedition.ExpeditionMopUpRes} returns this
 */
proto.PbModel.Expedition.ExpeditionMopUpRes.prototype.clearInfo = function() {
  return this.setInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.Expedition.ExpeditionMopUpRes.prototype.hasInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * map<int32, string> GetResourceDic = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,string>}
 */
proto.PbModel.Expedition.ExpeditionMopUpRes.prototype.getGetresourcedicMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,string>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.PbModel.Expedition.ExpeditionMopUpRes} returns this
 */
proto.PbModel.Expedition.ExpeditionMopUpRes.prototype.clearGetresourcedicMap = function() {
  this.getGetresourcedicMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Expedition.ExpeditionNodeFightReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Expedition.ExpeditionNodeFightReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Expedition.ExpeditionNodeFightReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionNodeFightReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodeid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Expedition.ExpeditionNodeFightReq}
 */
proto.PbModel.Expedition.ExpeditionNodeFightReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Expedition.ExpeditionNodeFightReq;
  return proto.PbModel.Expedition.ExpeditionNodeFightReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Expedition.ExpeditionNodeFightReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Expedition.ExpeditionNodeFightReq}
 */
proto.PbModel.Expedition.ExpeditionNodeFightReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNodeid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Expedition.ExpeditionNodeFightReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Expedition.ExpeditionNodeFightReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Expedition.ExpeditionNodeFightReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionNodeFightReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodeid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 NodeId = 1;
 * @return {number}
 */
proto.PbModel.Expedition.ExpeditionNodeFightReq.prototype.getNodeid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Expedition.ExpeditionNodeFightReq} returns this
 */
proto.PbModel.Expedition.ExpeditionNodeFightReq.prototype.setNodeid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Expedition.ExpeditionNodeFightRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Expedition.ExpeditionNodeFightRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Expedition.ExpeditionNodeFightRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionNodeFightRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    iswin: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    nodeinfo: jspb.Message.getFieldWithDefault(msg, 2, ""),
    passnodeinfo: jspb.Message.getFieldWithDefault(msg, 3, ""),
    basegetgameresourcelist: (f = msg.getBasegetgameresourcelist()) && Resource_pb.ResourceToClientModel.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Expedition.ExpeditionNodeFightRes}
 */
proto.PbModel.Expedition.ExpeditionNodeFightRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Expedition.ExpeditionNodeFightRes;
  return proto.PbModel.Expedition.ExpeditionNodeFightRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Expedition.ExpeditionNodeFightRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Expedition.ExpeditionNodeFightRes}
 */
proto.PbModel.Expedition.ExpeditionNodeFightRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIswin(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNodeinfo(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassnodeinfo(value);
      break;
    case 4:
      var value = new Resource_pb.ResourceToClientModel;
      reader.readMessage(value,Resource_pb.ResourceToClientModel.deserializeBinaryFromReader);
      msg.setBasegetgameresourcelist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Expedition.ExpeditionNodeFightRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Expedition.ExpeditionNodeFightRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Expedition.ExpeditionNodeFightRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionNodeFightRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIswin();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getNodeinfo();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPassnodeinfo();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBasegetgameresourcelist();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      Resource_pb.ResourceToClientModel.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool IsWin = 1;
 * @return {boolean}
 */
proto.PbModel.Expedition.ExpeditionNodeFightRes.prototype.getIswin = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PbModel.Expedition.ExpeditionNodeFightRes} returns this
 */
proto.PbModel.Expedition.ExpeditionNodeFightRes.prototype.setIswin = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string NodeInfo = 2;
 * @return {string}
 */
proto.PbModel.Expedition.ExpeditionNodeFightRes.prototype.getNodeinfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Expedition.ExpeditionNodeFightRes} returns this
 */
proto.PbModel.Expedition.ExpeditionNodeFightRes.prototype.setNodeinfo = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string PassNodeInfo = 3;
 * @return {string}
 */
proto.PbModel.Expedition.ExpeditionNodeFightRes.prototype.getPassnodeinfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Expedition.ExpeditionNodeFightRes} returns this
 */
proto.PbModel.Expedition.ExpeditionNodeFightRes.prototype.setPassnodeinfo = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional PbModel.Resource.ResourceToClientModel BaseGetGameResourceList = 4;
 * @return {?proto.PbModel.Resource.ResourceToClientModel}
 */
proto.PbModel.Expedition.ExpeditionNodeFightRes.prototype.getBasegetgameresourcelist = function() {
  return /** @type{?proto.PbModel.Resource.ResourceToClientModel} */ (
    jspb.Message.getWrapperField(this, Resource_pb.ResourceToClientModel, 4));
};


/**
 * @param {?proto.PbModel.Resource.ResourceToClientModel|undefined} value
 * @return {!proto.PbModel.Expedition.ExpeditionNodeFightRes} returns this
*/
proto.PbModel.Expedition.ExpeditionNodeFightRes.prototype.setBasegetgameresourcelist = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.Expedition.ExpeditionNodeFightRes} returns this
 */
proto.PbModel.Expedition.ExpeditionNodeFightRes.prototype.clearBasegetgameresourcelist = function() {
  return this.setBasegetgameresourcelist(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.Expedition.ExpeditionNodeFightRes.prototype.hasBasegetgameresourcelist = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Expedition.ExpeditionRandomBuffReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Expedition.ExpeditionRandomBuffReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Expedition.ExpeditionRandomBuffReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionRandomBuffReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    nextnodeid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Expedition.ExpeditionRandomBuffReq}
 */
proto.PbModel.Expedition.ExpeditionRandomBuffReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Expedition.ExpeditionRandomBuffReq;
  return proto.PbModel.Expedition.ExpeditionRandomBuffReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Expedition.ExpeditionRandomBuffReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Expedition.ExpeditionRandomBuffReq}
 */
proto.PbModel.Expedition.ExpeditionRandomBuffReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNextnodeid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Expedition.ExpeditionRandomBuffReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Expedition.ExpeditionRandomBuffReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Expedition.ExpeditionRandomBuffReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionRandomBuffReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNextnodeid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 NextNodeId = 1;
 * @return {number}
 */
proto.PbModel.Expedition.ExpeditionRandomBuffReq.prototype.getNextnodeid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Expedition.ExpeditionRandomBuffReq} returns this
 */
proto.PbModel.Expedition.ExpeditionRandomBuffReq.prototype.setNextnodeid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Expedition.ExpeditionRandomBuffRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Expedition.ExpeditionRandomBuffRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Expedition.ExpeditionRandomBuffRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionRandomBuffRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    buffidlist: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Expedition.ExpeditionRandomBuffRes}
 */
proto.PbModel.Expedition.ExpeditionRandomBuffRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Expedition.ExpeditionRandomBuffRes;
  return proto.PbModel.Expedition.ExpeditionRandomBuffRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Expedition.ExpeditionRandomBuffRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Expedition.ExpeditionRandomBuffRes}
 */
proto.PbModel.Expedition.ExpeditionRandomBuffRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuffidlist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Expedition.ExpeditionRandomBuffRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Expedition.ExpeditionRandomBuffRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Expedition.ExpeditionRandomBuffRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionRandomBuffRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBuffidlist();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string BuffIdList = 1;
 * @return {string}
 */
proto.PbModel.Expedition.ExpeditionRandomBuffRes.prototype.getBuffidlist = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Expedition.ExpeditionRandomBuffRes} returns this
 */
proto.PbModel.Expedition.ExpeditionRandomBuffRes.prototype.setBuffidlist = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Expedition.ExpeditionReceiveAccumulateReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Expedition.ExpeditionReceiveAccumulateReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Expedition.ExpeditionReceiveAccumulateReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionReceiveAccumulateReq.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Expedition.ExpeditionReceiveAccumulateReq}
 */
proto.PbModel.Expedition.ExpeditionReceiveAccumulateReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Expedition.ExpeditionReceiveAccumulateReq;
  return proto.PbModel.Expedition.ExpeditionReceiveAccumulateReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Expedition.ExpeditionReceiveAccumulateReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Expedition.ExpeditionReceiveAccumulateReq}
 */
proto.PbModel.Expedition.ExpeditionReceiveAccumulateReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Expedition.ExpeditionReceiveAccumulateReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Expedition.ExpeditionReceiveAccumulateReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Expedition.ExpeditionReceiveAccumulateReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionReceiveAccumulateReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Expedition.ExpeditionReceiveAccumulateRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Expedition.ExpeditionReceiveAccumulateRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Expedition.ExpeditionReceiveAccumulateRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionReceiveAccumulateRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    info: (f = msg.getInfo()) && proto.PbModel.Expedition.ExpeditionGetShopInfoRes.toObject(includeInstance, f),
    basegetgameresourcelist: (f = msg.getBasegetgameresourcelist()) && Resource_pb.ResourceToClientModel.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Expedition.ExpeditionReceiveAccumulateRes}
 */
proto.PbModel.Expedition.ExpeditionReceiveAccumulateRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Expedition.ExpeditionReceiveAccumulateRes;
  return proto.PbModel.Expedition.ExpeditionReceiveAccumulateRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Expedition.ExpeditionReceiveAccumulateRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Expedition.ExpeditionReceiveAccumulateRes}
 */
proto.PbModel.Expedition.ExpeditionReceiveAccumulateRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PbModel.Expedition.ExpeditionGetShopInfoRes;
      reader.readMessage(value,proto.PbModel.Expedition.ExpeditionGetShopInfoRes.deserializeBinaryFromReader);
      msg.setInfo(value);
      break;
    case 2:
      var value = new Resource_pb.ResourceToClientModel;
      reader.readMessage(value,Resource_pb.ResourceToClientModel.deserializeBinaryFromReader);
      msg.setBasegetgameresourcelist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Expedition.ExpeditionReceiveAccumulateRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Expedition.ExpeditionReceiveAccumulateRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Expedition.ExpeditionReceiveAccumulateRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionReceiveAccumulateRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.PbModel.Expedition.ExpeditionGetShopInfoRes.serializeBinaryToWriter
    );
  }
  f = message.getBasegetgameresourcelist();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      Resource_pb.ResourceToClientModel.serializeBinaryToWriter
    );
  }
};


/**
 * optional ExpeditionGetShopInfoRes Info = 1;
 * @return {?proto.PbModel.Expedition.ExpeditionGetShopInfoRes}
 */
proto.PbModel.Expedition.ExpeditionReceiveAccumulateRes.prototype.getInfo = function() {
  return /** @type{?proto.PbModel.Expedition.ExpeditionGetShopInfoRes} */ (
    jspb.Message.getWrapperField(this, proto.PbModel.Expedition.ExpeditionGetShopInfoRes, 1));
};


/**
 * @param {?proto.PbModel.Expedition.ExpeditionGetShopInfoRes|undefined} value
 * @return {!proto.PbModel.Expedition.ExpeditionReceiveAccumulateRes} returns this
*/
proto.PbModel.Expedition.ExpeditionReceiveAccumulateRes.prototype.setInfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.Expedition.ExpeditionReceiveAccumulateRes} returns this
 */
proto.PbModel.Expedition.ExpeditionReceiveAccumulateRes.prototype.clearInfo = function() {
  return this.setInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.Expedition.ExpeditionReceiveAccumulateRes.prototype.hasInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional PbModel.Resource.ResourceToClientModel BaseGetGameResourceList = 2;
 * @return {?proto.PbModel.Resource.ResourceToClientModel}
 */
proto.PbModel.Expedition.ExpeditionReceiveAccumulateRes.prototype.getBasegetgameresourcelist = function() {
  return /** @type{?proto.PbModel.Resource.ResourceToClientModel} */ (
    jspb.Message.getWrapperField(this, Resource_pb.ResourceToClientModel, 2));
};


/**
 * @param {?proto.PbModel.Resource.ResourceToClientModel|undefined} value
 * @return {!proto.PbModel.Expedition.ExpeditionReceiveAccumulateRes} returns this
*/
proto.PbModel.Expedition.ExpeditionReceiveAccumulateRes.prototype.setBasegetgameresourcelist = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.Expedition.ExpeditionReceiveAccumulateRes} returns this
 */
proto.PbModel.Expedition.ExpeditionReceiveAccumulateRes.prototype.clearBasegetgameresourcelist = function() {
  return this.setBasegetgameresourcelist(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.Expedition.ExpeditionReceiveAccumulateRes.prototype.hasBasegetgameresourcelist = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Expedition.ExpeditionReceiveAchieveReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Expedition.ExpeditionReceiveAchieveReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Expedition.ExpeditionReceiveAchieveReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionReceiveAchieveReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Expedition.ExpeditionReceiveAchieveReq}
 */
proto.PbModel.Expedition.ExpeditionReceiveAchieveReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Expedition.ExpeditionReceiveAchieveReq;
  return proto.PbModel.Expedition.ExpeditionReceiveAchieveReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Expedition.ExpeditionReceiveAchieveReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Expedition.ExpeditionReceiveAchieveReq}
 */
proto.PbModel.Expedition.ExpeditionReceiveAchieveReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Expedition.ExpeditionReceiveAchieveReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Expedition.ExpeditionReceiveAchieveReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Expedition.ExpeditionReceiveAchieveReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionReceiveAchieveReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 Id = 1;
 * @return {number}
 */
proto.PbModel.Expedition.ExpeditionReceiveAchieveReq.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Expedition.ExpeditionReceiveAchieveReq} returns this
 */
proto.PbModel.Expedition.ExpeditionReceiveAchieveReq.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Expedition.ExpeditionReceiveAchieveRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Expedition.ExpeditionReceiveAchieveRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Expedition.ExpeditionReceiveAchieveRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionReceiveAchieveRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    passcount: jspb.Message.getFieldWithDefault(msg, 1, 0),
    getachieveids: jspb.Message.getFieldWithDefault(msg, 2, ""),
    basegetgameresourcelist: (f = msg.getBasegetgameresourcelist()) && Resource_pb.ResourceToClientModel.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Expedition.ExpeditionReceiveAchieveRes}
 */
proto.PbModel.Expedition.ExpeditionReceiveAchieveRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Expedition.ExpeditionReceiveAchieveRes;
  return proto.PbModel.Expedition.ExpeditionReceiveAchieveRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Expedition.ExpeditionReceiveAchieveRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Expedition.ExpeditionReceiveAchieveRes}
 */
proto.PbModel.Expedition.ExpeditionReceiveAchieveRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPasscount(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setGetachieveids(value);
      break;
    case 3:
      var value = new Resource_pb.ResourceToClientModel;
      reader.readMessage(value,Resource_pb.ResourceToClientModel.deserializeBinaryFromReader);
      msg.setBasegetgameresourcelist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Expedition.ExpeditionReceiveAchieveRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Expedition.ExpeditionReceiveAchieveRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Expedition.ExpeditionReceiveAchieveRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionReceiveAchieveRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPasscount();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getGetachieveids();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBasegetgameresourcelist();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      Resource_pb.ResourceToClientModel.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 PassCount = 1;
 * @return {number}
 */
proto.PbModel.Expedition.ExpeditionReceiveAchieveRes.prototype.getPasscount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Expedition.ExpeditionReceiveAchieveRes} returns this
 */
proto.PbModel.Expedition.ExpeditionReceiveAchieveRes.prototype.setPasscount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string GetAchieveIds = 2;
 * @return {string}
 */
proto.PbModel.Expedition.ExpeditionReceiveAchieveRes.prototype.getGetachieveids = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Expedition.ExpeditionReceiveAchieveRes} returns this
 */
proto.PbModel.Expedition.ExpeditionReceiveAchieveRes.prototype.setGetachieveids = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional PbModel.Resource.ResourceToClientModel BaseGetGameResourceList = 3;
 * @return {?proto.PbModel.Resource.ResourceToClientModel}
 */
proto.PbModel.Expedition.ExpeditionReceiveAchieveRes.prototype.getBasegetgameresourcelist = function() {
  return /** @type{?proto.PbModel.Resource.ResourceToClientModel} */ (
    jspb.Message.getWrapperField(this, Resource_pb.ResourceToClientModel, 3));
};


/**
 * @param {?proto.PbModel.Resource.ResourceToClientModel|undefined} value
 * @return {!proto.PbModel.Expedition.ExpeditionReceiveAchieveRes} returns this
*/
proto.PbModel.Expedition.ExpeditionReceiveAchieveRes.prototype.setBasegetgameresourcelist = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.Expedition.ExpeditionReceiveAchieveRes} returns this
 */
proto.PbModel.Expedition.ExpeditionReceiveAchieveRes.prototype.clearBasegetgameresourcelist = function() {
  return this.setBasegetgameresourcelist(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.Expedition.ExpeditionReceiveAchieveRes.prototype.hasBasegetgameresourcelist = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Expedition.ExpeditionShopBuyReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Expedition.ExpeditionShopBuyReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Expedition.ExpeditionShopBuyReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionShopBuyReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    shopid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Expedition.ExpeditionShopBuyReq}
 */
proto.PbModel.Expedition.ExpeditionShopBuyReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Expedition.ExpeditionShopBuyReq;
  return proto.PbModel.Expedition.ExpeditionShopBuyReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Expedition.ExpeditionShopBuyReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Expedition.ExpeditionShopBuyReq}
 */
proto.PbModel.Expedition.ExpeditionShopBuyReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setShopid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Expedition.ExpeditionShopBuyReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Expedition.ExpeditionShopBuyReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Expedition.ExpeditionShopBuyReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionShopBuyReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getShopid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 ShopId = 1;
 * @return {number}
 */
proto.PbModel.Expedition.ExpeditionShopBuyReq.prototype.getShopid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Expedition.ExpeditionShopBuyReq} returns this
 */
proto.PbModel.Expedition.ExpeditionShopBuyReq.prototype.setShopid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Expedition.ExpeditionShopBuyRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Expedition.ExpeditionShopBuyRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Expedition.ExpeditionShopBuyRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionShopBuyRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    info: (f = msg.getInfo()) && proto.PbModel.Expedition.ExpeditionGetShopInfoRes.toObject(includeInstance, f),
    basegetgameresourcelist: (f = msg.getBasegetgameresourcelist()) && Resource_pb.ResourceToClientModel.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Expedition.ExpeditionShopBuyRes}
 */
proto.PbModel.Expedition.ExpeditionShopBuyRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Expedition.ExpeditionShopBuyRes;
  return proto.PbModel.Expedition.ExpeditionShopBuyRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Expedition.ExpeditionShopBuyRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Expedition.ExpeditionShopBuyRes}
 */
proto.PbModel.Expedition.ExpeditionShopBuyRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PbModel.Expedition.ExpeditionGetShopInfoRes;
      reader.readMessage(value,proto.PbModel.Expedition.ExpeditionGetShopInfoRes.deserializeBinaryFromReader);
      msg.setInfo(value);
      break;
    case 2:
      var value = new Resource_pb.ResourceToClientModel;
      reader.readMessage(value,Resource_pb.ResourceToClientModel.deserializeBinaryFromReader);
      msg.setBasegetgameresourcelist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Expedition.ExpeditionShopBuyRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Expedition.ExpeditionShopBuyRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Expedition.ExpeditionShopBuyRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionShopBuyRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.PbModel.Expedition.ExpeditionGetShopInfoRes.serializeBinaryToWriter
    );
  }
  f = message.getBasegetgameresourcelist();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      Resource_pb.ResourceToClientModel.serializeBinaryToWriter
    );
  }
};


/**
 * optional ExpeditionGetShopInfoRes Info = 1;
 * @return {?proto.PbModel.Expedition.ExpeditionGetShopInfoRes}
 */
proto.PbModel.Expedition.ExpeditionShopBuyRes.prototype.getInfo = function() {
  return /** @type{?proto.PbModel.Expedition.ExpeditionGetShopInfoRes} */ (
    jspb.Message.getWrapperField(this, proto.PbModel.Expedition.ExpeditionGetShopInfoRes, 1));
};


/**
 * @param {?proto.PbModel.Expedition.ExpeditionGetShopInfoRes|undefined} value
 * @return {!proto.PbModel.Expedition.ExpeditionShopBuyRes} returns this
*/
proto.PbModel.Expedition.ExpeditionShopBuyRes.prototype.setInfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.Expedition.ExpeditionShopBuyRes} returns this
 */
proto.PbModel.Expedition.ExpeditionShopBuyRes.prototype.clearInfo = function() {
  return this.setInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.Expedition.ExpeditionShopBuyRes.prototype.hasInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional PbModel.Resource.ResourceToClientModel BaseGetGameResourceList = 2;
 * @return {?proto.PbModel.Resource.ResourceToClientModel}
 */
proto.PbModel.Expedition.ExpeditionShopBuyRes.prototype.getBasegetgameresourcelist = function() {
  return /** @type{?proto.PbModel.Resource.ResourceToClientModel} */ (
    jspb.Message.getWrapperField(this, Resource_pb.ResourceToClientModel, 2));
};


/**
 * @param {?proto.PbModel.Resource.ResourceToClientModel|undefined} value
 * @return {!proto.PbModel.Expedition.ExpeditionShopBuyRes} returns this
*/
proto.PbModel.Expedition.ExpeditionShopBuyRes.prototype.setBasegetgameresourcelist = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.Expedition.ExpeditionShopBuyRes} returns this
 */
proto.PbModel.Expedition.ExpeditionShopBuyRes.prototype.clearBasegetgameresourcelist = function() {
  return this.setBasegetgameresourcelist(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.Expedition.ExpeditionShopBuyRes.prototype.hasBasegetgameresourcelist = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Expedition.ExpeditionUseHpGoodsReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Expedition.ExpeditionUseHpGoodsReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Expedition.ExpeditionUseHpGoodsReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionUseHpGoodsReq.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Expedition.ExpeditionUseHpGoodsReq}
 */
proto.PbModel.Expedition.ExpeditionUseHpGoodsReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Expedition.ExpeditionUseHpGoodsReq;
  return proto.PbModel.Expedition.ExpeditionUseHpGoodsReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Expedition.ExpeditionUseHpGoodsReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Expedition.ExpeditionUseHpGoodsReq}
 */
proto.PbModel.Expedition.ExpeditionUseHpGoodsReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Expedition.ExpeditionUseHpGoodsReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Expedition.ExpeditionUseHpGoodsReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Expedition.ExpeditionUseHpGoodsReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionUseHpGoodsReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Expedition.ExpeditionUseHpGoodsRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Expedition.ExpeditionUseHpGoodsRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Expedition.ExpeditionUseHpGoodsRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionUseHpGoodsRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    hpcount: jspb.Message.getFieldWithDefault(msg, 1, 0),
    infosMap: (f = msg.getInfosMap()) ? f.toObject(includeInstance, proto.PbModel.Fight.FightRemainHp.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Expedition.ExpeditionUseHpGoodsRes}
 */
proto.PbModel.Expedition.ExpeditionUseHpGoodsRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Expedition.ExpeditionUseHpGoodsRes;
  return proto.PbModel.Expedition.ExpeditionUseHpGoodsRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Expedition.ExpeditionUseHpGoodsRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Expedition.ExpeditionUseHpGoodsRes}
 */
proto.PbModel.Expedition.ExpeditionUseHpGoodsRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHpcount(value);
      break;
    case 2:
      var value = msg.getInfosMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.PbModel.Fight.FightRemainHp.deserializeBinaryFromReader, "", new proto.PbModel.Fight.FightRemainHp());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Expedition.ExpeditionUseHpGoodsRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Expedition.ExpeditionUseHpGoodsRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Expedition.ExpeditionUseHpGoodsRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionUseHpGoodsRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHpcount();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getInfosMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.PbModel.Fight.FightRemainHp.serializeBinaryToWriter);
  }
};


/**
 * optional int32 HPCount = 1;
 * @return {number}
 */
proto.PbModel.Expedition.ExpeditionUseHpGoodsRes.prototype.getHpcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Expedition.ExpeditionUseHpGoodsRes} returns this
 */
proto.PbModel.Expedition.ExpeditionUseHpGoodsRes.prototype.setHpcount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * map<string, PbModel.Fight.FightRemainHp> Infos = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.PbModel.Fight.FightRemainHp>}
 */
proto.PbModel.Expedition.ExpeditionUseHpGoodsRes.prototype.getInfosMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.PbModel.Fight.FightRemainHp>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      proto.PbModel.Fight.FightRemainHp));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.PbModel.Expedition.ExpeditionUseHpGoodsRes} returns this
 */
proto.PbModel.Expedition.ExpeditionUseHpGoodsRes.prototype.clearInfosMap = function() {
  this.getInfosMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Expedition.ExpeditionPushInfoRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Expedition.ExpeditionPushInfoRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Expedition.ExpeditionPushInfoRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionPushInfoRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    passcount: jspb.Message.getFieldWithDefault(msg, 1, 0),
    bossid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    bossisopen: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Expedition.ExpeditionPushInfoRes}
 */
proto.PbModel.Expedition.ExpeditionPushInfoRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Expedition.ExpeditionPushInfoRes;
  return proto.PbModel.Expedition.ExpeditionPushInfoRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Expedition.ExpeditionPushInfoRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Expedition.ExpeditionPushInfoRes}
 */
proto.PbModel.Expedition.ExpeditionPushInfoRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPasscount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBossid(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBossisopen(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Expedition.ExpeditionPushInfoRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Expedition.ExpeditionPushInfoRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Expedition.ExpeditionPushInfoRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionPushInfoRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPasscount();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getBossid();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getBossisopen();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional int32 PassCount = 1;
 * @return {number}
 */
proto.PbModel.Expedition.ExpeditionPushInfoRes.prototype.getPasscount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Expedition.ExpeditionPushInfoRes} returns this
 */
proto.PbModel.Expedition.ExpeditionPushInfoRes.prototype.setPasscount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 BossId = 2;
 * @return {number}
 */
proto.PbModel.Expedition.ExpeditionPushInfoRes.prototype.getBossid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Expedition.ExpeditionPushInfoRes} returns this
 */
proto.PbModel.Expedition.ExpeditionPushInfoRes.prototype.setBossid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool BossIsOpen = 3;
 * @return {boolean}
 */
proto.PbModel.Expedition.ExpeditionPushInfoRes.prototype.getBossisopen = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PbModel.Expedition.ExpeditionPushInfoRes} returns this
 */
proto.PbModel.Expedition.ExpeditionPushInfoRes.prototype.setBossisopen = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


goog.object.extend(exports, proto.PbModel.Expedition);
