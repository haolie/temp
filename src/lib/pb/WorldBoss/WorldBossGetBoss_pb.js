// source: WorldBoss/WorldBossGetBoss.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var Player_PlayerCommonInfo_pb = require('../Player/PlayerCommonInfo_pb.js');
goog.object.extend(proto, Player_PlayerCommonInfo_pb);
goog.exportSymbol('proto.PbModel.WorldBoss.BossModel', null, global);
goog.exportSymbol('proto.PbModel.WorldBoss.BossReward', null, global);
goog.exportSymbol('proto.PbModel.WorldBoss.PlayerData', null, global);
goog.exportSymbol('proto.PbModel.WorldBoss.PlayerRank', null, global);
goog.exportSymbol('proto.PbModel.WorldBoss.WorldBossGetBossReq', null, global);
goog.exportSymbol('proto.PbModel.WorldBoss.WorldBossGetBossRes', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.WorldBoss.WorldBossGetBossReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.WorldBoss.WorldBossGetBossReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.WorldBoss.WorldBossGetBossReq.displayName = 'proto.PbModel.WorldBoss.WorldBossGetBossReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.WorldBoss.WorldBossGetBossRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.WorldBoss.WorldBossGetBossRes.repeatedFields_, null);
};
goog.inherits(proto.PbModel.WorldBoss.WorldBossGetBossRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.WorldBoss.WorldBossGetBossRes.displayName = 'proto.PbModel.WorldBoss.WorldBossGetBossRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.WorldBoss.BossModel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.WorldBoss.BossModel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.WorldBoss.BossModel.displayName = 'proto.PbModel.WorldBoss.BossModel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.WorldBoss.PlayerRank = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.WorldBoss.PlayerRank, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.WorldBoss.PlayerRank.displayName = 'proto.PbModel.WorldBoss.PlayerRank';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.WorldBoss.PlayerData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.WorldBoss.PlayerData.repeatedFields_, null);
};
goog.inherits(proto.PbModel.WorldBoss.PlayerData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.WorldBoss.PlayerData.displayName = 'proto.PbModel.WorldBoss.PlayerData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.WorldBoss.BossReward = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.WorldBoss.BossReward, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.WorldBoss.BossReward.displayName = 'proto.PbModel.WorldBoss.BossReward';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.WorldBoss.WorldBossGetBossReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.WorldBoss.WorldBossGetBossReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.WorldBoss.WorldBossGetBossReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.WorldBoss.WorldBossGetBossReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    stagestr: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.WorldBoss.WorldBossGetBossReq}
 */
proto.PbModel.WorldBoss.WorldBossGetBossReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.WorldBoss.WorldBossGetBossReq;
  return proto.PbModel.WorldBoss.WorldBossGetBossReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.WorldBoss.WorldBossGetBossReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.WorldBoss.WorldBossGetBossReq}
 */
proto.PbModel.WorldBoss.WorldBossGetBossReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStagestr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.WorldBoss.WorldBossGetBossReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.WorldBoss.WorldBossGetBossReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.WorldBoss.WorldBossGetBossReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.WorldBoss.WorldBossGetBossReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStagestr();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string stageStr = 1;
 * @return {string}
 */
proto.PbModel.WorldBoss.WorldBossGetBossReq.prototype.getStagestr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.WorldBoss.WorldBossGetBossReq} returns this
 */
proto.PbModel.WorldBoss.WorldBossGetBossReq.prototype.setStagestr = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.WorldBoss.WorldBossGetBossRes.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.WorldBoss.WorldBossGetBossRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.WorldBoss.WorldBossGetBossRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.WorldBoss.WorldBossGetBossRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.WorldBoss.WorldBossGetBossRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    bossinfosList: jspb.Message.toObjectList(msg.getBossinfosList(),
    proto.PbModel.WorldBoss.BossModel.toObject, includeInstance),
    playerdata: (f = msg.getPlayerdata()) && proto.PbModel.WorldBoss.PlayerData.toObject(includeInstance, f),
    starttime: jspb.Message.getFieldWithDefault(msg, 3, 0),
    endtime: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.WorldBoss.WorldBossGetBossRes}
 */
proto.PbModel.WorldBoss.WorldBossGetBossRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.WorldBoss.WorldBossGetBossRes;
  return proto.PbModel.WorldBoss.WorldBossGetBossRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.WorldBoss.WorldBossGetBossRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.WorldBoss.WorldBossGetBossRes}
 */
proto.PbModel.WorldBoss.WorldBossGetBossRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PbModel.WorldBoss.BossModel;
      reader.readMessage(value,proto.PbModel.WorldBoss.BossModel.deserializeBinaryFromReader);
      msg.addBossinfos(value);
      break;
    case 2:
      var value = new proto.PbModel.WorldBoss.PlayerData;
      reader.readMessage(value,proto.PbModel.WorldBoss.PlayerData.deserializeBinaryFromReader);
      msg.setPlayerdata(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStarttime(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEndtime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.WorldBoss.WorldBossGetBossRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.WorldBoss.WorldBossGetBossRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.WorldBoss.WorldBossGetBossRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.WorldBoss.WorldBossGetBossRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBossinfosList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.PbModel.WorldBoss.BossModel.serializeBinaryToWriter
    );
  }
  f = message.getPlayerdata();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.PbModel.WorldBoss.PlayerData.serializeBinaryToWriter
    );
  }
  f = message.getStarttime();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getEndtime();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
};


/**
 * repeated BossModel BossInfos = 1;
 * @return {!Array<!proto.PbModel.WorldBoss.BossModel>}
 */
proto.PbModel.WorldBoss.WorldBossGetBossRes.prototype.getBossinfosList = function() {
  return /** @type{!Array<!proto.PbModel.WorldBoss.BossModel>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.WorldBoss.BossModel, 1));
};


/**
 * @param {!Array<!proto.PbModel.WorldBoss.BossModel>} value
 * @return {!proto.PbModel.WorldBoss.WorldBossGetBossRes} returns this
*/
proto.PbModel.WorldBoss.WorldBossGetBossRes.prototype.setBossinfosList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.PbModel.WorldBoss.BossModel=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.WorldBoss.BossModel}
 */
proto.PbModel.WorldBoss.WorldBossGetBossRes.prototype.addBossinfos = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.PbModel.WorldBoss.BossModel, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.WorldBoss.WorldBossGetBossRes} returns this
 */
proto.PbModel.WorldBoss.WorldBossGetBossRes.prototype.clearBossinfosList = function() {
  return this.setBossinfosList([]);
};


/**
 * optional PlayerData PlayerData = 2;
 * @return {?proto.PbModel.WorldBoss.PlayerData}
 */
proto.PbModel.WorldBoss.WorldBossGetBossRes.prototype.getPlayerdata = function() {
  return /** @type{?proto.PbModel.WorldBoss.PlayerData} */ (
    jspb.Message.getWrapperField(this, proto.PbModel.WorldBoss.PlayerData, 2));
};


/**
 * @param {?proto.PbModel.WorldBoss.PlayerData|undefined} value
 * @return {!proto.PbModel.WorldBoss.WorldBossGetBossRes} returns this
*/
proto.PbModel.WorldBoss.WorldBossGetBossRes.prototype.setPlayerdata = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.WorldBoss.WorldBossGetBossRes} returns this
 */
proto.PbModel.WorldBoss.WorldBossGetBossRes.prototype.clearPlayerdata = function() {
  return this.setPlayerdata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.WorldBoss.WorldBossGetBossRes.prototype.hasPlayerdata = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int64 StartTime = 3;
 * @return {number}
 */
proto.PbModel.WorldBoss.WorldBossGetBossRes.prototype.getStarttime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.WorldBoss.WorldBossGetBossRes} returns this
 */
proto.PbModel.WorldBoss.WorldBossGetBossRes.prototype.setStarttime = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 EndTime = 4;
 * @return {number}
 */
proto.PbModel.WorldBoss.WorldBossGetBossRes.prototype.getEndtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.WorldBoss.WorldBossGetBossRes} returns this
 */
proto.PbModel.WorldBoss.WorldBossGetBossRes.prototype.setEndtime = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.WorldBoss.BossModel.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.WorldBoss.BossModel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.WorldBoss.BossModel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.WorldBoss.BossModel.toObject = function(includeInstance, msg) {
  var f, obj = {
    bossid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    curhpper: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    refreshtime: jspb.Message.getFieldWithDefault(msg, 3, 0),
    fightnum: jspb.Message.getFieldWithDefault(msg, 4, 0),
    startfighttime: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.WorldBoss.BossModel}
 */
proto.PbModel.WorldBoss.BossModel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.WorldBoss.BossModel;
  return proto.PbModel.WorldBoss.BossModel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.WorldBoss.BossModel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.WorldBoss.BossModel}
 */
proto.PbModel.WorldBoss.BossModel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBossid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCurhpper(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRefreshtime(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFightnum(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStartfighttime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.WorldBoss.BossModel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.WorldBoss.BossModel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.WorldBoss.BossModel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.WorldBoss.BossModel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBossid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getCurhpper();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getRefreshtime();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getFightnum();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getStartfighttime();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
};


/**
 * optional int32 BossId = 1;
 * @return {number}
 */
proto.PbModel.WorldBoss.BossModel.prototype.getBossid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.WorldBoss.BossModel} returns this
 */
proto.PbModel.WorldBoss.BossModel.prototype.setBossid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional double CurHpPer = 2;
 * @return {number}
 */
proto.PbModel.WorldBoss.BossModel.prototype.getCurhpper = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.WorldBoss.BossModel} returns this
 */
proto.PbModel.WorldBoss.BossModel.prototype.setCurhpper = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional int64 RefreshTime = 3;
 * @return {number}
 */
proto.PbModel.WorldBoss.BossModel.prototype.getRefreshtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.WorldBoss.BossModel} returns this
 */
proto.PbModel.WorldBoss.BossModel.prototype.setRefreshtime = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 FightNum = 4;
 * @return {number}
 */
proto.PbModel.WorldBoss.BossModel.prototype.getFightnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.WorldBoss.BossModel} returns this
 */
proto.PbModel.WorldBoss.BossModel.prototype.setFightnum = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 StartFightTime = 5;
 * @return {number}
 */
proto.PbModel.WorldBoss.BossModel.prototype.getStartfighttime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.WorldBoss.BossModel} returns this
 */
proto.PbModel.WorldBoss.BossModel.prototype.setStartfighttime = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.WorldBoss.PlayerRank.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.WorldBoss.PlayerRank.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.WorldBoss.PlayerRank} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.WorldBoss.PlayerRank.toObject = function(includeInstance, msg) {
  var f, obj = {
    playerid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    dmg: jspb.Message.getFieldWithDefault(msg, 2, 0),
    formation: jspb.Message.getFieldWithDefault(msg, 3, ""),
    statdata: jspb.Message.getFieldWithDefault(msg, 4, ""),
    bossid: jspb.Message.getFieldWithDefault(msg, 5, 0),
    playercommoninfo: (f = msg.getPlayercommoninfo()) && Player_PlayerCommonInfo_pb.PlayerCommonInfoRes.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.WorldBoss.PlayerRank}
 */
proto.PbModel.WorldBoss.PlayerRank.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.WorldBoss.PlayerRank;
  return proto.PbModel.WorldBoss.PlayerRank.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.WorldBoss.PlayerRank} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.WorldBoss.PlayerRank}
 */
proto.PbModel.WorldBoss.PlayerRank.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlayerid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDmg(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFormation(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatdata(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBossid(value);
      break;
    case 6:
      var value = new Player_PlayerCommonInfo_pb.PlayerCommonInfoRes;
      reader.readMessage(value,Player_PlayerCommonInfo_pb.PlayerCommonInfoRes.deserializeBinaryFromReader);
      msg.setPlayercommoninfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.WorldBoss.PlayerRank.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.WorldBoss.PlayerRank.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.WorldBoss.PlayerRank} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.WorldBoss.PlayerRank.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlayerid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDmg();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getFormation();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStatdata();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getBossid();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getPlayercommoninfo();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      Player_PlayerCommonInfo_pb.PlayerCommonInfoRes.serializeBinaryToWriter
    );
  }
};


/**
 * optional string PlayerId = 1;
 * @return {string}
 */
proto.PbModel.WorldBoss.PlayerRank.prototype.getPlayerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.WorldBoss.PlayerRank} returns this
 */
proto.PbModel.WorldBoss.PlayerRank.prototype.setPlayerid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 Dmg = 2;
 * @return {number}
 */
proto.PbModel.WorldBoss.PlayerRank.prototype.getDmg = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.WorldBoss.PlayerRank} returns this
 */
proto.PbModel.WorldBoss.PlayerRank.prototype.setDmg = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string Formation = 3;
 * @return {string}
 */
proto.PbModel.WorldBoss.PlayerRank.prototype.getFormation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.WorldBoss.PlayerRank} returns this
 */
proto.PbModel.WorldBoss.PlayerRank.prototype.setFormation = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string StatData = 4;
 * @return {string}
 */
proto.PbModel.WorldBoss.PlayerRank.prototype.getStatdata = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.WorldBoss.PlayerRank} returns this
 */
proto.PbModel.WorldBoss.PlayerRank.prototype.setStatdata = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 BossId = 5;
 * @return {number}
 */
proto.PbModel.WorldBoss.PlayerRank.prototype.getBossid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.WorldBoss.PlayerRank} returns this
 */
proto.PbModel.WorldBoss.PlayerRank.prototype.setBossid = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional PbModel.Player.PlayerCommonInfoRes PlayerCommonInfo = 6;
 * @return {?proto.PbModel.Player.PlayerCommonInfoRes}
 */
proto.PbModel.WorldBoss.PlayerRank.prototype.getPlayercommoninfo = function() {
  return /** @type{?proto.PbModel.Player.PlayerCommonInfoRes} */ (
    jspb.Message.getWrapperField(this, Player_PlayerCommonInfo_pb.PlayerCommonInfoRes, 6));
};


/**
 * @param {?proto.PbModel.Player.PlayerCommonInfoRes|undefined} value
 * @return {!proto.PbModel.WorldBoss.PlayerRank} returns this
*/
proto.PbModel.WorldBoss.PlayerRank.prototype.setPlayercommoninfo = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.WorldBoss.PlayerRank} returns this
 */
proto.PbModel.WorldBoss.PlayerRank.prototype.clearPlayercommoninfo = function() {
  return this.setPlayercommoninfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.WorldBoss.PlayerRank.prototype.hasPlayercommoninfo = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.WorldBoss.PlayerData.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.WorldBoss.PlayerData.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.WorldBoss.PlayerData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.WorldBoss.PlayerData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.WorldBoss.PlayerData.toObject = function(includeInstance, msg) {
  var f, obj = {
    bossid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    challengenum: jspb.Message.getFieldWithDefault(msg, 2, 0),
    awardstatusdictMap: (f = msg.getAwardstatusdictMap()) ? f.toObject(includeInstance, proto.PbModel.WorldBoss.BossReward.toObject) : [],
    lastfighttime: jspb.Message.getFieldWithDefault(msg, 4, 0),
    attentionbossidlistList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.WorldBoss.PlayerData}
 */
proto.PbModel.WorldBoss.PlayerData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.WorldBoss.PlayerData;
  return proto.PbModel.WorldBoss.PlayerData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.WorldBoss.PlayerData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.WorldBoss.PlayerData}
 */
proto.PbModel.WorldBoss.PlayerData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBossid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setChallengenum(value);
      break;
    case 3:
      var value = msg.getAwardstatusdictMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readMessage, proto.PbModel.WorldBoss.BossReward.deserializeBinaryFromReader, 0, new proto.PbModel.WorldBoss.BossReward());
         });
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLastfighttime(value);
      break;
    case 5:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setAttentionbossidlistList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.WorldBoss.PlayerData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.WorldBoss.PlayerData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.WorldBoss.PlayerData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.WorldBoss.PlayerData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBossid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getChallengenum();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getAwardstatusdictMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeMessage, proto.PbModel.WorldBoss.BossReward.serializeBinaryToWriter);
  }
  f = message.getLastfighttime();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getAttentionbossidlistList();
  if (f.length > 0) {
    writer.writePackedInt32(
      5,
      f
    );
  }
};


/**
 * optional int32 BossId = 1;
 * @return {number}
 */
proto.PbModel.WorldBoss.PlayerData.prototype.getBossid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.WorldBoss.PlayerData} returns this
 */
proto.PbModel.WorldBoss.PlayerData.prototype.setBossid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 ChallengeNum = 2;
 * @return {number}
 */
proto.PbModel.WorldBoss.PlayerData.prototype.getChallengenum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.WorldBoss.PlayerData} returns this
 */
proto.PbModel.WorldBoss.PlayerData.prototype.setChallengenum = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * map<int32, BossReward> AwardStatusDict = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,!proto.PbModel.WorldBoss.BossReward>}
 */
proto.PbModel.WorldBoss.PlayerData.prototype.getAwardstatusdictMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,!proto.PbModel.WorldBoss.BossReward>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      proto.PbModel.WorldBoss.BossReward));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.PbModel.WorldBoss.PlayerData} returns this
 */
proto.PbModel.WorldBoss.PlayerData.prototype.clearAwardstatusdictMap = function() {
  this.getAwardstatusdictMap().clear();
  return this;};


/**
 * optional int64 LastFightTime = 4;
 * @return {number}
 */
proto.PbModel.WorldBoss.PlayerData.prototype.getLastfighttime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.WorldBoss.PlayerData} returns this
 */
proto.PbModel.WorldBoss.PlayerData.prototype.setLastfighttime = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * repeated int32 AttentionBossIdList = 5;
 * @return {!Array<number>}
 */
proto.PbModel.WorldBoss.PlayerData.prototype.getAttentionbossidlistList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.PbModel.WorldBoss.PlayerData} returns this
 */
proto.PbModel.WorldBoss.PlayerData.prototype.setAttentionbossidlistList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.PbModel.WorldBoss.PlayerData} returns this
 */
proto.PbModel.WorldBoss.PlayerData.prototype.addAttentionbossidlist = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.WorldBoss.PlayerData} returns this
 */
proto.PbModel.WorldBoss.PlayerData.prototype.clearAttentionbossidlistList = function() {
  return this.setAttentionbossidlistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.WorldBoss.BossReward.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.WorldBoss.BossReward.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.WorldBoss.BossReward} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.WorldBoss.BossReward.toObject = function(includeInstance, msg) {
  var f, obj = {
    rank: jspb.Message.getFieldWithDefault(msg, 1, 0),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0),
    reward: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.WorldBoss.BossReward}
 */
proto.PbModel.WorldBoss.BossReward.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.WorldBoss.BossReward;
  return proto.PbModel.WorldBoss.BossReward.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.WorldBoss.BossReward} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.WorldBoss.BossReward}
 */
proto.PbModel.WorldBoss.BossReward.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRank(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setReward(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.WorldBoss.BossReward.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.WorldBoss.BossReward.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.WorldBoss.BossReward} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.WorldBoss.BossReward.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRank();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getReward();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int32 Rank = 1;
 * @return {number}
 */
proto.PbModel.WorldBoss.BossReward.prototype.getRank = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.WorldBoss.BossReward} returns this
 */
proto.PbModel.WorldBoss.BossReward.prototype.setRank = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 Status = 2;
 * @return {number}
 */
proto.PbModel.WorldBoss.BossReward.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.WorldBoss.BossReward} returns this
 */
proto.PbModel.WorldBoss.BossReward.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string Reward = 3;
 * @return {string}
 */
proto.PbModel.WorldBoss.BossReward.prototype.getReward = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.WorldBoss.BossReward} returns this
 */
proto.PbModel.WorldBoss.BossReward.prototype.setReward = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


goog.object.extend(exports, proto.PbModel.WorldBoss);
