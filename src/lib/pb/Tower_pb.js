// source: Tower.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var Resource_pb = require('./Resource_pb.js');
goog.object.extend(proto, Resource_pb);
var Player_pb = require('./Player_pb.js');
goog.object.extend(proto, Player_pb);
var Team_pb = require('./Team_pb.js');
goog.object.extend(proto, Team_pb);
goog.exportSymbol('proto.PbModel.Tower.TowerAutoFightReq', null, global);
goog.exportSymbol('proto.PbModel.Tower.TowerAutoFightRes', null, global);
goog.exportSymbol('proto.PbModel.Tower.TowerBuyStaminaReq', null, global);
goog.exportSymbol('proto.PbModel.Tower.TowerBuyStaminaRes', null, global);
goog.exportSymbol('proto.PbModel.Tower.TowerDrawProgressRewardReq', null, global);
goog.exportSymbol('proto.PbModel.Tower.TowerDrawProgressRewardRes', null, global);
goog.exportSymbol('proto.PbModel.Tower.TowerFightReq', null, global);
goog.exportSymbol('proto.PbModel.Tower.TowerFightRes', null, global);
goog.exportSymbol('proto.PbModel.Tower.TowerGetFightInfoReq', null, global);
goog.exportSymbol('proto.PbModel.Tower.TowerGetFightInfoRes', null, global);
goog.exportSymbol('proto.PbModel.Tower.TowerGetInfo', null, global);
goog.exportSymbol('proto.PbModel.Tower.TowerGetInfoReq', null, global);
goog.exportSymbol('proto.PbModel.Tower.TowerGetInfoRes', null, global);
goog.exportSymbol('proto.PbModel.Tower.TowerGetRankReq', null, global);
goog.exportSymbol('proto.PbModel.Tower.TowerGetRankRes', null, global);
goog.exportSymbol('proto.PbModel.Tower.TowerJumpNodeIdForDebugReq', null, global);
goog.exportSymbol('proto.PbModel.Tower.TowerJumpNodeIdForDebugRes', null, global);
goog.exportSymbol('proto.PbModel.Tower.TowerObj', null, global);
goog.exportSymbol('proto.PbModel.Tower.TowerRankInfo', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Tower.TowerAutoFightReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.Tower.TowerAutoFightReq.repeatedFields_, null);
};
goog.inherits(proto.PbModel.Tower.TowerAutoFightReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Tower.TowerAutoFightReq.displayName = 'proto.PbModel.Tower.TowerAutoFightReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Tower.TowerAutoFightRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.Tower.TowerAutoFightRes.repeatedFields_, null);
};
goog.inherits(proto.PbModel.Tower.TowerAutoFightRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Tower.TowerAutoFightRes.displayName = 'proto.PbModel.Tower.TowerAutoFightRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Tower.TowerBuyStaminaReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Tower.TowerBuyStaminaReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Tower.TowerBuyStaminaReq.displayName = 'proto.PbModel.Tower.TowerBuyStaminaReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Tower.TowerBuyStaminaRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Tower.TowerBuyStaminaRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Tower.TowerBuyStaminaRes.displayName = 'proto.PbModel.Tower.TowerBuyStaminaRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Tower.TowerDrawProgressRewardReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.Tower.TowerDrawProgressRewardReq.repeatedFields_, null);
};
goog.inherits(proto.PbModel.Tower.TowerDrawProgressRewardReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Tower.TowerDrawProgressRewardReq.displayName = 'proto.PbModel.Tower.TowerDrawProgressRewardReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Tower.TowerDrawProgressRewardRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Tower.TowerDrawProgressRewardRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Tower.TowerDrawProgressRewardRes.displayName = 'proto.PbModel.Tower.TowerDrawProgressRewardRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Tower.TowerFightReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.Tower.TowerFightReq.repeatedFields_, null);
};
goog.inherits(proto.PbModel.Tower.TowerFightReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Tower.TowerFightReq.displayName = 'proto.PbModel.Tower.TowerFightReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Tower.TowerFightRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.Tower.TowerFightRes.repeatedFields_, null);
};
goog.inherits(proto.PbModel.Tower.TowerFightRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Tower.TowerFightRes.displayName = 'proto.PbModel.Tower.TowerFightRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Tower.TowerGetFightInfoReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Tower.TowerGetFightInfoReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Tower.TowerGetFightInfoReq.displayName = 'proto.PbModel.Tower.TowerGetFightInfoReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Tower.TowerGetFightInfoRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Tower.TowerGetFightInfoRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Tower.TowerGetFightInfoRes.displayName = 'proto.PbModel.Tower.TowerGetFightInfoRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Tower.TowerGetInfoReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Tower.TowerGetInfoReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Tower.TowerGetInfoReq.displayName = 'proto.PbModel.Tower.TowerGetInfoReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Tower.TowerGetInfoRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.Tower.TowerGetInfoRes.repeatedFields_, null);
};
goog.inherits(proto.PbModel.Tower.TowerGetInfoRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Tower.TowerGetInfoRes.displayName = 'proto.PbModel.Tower.TowerGetInfoRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Tower.TowerObj = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Tower.TowerObj, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Tower.TowerObj.displayName = 'proto.PbModel.Tower.TowerObj';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Tower.TowerRankInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Tower.TowerRankInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Tower.TowerRankInfo.displayName = 'proto.PbModel.Tower.TowerRankInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Tower.TowerGetInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.Tower.TowerGetInfo.repeatedFields_, null);
};
goog.inherits(proto.PbModel.Tower.TowerGetInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Tower.TowerGetInfo.displayName = 'proto.PbModel.Tower.TowerGetInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Tower.TowerGetRankReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Tower.TowerGetRankReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Tower.TowerGetRankReq.displayName = 'proto.PbModel.Tower.TowerGetRankReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Tower.TowerGetRankRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.Tower.TowerGetRankRes.repeatedFields_, null);
};
goog.inherits(proto.PbModel.Tower.TowerGetRankRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Tower.TowerGetRankRes.displayName = 'proto.PbModel.Tower.TowerGetRankRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Tower.TowerJumpNodeIdForDebugReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Tower.TowerJumpNodeIdForDebugReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Tower.TowerJumpNodeIdForDebugReq.displayName = 'proto.PbModel.Tower.TowerJumpNodeIdForDebugReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Tower.TowerJumpNodeIdForDebugRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Tower.TowerJumpNodeIdForDebugRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Tower.TowerJumpNodeIdForDebugRes.displayName = 'proto.PbModel.Tower.TowerJumpNodeIdForDebugRes';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.Tower.TowerAutoFightReq.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Tower.TowerAutoFightReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Tower.TowerAutoFightReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Tower.TowerAutoFightReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Tower.TowerAutoFightReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    teamlistList: jspb.Message.toObjectList(msg.getTeamlistList(),
    Team_pb.Team.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Tower.TowerAutoFightReq}
 */
proto.PbModel.Tower.TowerAutoFightReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Tower.TowerAutoFightReq;
  return proto.PbModel.Tower.TowerAutoFightReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Tower.TowerAutoFightReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Tower.TowerAutoFightReq}
 */
proto.PbModel.Tower.TowerAutoFightReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new Team_pb.Team;
      reader.readMessage(value,Team_pb.Team.deserializeBinaryFromReader);
      msg.addTeamlist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Tower.TowerAutoFightReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Tower.TowerAutoFightReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Tower.TowerAutoFightReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Tower.TowerAutoFightReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTeamlistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      Team_pb.Team.serializeBinaryToWriter
    );
  }
};


/**
 * repeated PbModel.Team.Team TeamList = 1;
 * @return {!Array<!proto.PbModel.Team.Team>}
 */
proto.PbModel.Tower.TowerAutoFightReq.prototype.getTeamlistList = function() {
  return /** @type{!Array<!proto.PbModel.Team.Team>} */ (
    jspb.Message.getRepeatedWrapperField(this, Team_pb.Team, 1));
};


/**
 * @param {!Array<!proto.PbModel.Team.Team>} value
 * @return {!proto.PbModel.Tower.TowerAutoFightReq} returns this
*/
proto.PbModel.Tower.TowerAutoFightReq.prototype.setTeamlistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.PbModel.Team.Team=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.Team.Team}
 */
proto.PbModel.Tower.TowerAutoFightReq.prototype.addTeamlist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.PbModel.Team.Team, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.Tower.TowerAutoFightReq} returns this
 */
proto.PbModel.Tower.TowerAutoFightReq.prototype.clearTeamlistList = function() {
  return this.setTeamlistList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.Tower.TowerAutoFightRes.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Tower.TowerAutoFightRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Tower.TowerAutoFightRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Tower.TowerAutoFightRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Tower.TowerAutoFightRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    towerinfo: (f = msg.getTowerinfo()) && proto.PbModel.Tower.TowerObj.toObject(includeInstance, f),
    basegetgameresourcelist: (f = msg.getBasegetgameresourcelist()) && Resource_pb.ResourceToClientModel.toObject(includeInstance, f),
    fightnoteidstr: jspb.Message.getFieldWithDefault(msg, 3, ""),
    ranklistList: jspb.Message.toObjectList(msg.getRanklistList(),
    proto.PbModel.Tower.TowerRankInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Tower.TowerAutoFightRes}
 */
proto.PbModel.Tower.TowerAutoFightRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Tower.TowerAutoFightRes;
  return proto.PbModel.Tower.TowerAutoFightRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Tower.TowerAutoFightRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Tower.TowerAutoFightRes}
 */
proto.PbModel.Tower.TowerAutoFightRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PbModel.Tower.TowerObj;
      reader.readMessage(value,proto.PbModel.Tower.TowerObj.deserializeBinaryFromReader);
      msg.setTowerinfo(value);
      break;
    case 2:
      var value = new Resource_pb.ResourceToClientModel;
      reader.readMessage(value,Resource_pb.ResourceToClientModel.deserializeBinaryFromReader);
      msg.setBasegetgameresourcelist(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFightnoteidstr(value);
      break;
    case 4:
      var value = new proto.PbModel.Tower.TowerRankInfo;
      reader.readMessage(value,proto.PbModel.Tower.TowerRankInfo.deserializeBinaryFromReader);
      msg.addRanklist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Tower.TowerAutoFightRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Tower.TowerAutoFightRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Tower.TowerAutoFightRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Tower.TowerAutoFightRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTowerinfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.PbModel.Tower.TowerObj.serializeBinaryToWriter
    );
  }
  f = message.getBasegetgameresourcelist();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      Resource_pb.ResourceToClientModel.serializeBinaryToWriter
    );
  }
  f = message.getFightnoteidstr();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRanklistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.PbModel.Tower.TowerRankInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional TowerObj TowerInfo = 1;
 * @return {?proto.PbModel.Tower.TowerObj}
 */
proto.PbModel.Tower.TowerAutoFightRes.prototype.getTowerinfo = function() {
  return /** @type{?proto.PbModel.Tower.TowerObj} */ (
    jspb.Message.getWrapperField(this, proto.PbModel.Tower.TowerObj, 1));
};


/**
 * @param {?proto.PbModel.Tower.TowerObj|undefined} value
 * @return {!proto.PbModel.Tower.TowerAutoFightRes} returns this
*/
proto.PbModel.Tower.TowerAutoFightRes.prototype.setTowerinfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.Tower.TowerAutoFightRes} returns this
 */
proto.PbModel.Tower.TowerAutoFightRes.prototype.clearTowerinfo = function() {
  return this.setTowerinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.Tower.TowerAutoFightRes.prototype.hasTowerinfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional PbModel.Resource.ResourceToClientModel BaseGetGameResourceList = 2;
 * @return {?proto.PbModel.Resource.ResourceToClientModel}
 */
proto.PbModel.Tower.TowerAutoFightRes.prototype.getBasegetgameresourcelist = function() {
  return /** @type{?proto.PbModel.Resource.ResourceToClientModel} */ (
    jspb.Message.getWrapperField(this, Resource_pb.ResourceToClientModel, 2));
};


/**
 * @param {?proto.PbModel.Resource.ResourceToClientModel|undefined} value
 * @return {!proto.PbModel.Tower.TowerAutoFightRes} returns this
*/
proto.PbModel.Tower.TowerAutoFightRes.prototype.setBasegetgameresourcelist = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.Tower.TowerAutoFightRes} returns this
 */
proto.PbModel.Tower.TowerAutoFightRes.prototype.clearBasegetgameresourcelist = function() {
  return this.setBasegetgameresourcelist(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.Tower.TowerAutoFightRes.prototype.hasBasegetgameresourcelist = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string FightNoteIdStr = 3;
 * @return {string}
 */
proto.PbModel.Tower.TowerAutoFightRes.prototype.getFightnoteidstr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Tower.TowerAutoFightRes} returns this
 */
proto.PbModel.Tower.TowerAutoFightRes.prototype.setFightnoteidstr = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated TowerRankInfo RankList = 4;
 * @return {!Array<!proto.PbModel.Tower.TowerRankInfo>}
 */
proto.PbModel.Tower.TowerAutoFightRes.prototype.getRanklistList = function() {
  return /** @type{!Array<!proto.PbModel.Tower.TowerRankInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.Tower.TowerRankInfo, 4));
};


/**
 * @param {!Array<!proto.PbModel.Tower.TowerRankInfo>} value
 * @return {!proto.PbModel.Tower.TowerAutoFightRes} returns this
*/
proto.PbModel.Tower.TowerAutoFightRes.prototype.setRanklistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.PbModel.Tower.TowerRankInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.Tower.TowerRankInfo}
 */
proto.PbModel.Tower.TowerAutoFightRes.prototype.addRanklist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.PbModel.Tower.TowerRankInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.Tower.TowerAutoFightRes} returns this
 */
proto.PbModel.Tower.TowerAutoFightRes.prototype.clearRanklistList = function() {
  return this.setRanklistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Tower.TowerBuyStaminaReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Tower.TowerBuyStaminaReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Tower.TowerBuyStaminaReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Tower.TowerBuyStaminaReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    buynum: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Tower.TowerBuyStaminaReq}
 */
proto.PbModel.Tower.TowerBuyStaminaReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Tower.TowerBuyStaminaReq;
  return proto.PbModel.Tower.TowerBuyStaminaReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Tower.TowerBuyStaminaReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Tower.TowerBuyStaminaReq}
 */
proto.PbModel.Tower.TowerBuyStaminaReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBuynum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Tower.TowerBuyStaminaReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Tower.TowerBuyStaminaReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Tower.TowerBuyStaminaReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Tower.TowerBuyStaminaReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBuynum();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 BuyNum = 1;
 * @return {number}
 */
proto.PbModel.Tower.TowerBuyStaminaReq.prototype.getBuynum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Tower.TowerBuyStaminaReq} returns this
 */
proto.PbModel.Tower.TowerBuyStaminaReq.prototype.setBuynum = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Tower.TowerBuyStaminaRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Tower.TowerBuyStaminaRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Tower.TowerBuyStaminaRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Tower.TowerBuyStaminaRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    towerinfo: (f = msg.getTowerinfo()) && proto.PbModel.Tower.TowerObj.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Tower.TowerBuyStaminaRes}
 */
proto.PbModel.Tower.TowerBuyStaminaRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Tower.TowerBuyStaminaRes;
  return proto.PbModel.Tower.TowerBuyStaminaRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Tower.TowerBuyStaminaRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Tower.TowerBuyStaminaRes}
 */
proto.PbModel.Tower.TowerBuyStaminaRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PbModel.Tower.TowerObj;
      reader.readMessage(value,proto.PbModel.Tower.TowerObj.deserializeBinaryFromReader);
      msg.setTowerinfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Tower.TowerBuyStaminaRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Tower.TowerBuyStaminaRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Tower.TowerBuyStaminaRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Tower.TowerBuyStaminaRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTowerinfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.PbModel.Tower.TowerObj.serializeBinaryToWriter
    );
  }
};


/**
 * optional TowerObj TowerInfo = 1;
 * @return {?proto.PbModel.Tower.TowerObj}
 */
proto.PbModel.Tower.TowerBuyStaminaRes.prototype.getTowerinfo = function() {
  return /** @type{?proto.PbModel.Tower.TowerObj} */ (
    jspb.Message.getWrapperField(this, proto.PbModel.Tower.TowerObj, 1));
};


/**
 * @param {?proto.PbModel.Tower.TowerObj|undefined} value
 * @return {!proto.PbModel.Tower.TowerBuyStaminaRes} returns this
*/
proto.PbModel.Tower.TowerBuyStaminaRes.prototype.setTowerinfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.Tower.TowerBuyStaminaRes} returns this
 */
proto.PbModel.Tower.TowerBuyStaminaRes.prototype.clearTowerinfo = function() {
  return this.setTowerinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.Tower.TowerBuyStaminaRes.prototype.hasTowerinfo = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.Tower.TowerDrawProgressRewardReq.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Tower.TowerDrawProgressRewardReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Tower.TowerDrawProgressRewardReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Tower.TowerDrawProgressRewardReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Tower.TowerDrawProgressRewardReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    totallayerlistList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Tower.TowerDrawProgressRewardReq}
 */
proto.PbModel.Tower.TowerDrawProgressRewardReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Tower.TowerDrawProgressRewardReq;
  return proto.PbModel.Tower.TowerDrawProgressRewardReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Tower.TowerDrawProgressRewardReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Tower.TowerDrawProgressRewardReq}
 */
proto.PbModel.Tower.TowerDrawProgressRewardReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setTotallayerlistList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Tower.TowerDrawProgressRewardReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Tower.TowerDrawProgressRewardReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Tower.TowerDrawProgressRewardReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Tower.TowerDrawProgressRewardReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTotallayerlistList();
  if (f.length > 0) {
    writer.writePackedInt32(
      1,
      f
    );
  }
};


/**
 * repeated int32 TotalLayerList = 1;
 * @return {!Array<number>}
 */
proto.PbModel.Tower.TowerDrawProgressRewardReq.prototype.getTotallayerlistList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.PbModel.Tower.TowerDrawProgressRewardReq} returns this
 */
proto.PbModel.Tower.TowerDrawProgressRewardReq.prototype.setTotallayerlistList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.PbModel.Tower.TowerDrawProgressRewardReq} returns this
 */
proto.PbModel.Tower.TowerDrawProgressRewardReq.prototype.addTotallayerlist = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.Tower.TowerDrawProgressRewardReq} returns this
 */
proto.PbModel.Tower.TowerDrawProgressRewardReq.prototype.clearTotallayerlistList = function() {
  return this.setTotallayerlistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Tower.TowerDrawProgressRewardRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Tower.TowerDrawProgressRewardRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Tower.TowerDrawProgressRewardRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Tower.TowerDrawProgressRewardRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    towerinfo: (f = msg.getTowerinfo()) && proto.PbModel.Tower.TowerObj.toObject(includeInstance, f),
    basegetgameresourcelist: (f = msg.getBasegetgameresourcelist()) && Resource_pb.ResourceToClientModel.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Tower.TowerDrawProgressRewardRes}
 */
proto.PbModel.Tower.TowerDrawProgressRewardRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Tower.TowerDrawProgressRewardRes;
  return proto.PbModel.Tower.TowerDrawProgressRewardRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Tower.TowerDrawProgressRewardRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Tower.TowerDrawProgressRewardRes}
 */
proto.PbModel.Tower.TowerDrawProgressRewardRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PbModel.Tower.TowerObj;
      reader.readMessage(value,proto.PbModel.Tower.TowerObj.deserializeBinaryFromReader);
      msg.setTowerinfo(value);
      break;
    case 2:
      var value = new Resource_pb.ResourceToClientModel;
      reader.readMessage(value,Resource_pb.ResourceToClientModel.deserializeBinaryFromReader);
      msg.setBasegetgameresourcelist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Tower.TowerDrawProgressRewardRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Tower.TowerDrawProgressRewardRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Tower.TowerDrawProgressRewardRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Tower.TowerDrawProgressRewardRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTowerinfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.PbModel.Tower.TowerObj.serializeBinaryToWriter
    );
  }
  f = message.getBasegetgameresourcelist();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      Resource_pb.ResourceToClientModel.serializeBinaryToWriter
    );
  }
};


/**
 * optional TowerObj TowerInfo = 1;
 * @return {?proto.PbModel.Tower.TowerObj}
 */
proto.PbModel.Tower.TowerDrawProgressRewardRes.prototype.getTowerinfo = function() {
  return /** @type{?proto.PbModel.Tower.TowerObj} */ (
    jspb.Message.getWrapperField(this, proto.PbModel.Tower.TowerObj, 1));
};


/**
 * @param {?proto.PbModel.Tower.TowerObj|undefined} value
 * @return {!proto.PbModel.Tower.TowerDrawProgressRewardRes} returns this
*/
proto.PbModel.Tower.TowerDrawProgressRewardRes.prototype.setTowerinfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.Tower.TowerDrawProgressRewardRes} returns this
 */
proto.PbModel.Tower.TowerDrawProgressRewardRes.prototype.clearTowerinfo = function() {
  return this.setTowerinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.Tower.TowerDrawProgressRewardRes.prototype.hasTowerinfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional PbModel.Resource.ResourceToClientModel BaseGetGameResourceList = 2;
 * @return {?proto.PbModel.Resource.ResourceToClientModel}
 */
proto.PbModel.Tower.TowerDrawProgressRewardRes.prototype.getBasegetgameresourcelist = function() {
  return /** @type{?proto.PbModel.Resource.ResourceToClientModel} */ (
    jspb.Message.getWrapperField(this, Resource_pb.ResourceToClientModel, 2));
};


/**
 * @param {?proto.PbModel.Resource.ResourceToClientModel|undefined} value
 * @return {!proto.PbModel.Tower.TowerDrawProgressRewardRes} returns this
*/
proto.PbModel.Tower.TowerDrawProgressRewardRes.prototype.setBasegetgameresourcelist = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.Tower.TowerDrawProgressRewardRes} returns this
 */
proto.PbModel.Tower.TowerDrawProgressRewardRes.prototype.clearBasegetgameresourcelist = function() {
  return this.setBasegetgameresourcelist(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.Tower.TowerDrawProgressRewardRes.prototype.hasBasegetgameresourcelist = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.Tower.TowerFightReq.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Tower.TowerFightReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Tower.TowerFightReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Tower.TowerFightReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Tower.TowerFightReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodeid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    teamlistList: jspb.Message.toObjectList(msg.getTeamlistList(),
    Team_pb.Team.toObject, includeInstance),
    verifyresult: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    isbreak: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Tower.TowerFightReq}
 */
proto.PbModel.Tower.TowerFightReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Tower.TowerFightReq;
  return proto.PbModel.Tower.TowerFightReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Tower.TowerFightReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Tower.TowerFightReq}
 */
proto.PbModel.Tower.TowerFightReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNodeid(value);
      break;
    case 2:
      var value = new Team_pb.Team;
      reader.readMessage(value,Team_pb.Team.deserializeBinaryFromReader);
      msg.addTeamlist(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setVerifyresult(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsbreak(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Tower.TowerFightReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Tower.TowerFightReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Tower.TowerFightReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Tower.TowerFightReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodeid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTeamlistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      Team_pb.Team.serializeBinaryToWriter
    );
  }
  f = message.getVerifyresult();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getIsbreak();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional int32 NodeId = 1;
 * @return {number}
 */
proto.PbModel.Tower.TowerFightReq.prototype.getNodeid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Tower.TowerFightReq} returns this
 */
proto.PbModel.Tower.TowerFightReq.prototype.setNodeid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated PbModel.Team.Team TeamList = 2;
 * @return {!Array<!proto.PbModel.Team.Team>}
 */
proto.PbModel.Tower.TowerFightReq.prototype.getTeamlistList = function() {
  return /** @type{!Array<!proto.PbModel.Team.Team>} */ (
    jspb.Message.getRepeatedWrapperField(this, Team_pb.Team, 2));
};


/**
 * @param {!Array<!proto.PbModel.Team.Team>} value
 * @return {!proto.PbModel.Tower.TowerFightReq} returns this
*/
proto.PbModel.Tower.TowerFightReq.prototype.setTeamlistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.PbModel.Team.Team=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.Team.Team}
 */
proto.PbModel.Tower.TowerFightReq.prototype.addTeamlist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.PbModel.Team.Team, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.Tower.TowerFightReq} returns this
 */
proto.PbModel.Tower.TowerFightReq.prototype.clearTeamlistList = function() {
  return this.setTeamlistList([]);
};


/**
 * optional bool VerifyResult = 3;
 * @return {boolean}
 */
proto.PbModel.Tower.TowerFightReq.prototype.getVerifyresult = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PbModel.Tower.TowerFightReq} returns this
 */
proto.PbModel.Tower.TowerFightReq.prototype.setVerifyresult = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool IsBreak = 4;
 * @return {boolean}
 */
proto.PbModel.Tower.TowerFightReq.prototype.getIsbreak = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PbModel.Tower.TowerFightReq} returns this
 */
proto.PbModel.Tower.TowerFightReq.prototype.setIsbreak = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.Tower.TowerFightRes.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Tower.TowerFightRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Tower.TowerFightRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Tower.TowerFightRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Tower.TowerFightRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    towerinfo: (f = msg.getTowerinfo()) && proto.PbModel.Tower.TowerObj.toObject(includeInstance, f),
    basegetgameresourcelist: (f = msg.getBasegetgameresourcelist()) && Resource_pb.ResourceToClientModel.toObject(includeInstance, f),
    iswin: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    ranklistList: jspb.Message.toObjectList(msg.getRanklistList(),
    proto.PbModel.Tower.TowerRankInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Tower.TowerFightRes}
 */
proto.PbModel.Tower.TowerFightRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Tower.TowerFightRes;
  return proto.PbModel.Tower.TowerFightRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Tower.TowerFightRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Tower.TowerFightRes}
 */
proto.PbModel.Tower.TowerFightRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PbModel.Tower.TowerObj;
      reader.readMessage(value,proto.PbModel.Tower.TowerObj.deserializeBinaryFromReader);
      msg.setTowerinfo(value);
      break;
    case 2:
      var value = new Resource_pb.ResourceToClientModel;
      reader.readMessage(value,Resource_pb.ResourceToClientModel.deserializeBinaryFromReader);
      msg.setBasegetgameresourcelist(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIswin(value);
      break;
    case 4:
      var value = new proto.PbModel.Tower.TowerRankInfo;
      reader.readMessage(value,proto.PbModel.Tower.TowerRankInfo.deserializeBinaryFromReader);
      msg.addRanklist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Tower.TowerFightRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Tower.TowerFightRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Tower.TowerFightRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Tower.TowerFightRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTowerinfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.PbModel.Tower.TowerObj.serializeBinaryToWriter
    );
  }
  f = message.getBasegetgameresourcelist();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      Resource_pb.ResourceToClientModel.serializeBinaryToWriter
    );
  }
  f = message.getIswin();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getRanklistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.PbModel.Tower.TowerRankInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional TowerObj TowerInfo = 1;
 * @return {?proto.PbModel.Tower.TowerObj}
 */
proto.PbModel.Tower.TowerFightRes.prototype.getTowerinfo = function() {
  return /** @type{?proto.PbModel.Tower.TowerObj} */ (
    jspb.Message.getWrapperField(this, proto.PbModel.Tower.TowerObj, 1));
};


/**
 * @param {?proto.PbModel.Tower.TowerObj|undefined} value
 * @return {!proto.PbModel.Tower.TowerFightRes} returns this
*/
proto.PbModel.Tower.TowerFightRes.prototype.setTowerinfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.Tower.TowerFightRes} returns this
 */
proto.PbModel.Tower.TowerFightRes.prototype.clearTowerinfo = function() {
  return this.setTowerinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.Tower.TowerFightRes.prototype.hasTowerinfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional PbModel.Resource.ResourceToClientModel BaseGetGameResourceList = 2;
 * @return {?proto.PbModel.Resource.ResourceToClientModel}
 */
proto.PbModel.Tower.TowerFightRes.prototype.getBasegetgameresourcelist = function() {
  return /** @type{?proto.PbModel.Resource.ResourceToClientModel} */ (
    jspb.Message.getWrapperField(this, Resource_pb.ResourceToClientModel, 2));
};


/**
 * @param {?proto.PbModel.Resource.ResourceToClientModel|undefined} value
 * @return {!proto.PbModel.Tower.TowerFightRes} returns this
*/
proto.PbModel.Tower.TowerFightRes.prototype.setBasegetgameresourcelist = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.Tower.TowerFightRes} returns this
 */
proto.PbModel.Tower.TowerFightRes.prototype.clearBasegetgameresourcelist = function() {
  return this.setBasegetgameresourcelist(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.Tower.TowerFightRes.prototype.hasBasegetgameresourcelist = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool IsWin = 3;
 * @return {boolean}
 */
proto.PbModel.Tower.TowerFightRes.prototype.getIswin = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PbModel.Tower.TowerFightRes} returns this
 */
proto.PbModel.Tower.TowerFightRes.prototype.setIswin = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * repeated TowerRankInfo RankList = 4;
 * @return {!Array<!proto.PbModel.Tower.TowerRankInfo>}
 */
proto.PbModel.Tower.TowerFightRes.prototype.getRanklistList = function() {
  return /** @type{!Array<!proto.PbModel.Tower.TowerRankInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.Tower.TowerRankInfo, 4));
};


/**
 * @param {!Array<!proto.PbModel.Tower.TowerRankInfo>} value
 * @return {!proto.PbModel.Tower.TowerFightRes} returns this
*/
proto.PbModel.Tower.TowerFightRes.prototype.setRanklistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.PbModel.Tower.TowerRankInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.Tower.TowerRankInfo}
 */
proto.PbModel.Tower.TowerFightRes.prototype.addRanklist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.PbModel.Tower.TowerRankInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.Tower.TowerFightRes} returns this
 */
proto.PbModel.Tower.TowerFightRes.prototype.clearRanklistList = function() {
  return this.setRanklistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Tower.TowerGetFightInfoReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Tower.TowerGetFightInfoReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Tower.TowerGetFightInfoReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Tower.TowerGetFightInfoReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodeid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    formationinfo: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Tower.TowerGetFightInfoReq}
 */
proto.PbModel.Tower.TowerGetFightInfoReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Tower.TowerGetFightInfoReq;
  return proto.PbModel.Tower.TowerGetFightInfoReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Tower.TowerGetFightInfoReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Tower.TowerGetFightInfoReq}
 */
proto.PbModel.Tower.TowerGetFightInfoReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNodeid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFormationinfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Tower.TowerGetFightInfoReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Tower.TowerGetFightInfoReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Tower.TowerGetFightInfoReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Tower.TowerGetFightInfoReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodeid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getFormationinfo();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 NodeId = 1;
 * @return {number}
 */
proto.PbModel.Tower.TowerGetFightInfoReq.prototype.getNodeid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Tower.TowerGetFightInfoReq} returns this
 */
proto.PbModel.Tower.TowerGetFightInfoReq.prototype.setNodeid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string FormationInfo = 2;
 * @return {string}
 */
proto.PbModel.Tower.TowerGetFightInfoReq.prototype.getFormationinfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Tower.TowerGetFightInfoReq} returns this
 */
proto.PbModel.Tower.TowerGetFightInfoReq.prototype.setFormationinfo = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Tower.TowerGetFightInfoRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Tower.TowerGetFightInfoRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Tower.TowerGetFightInfoRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Tower.TowerGetFightInfoRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    towerinfo: (f = msg.getTowerinfo()) && proto.PbModel.Tower.TowerObj.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Tower.TowerGetFightInfoRes}
 */
proto.PbModel.Tower.TowerGetFightInfoRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Tower.TowerGetFightInfoRes;
  return proto.PbModel.Tower.TowerGetFightInfoRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Tower.TowerGetFightInfoRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Tower.TowerGetFightInfoRes}
 */
proto.PbModel.Tower.TowerGetFightInfoRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PbModel.Tower.TowerObj;
      reader.readMessage(value,proto.PbModel.Tower.TowerObj.deserializeBinaryFromReader);
      msg.setTowerinfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Tower.TowerGetFightInfoRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Tower.TowerGetFightInfoRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Tower.TowerGetFightInfoRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Tower.TowerGetFightInfoRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTowerinfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.PbModel.Tower.TowerObj.serializeBinaryToWriter
    );
  }
};


/**
 * optional TowerObj TowerInfo = 1;
 * @return {?proto.PbModel.Tower.TowerObj}
 */
proto.PbModel.Tower.TowerGetFightInfoRes.prototype.getTowerinfo = function() {
  return /** @type{?proto.PbModel.Tower.TowerObj} */ (
    jspb.Message.getWrapperField(this, proto.PbModel.Tower.TowerObj, 1));
};


/**
 * @param {?proto.PbModel.Tower.TowerObj|undefined} value
 * @return {!proto.PbModel.Tower.TowerGetFightInfoRes} returns this
*/
proto.PbModel.Tower.TowerGetFightInfoRes.prototype.setTowerinfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.Tower.TowerGetFightInfoRes} returns this
 */
proto.PbModel.Tower.TowerGetFightInfoRes.prototype.clearTowerinfo = function() {
  return this.setTowerinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.Tower.TowerGetFightInfoRes.prototype.hasTowerinfo = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Tower.TowerGetInfoReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Tower.TowerGetInfoReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Tower.TowerGetInfoReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Tower.TowerGetInfoReq.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Tower.TowerGetInfoReq}
 */
proto.PbModel.Tower.TowerGetInfoReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Tower.TowerGetInfoReq;
  return proto.PbModel.Tower.TowerGetInfoReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Tower.TowerGetInfoReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Tower.TowerGetInfoReq}
 */
proto.PbModel.Tower.TowerGetInfoReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Tower.TowerGetInfoReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Tower.TowerGetInfoReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Tower.TowerGetInfoReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Tower.TowerGetInfoReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.Tower.TowerGetInfoRes.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Tower.TowerGetInfoRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Tower.TowerGetInfoRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Tower.TowerGetInfoRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Tower.TowerGetInfoRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    towerinfo: (f = msg.getTowerinfo()) && proto.PbModel.Tower.TowerObj.toObject(includeInstance, f),
    ranklistList: jspb.Message.toObjectList(msg.getRanklistList(),
    proto.PbModel.Tower.TowerRankInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Tower.TowerGetInfoRes}
 */
proto.PbModel.Tower.TowerGetInfoRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Tower.TowerGetInfoRes;
  return proto.PbModel.Tower.TowerGetInfoRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Tower.TowerGetInfoRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Tower.TowerGetInfoRes}
 */
proto.PbModel.Tower.TowerGetInfoRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PbModel.Tower.TowerObj;
      reader.readMessage(value,proto.PbModel.Tower.TowerObj.deserializeBinaryFromReader);
      msg.setTowerinfo(value);
      break;
    case 2:
      var value = new proto.PbModel.Tower.TowerRankInfo;
      reader.readMessage(value,proto.PbModel.Tower.TowerRankInfo.deserializeBinaryFromReader);
      msg.addRanklist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Tower.TowerGetInfoRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Tower.TowerGetInfoRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Tower.TowerGetInfoRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Tower.TowerGetInfoRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTowerinfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.PbModel.Tower.TowerObj.serializeBinaryToWriter
    );
  }
  f = message.getRanklistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.PbModel.Tower.TowerRankInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional TowerObj TowerInfo = 1;
 * @return {?proto.PbModel.Tower.TowerObj}
 */
proto.PbModel.Tower.TowerGetInfoRes.prototype.getTowerinfo = function() {
  return /** @type{?proto.PbModel.Tower.TowerObj} */ (
    jspb.Message.getWrapperField(this, proto.PbModel.Tower.TowerObj, 1));
};


/**
 * @param {?proto.PbModel.Tower.TowerObj|undefined} value
 * @return {!proto.PbModel.Tower.TowerGetInfoRes} returns this
*/
proto.PbModel.Tower.TowerGetInfoRes.prototype.setTowerinfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.Tower.TowerGetInfoRes} returns this
 */
proto.PbModel.Tower.TowerGetInfoRes.prototype.clearTowerinfo = function() {
  return this.setTowerinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.Tower.TowerGetInfoRes.prototype.hasTowerinfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated TowerRankInfo RankList = 2;
 * @return {!Array<!proto.PbModel.Tower.TowerRankInfo>}
 */
proto.PbModel.Tower.TowerGetInfoRes.prototype.getRanklistList = function() {
  return /** @type{!Array<!proto.PbModel.Tower.TowerRankInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.Tower.TowerRankInfo, 2));
};


/**
 * @param {!Array<!proto.PbModel.Tower.TowerRankInfo>} value
 * @return {!proto.PbModel.Tower.TowerGetInfoRes} returns this
*/
proto.PbModel.Tower.TowerGetInfoRes.prototype.setRanklistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.PbModel.Tower.TowerRankInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.Tower.TowerRankInfo}
 */
proto.PbModel.Tower.TowerGetInfoRes.prototype.addRanklist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.PbModel.Tower.TowerRankInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.Tower.TowerGetInfoRes} returns this
 */
proto.PbModel.Tower.TowerGetInfoRes.prototype.clearRanklistList = function() {
  return this.setRanklistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Tower.TowerObj.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Tower.TowerObj.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Tower.TowerObj} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Tower.TowerObj.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodeid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    progressrewardstr: jspb.Message.getFieldWithDefault(msg, 2, ""),
    totallayer: jspb.Message.getFieldWithDefault(msg, 3, 0),
    combatteam: jspb.Message.getFieldWithDefault(msg, 4, 0),
    updatetime: jspb.Message.getFieldWithDefault(msg, 5, 0),
    stamina: jspb.Message.getFieldWithDefault(msg, 6, 0),
    staminaupdatetime: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Tower.TowerObj}
 */
proto.PbModel.Tower.TowerObj.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Tower.TowerObj;
  return proto.PbModel.Tower.TowerObj.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Tower.TowerObj} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Tower.TowerObj}
 */
proto.PbModel.Tower.TowerObj.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNodeid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProgressrewardstr(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotallayer(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCombatteam(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatetime(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStamina(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStaminaupdatetime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Tower.TowerObj.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Tower.TowerObj.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Tower.TowerObj} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Tower.TowerObj.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodeid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getProgressrewardstr();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTotallayer();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getCombatteam();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getUpdatetime();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getStamina();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getStaminaupdatetime();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
};


/**
 * optional int32 NodeId = 1;
 * @return {number}
 */
proto.PbModel.Tower.TowerObj.prototype.getNodeid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Tower.TowerObj} returns this
 */
proto.PbModel.Tower.TowerObj.prototype.setNodeid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string ProgressRewardStr = 2;
 * @return {string}
 */
proto.PbModel.Tower.TowerObj.prototype.getProgressrewardstr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Tower.TowerObj} returns this
 */
proto.PbModel.Tower.TowerObj.prototype.setProgressrewardstr = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 TotalLayer = 3;
 * @return {number}
 */
proto.PbModel.Tower.TowerObj.prototype.getTotallayer = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Tower.TowerObj} returns this
 */
proto.PbModel.Tower.TowerObj.prototype.setTotallayer = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 CombatTeam = 4;
 * @return {number}
 */
proto.PbModel.Tower.TowerObj.prototype.getCombatteam = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Tower.TowerObj} returns this
 */
proto.PbModel.Tower.TowerObj.prototype.setCombatteam = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 UpdateTime = 5;
 * @return {number}
 */
proto.PbModel.Tower.TowerObj.prototype.getUpdatetime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Tower.TowerObj} returns this
 */
proto.PbModel.Tower.TowerObj.prototype.setUpdatetime = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 Stamina = 6;
 * @return {number}
 */
proto.PbModel.Tower.TowerObj.prototype.getStamina = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Tower.TowerObj} returns this
 */
proto.PbModel.Tower.TowerObj.prototype.setStamina = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int64 StaminaUpdateTime = 7;
 * @return {number}
 */
proto.PbModel.Tower.TowerObj.prototype.getStaminaupdatetime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Tower.TowerObj} returns this
 */
proto.PbModel.Tower.TowerObj.prototype.setStaminaupdatetime = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Tower.TowerRankInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Tower.TowerRankInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Tower.TowerRankInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Tower.TowerRankInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    playerid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    nodeid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    formation: jspb.Message.getFieldWithDefault(msg, 3, ""),
    rank: jspb.Message.getFieldWithDefault(msg, 4, 0),
    playercommoninfo: (f = msg.getPlayercommoninfo()) && Player_pb.PlayerCommonInfoRes.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Tower.TowerRankInfo}
 */
proto.PbModel.Tower.TowerRankInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Tower.TowerRankInfo;
  return proto.PbModel.Tower.TowerRankInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Tower.TowerRankInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Tower.TowerRankInfo}
 */
proto.PbModel.Tower.TowerRankInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlayerid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNodeid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFormation(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRank(value);
      break;
    case 5:
      var value = new Player_pb.PlayerCommonInfoRes;
      reader.readMessage(value,Player_pb.PlayerCommonInfoRes.deserializeBinaryFromReader);
      msg.setPlayercommoninfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Tower.TowerRankInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Tower.TowerRankInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Tower.TowerRankInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Tower.TowerRankInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlayerid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNodeid();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getFormation();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRank();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getPlayercommoninfo();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      Player_pb.PlayerCommonInfoRes.serializeBinaryToWriter
    );
  }
};


/**
 * optional string PlayerId = 1;
 * @return {string}
 */
proto.PbModel.Tower.TowerRankInfo.prototype.getPlayerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Tower.TowerRankInfo} returns this
 */
proto.PbModel.Tower.TowerRankInfo.prototype.setPlayerid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 NodeId = 2;
 * @return {number}
 */
proto.PbModel.Tower.TowerRankInfo.prototype.getNodeid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Tower.TowerRankInfo} returns this
 */
proto.PbModel.Tower.TowerRankInfo.prototype.setNodeid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string Formation = 3;
 * @return {string}
 */
proto.PbModel.Tower.TowerRankInfo.prototype.getFormation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Tower.TowerRankInfo} returns this
 */
proto.PbModel.Tower.TowerRankInfo.prototype.setFormation = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 Rank = 4;
 * @return {number}
 */
proto.PbModel.Tower.TowerRankInfo.prototype.getRank = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Tower.TowerRankInfo} returns this
 */
proto.PbModel.Tower.TowerRankInfo.prototype.setRank = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional PbModel.Player.PlayerCommonInfoRes PlayerCommonInfo = 5;
 * @return {?proto.PbModel.Player.PlayerCommonInfoRes}
 */
proto.PbModel.Tower.TowerRankInfo.prototype.getPlayercommoninfo = function() {
  return /** @type{?proto.PbModel.Player.PlayerCommonInfoRes} */ (
    jspb.Message.getWrapperField(this, Player_pb.PlayerCommonInfoRes, 5));
};


/**
 * @param {?proto.PbModel.Player.PlayerCommonInfoRes|undefined} value
 * @return {!proto.PbModel.Tower.TowerRankInfo} returns this
*/
proto.PbModel.Tower.TowerRankInfo.prototype.setPlayercommoninfo = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.Tower.TowerRankInfo} returns this
 */
proto.PbModel.Tower.TowerRankInfo.prototype.clearPlayercommoninfo = function() {
  return this.setPlayercommoninfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.Tower.TowerRankInfo.prototype.hasPlayercommoninfo = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.Tower.TowerGetInfo.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Tower.TowerGetInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Tower.TowerGetInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Tower.TowerGetInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Tower.TowerGetInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    towerinfo: (f = msg.getTowerinfo()) && proto.PbModel.Tower.TowerObj.toObject(includeInstance, f),
    ranklistList: jspb.Message.toObjectList(msg.getRanklistList(),
    proto.PbModel.Tower.TowerRankInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Tower.TowerGetInfo}
 */
proto.PbModel.Tower.TowerGetInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Tower.TowerGetInfo;
  return proto.PbModel.Tower.TowerGetInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Tower.TowerGetInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Tower.TowerGetInfo}
 */
proto.PbModel.Tower.TowerGetInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PbModel.Tower.TowerObj;
      reader.readMessage(value,proto.PbModel.Tower.TowerObj.deserializeBinaryFromReader);
      msg.setTowerinfo(value);
      break;
    case 2:
      var value = new proto.PbModel.Tower.TowerRankInfo;
      reader.readMessage(value,proto.PbModel.Tower.TowerRankInfo.deserializeBinaryFromReader);
      msg.addRanklist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Tower.TowerGetInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Tower.TowerGetInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Tower.TowerGetInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Tower.TowerGetInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTowerinfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.PbModel.Tower.TowerObj.serializeBinaryToWriter
    );
  }
  f = message.getRanklistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.PbModel.Tower.TowerRankInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional TowerObj TowerInfo = 1;
 * @return {?proto.PbModel.Tower.TowerObj}
 */
proto.PbModel.Tower.TowerGetInfo.prototype.getTowerinfo = function() {
  return /** @type{?proto.PbModel.Tower.TowerObj} */ (
    jspb.Message.getWrapperField(this, proto.PbModel.Tower.TowerObj, 1));
};


/**
 * @param {?proto.PbModel.Tower.TowerObj|undefined} value
 * @return {!proto.PbModel.Tower.TowerGetInfo} returns this
*/
proto.PbModel.Tower.TowerGetInfo.prototype.setTowerinfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.Tower.TowerGetInfo} returns this
 */
proto.PbModel.Tower.TowerGetInfo.prototype.clearTowerinfo = function() {
  return this.setTowerinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.Tower.TowerGetInfo.prototype.hasTowerinfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated TowerRankInfo RankList = 2;
 * @return {!Array<!proto.PbModel.Tower.TowerRankInfo>}
 */
proto.PbModel.Tower.TowerGetInfo.prototype.getRanklistList = function() {
  return /** @type{!Array<!proto.PbModel.Tower.TowerRankInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.Tower.TowerRankInfo, 2));
};


/**
 * @param {!Array<!proto.PbModel.Tower.TowerRankInfo>} value
 * @return {!proto.PbModel.Tower.TowerGetInfo} returns this
*/
proto.PbModel.Tower.TowerGetInfo.prototype.setRanklistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.PbModel.Tower.TowerRankInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.Tower.TowerRankInfo}
 */
proto.PbModel.Tower.TowerGetInfo.prototype.addRanklist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.PbModel.Tower.TowerRankInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.Tower.TowerGetInfo} returns this
 */
proto.PbModel.Tower.TowerGetInfo.prototype.clearRanklistList = function() {
  return this.setRanklistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Tower.TowerGetRankReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Tower.TowerGetRankReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Tower.TowerGetRankReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Tower.TowerGetRankReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    playerid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Tower.TowerGetRankReq}
 */
proto.PbModel.Tower.TowerGetRankReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Tower.TowerGetRankReq;
  return proto.PbModel.Tower.TowerGetRankReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Tower.TowerGetRankReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Tower.TowerGetRankReq}
 */
proto.PbModel.Tower.TowerGetRankReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlayerid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Tower.TowerGetRankReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Tower.TowerGetRankReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Tower.TowerGetRankReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Tower.TowerGetRankReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlayerid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string PlayerId = 1;
 * @return {string}
 */
proto.PbModel.Tower.TowerGetRankReq.prototype.getPlayerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Tower.TowerGetRankReq} returns this
 */
proto.PbModel.Tower.TowerGetRankReq.prototype.setPlayerid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.Tower.TowerGetRankRes.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Tower.TowerGetRankRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Tower.TowerGetRankRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Tower.TowerGetRankRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Tower.TowerGetRankRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    ranklistList: jspb.Message.toObjectList(msg.getRanklistList(),
    proto.PbModel.Tower.TowerRankInfo.toObject, includeInstance),
    myrank: jspb.Message.getFieldWithDefault(msg, 2, 0),
    nodeid: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Tower.TowerGetRankRes}
 */
proto.PbModel.Tower.TowerGetRankRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Tower.TowerGetRankRes;
  return proto.PbModel.Tower.TowerGetRankRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Tower.TowerGetRankRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Tower.TowerGetRankRes}
 */
proto.PbModel.Tower.TowerGetRankRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PbModel.Tower.TowerRankInfo;
      reader.readMessage(value,proto.PbModel.Tower.TowerRankInfo.deserializeBinaryFromReader);
      msg.addRanklist(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMyrank(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNodeid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Tower.TowerGetRankRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Tower.TowerGetRankRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Tower.TowerGetRankRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Tower.TowerGetRankRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRanklistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.PbModel.Tower.TowerRankInfo.serializeBinaryToWriter
    );
  }
  f = message.getMyrank();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getNodeid();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * repeated TowerRankInfo RankList = 1;
 * @return {!Array<!proto.PbModel.Tower.TowerRankInfo>}
 */
proto.PbModel.Tower.TowerGetRankRes.prototype.getRanklistList = function() {
  return /** @type{!Array<!proto.PbModel.Tower.TowerRankInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.Tower.TowerRankInfo, 1));
};


/**
 * @param {!Array<!proto.PbModel.Tower.TowerRankInfo>} value
 * @return {!proto.PbModel.Tower.TowerGetRankRes} returns this
*/
proto.PbModel.Tower.TowerGetRankRes.prototype.setRanklistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.PbModel.Tower.TowerRankInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.Tower.TowerRankInfo}
 */
proto.PbModel.Tower.TowerGetRankRes.prototype.addRanklist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.PbModel.Tower.TowerRankInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.Tower.TowerGetRankRes} returns this
 */
proto.PbModel.Tower.TowerGetRankRes.prototype.clearRanklistList = function() {
  return this.setRanklistList([]);
};


/**
 * optional int32 MyRank = 2;
 * @return {number}
 */
proto.PbModel.Tower.TowerGetRankRes.prototype.getMyrank = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Tower.TowerGetRankRes} returns this
 */
proto.PbModel.Tower.TowerGetRankRes.prototype.setMyrank = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 NodeId = 3;
 * @return {number}
 */
proto.PbModel.Tower.TowerGetRankRes.prototype.getNodeid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Tower.TowerGetRankRes} returns this
 */
proto.PbModel.Tower.TowerGetRankRes.prototype.setNodeid = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Tower.TowerJumpNodeIdForDebugReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Tower.TowerJumpNodeIdForDebugReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Tower.TowerJumpNodeIdForDebugReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Tower.TowerJumpNodeIdForDebugReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    neednodeid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Tower.TowerJumpNodeIdForDebugReq}
 */
proto.PbModel.Tower.TowerJumpNodeIdForDebugReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Tower.TowerJumpNodeIdForDebugReq;
  return proto.PbModel.Tower.TowerJumpNodeIdForDebugReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Tower.TowerJumpNodeIdForDebugReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Tower.TowerJumpNodeIdForDebugReq}
 */
proto.PbModel.Tower.TowerJumpNodeIdForDebugReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNeednodeid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Tower.TowerJumpNodeIdForDebugReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Tower.TowerJumpNodeIdForDebugReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Tower.TowerJumpNodeIdForDebugReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Tower.TowerJumpNodeIdForDebugReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNeednodeid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 NeedNodeId = 1;
 * @return {number}
 */
proto.PbModel.Tower.TowerJumpNodeIdForDebugReq.prototype.getNeednodeid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Tower.TowerJumpNodeIdForDebugReq} returns this
 */
proto.PbModel.Tower.TowerJumpNodeIdForDebugReq.prototype.setNeednodeid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Tower.TowerJumpNodeIdForDebugRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Tower.TowerJumpNodeIdForDebugRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Tower.TowerJumpNodeIdForDebugRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Tower.TowerJumpNodeIdForDebugRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    towerinfo: (f = msg.getTowerinfo()) && proto.PbModel.Tower.TowerObj.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Tower.TowerJumpNodeIdForDebugRes}
 */
proto.PbModel.Tower.TowerJumpNodeIdForDebugRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Tower.TowerJumpNodeIdForDebugRes;
  return proto.PbModel.Tower.TowerJumpNodeIdForDebugRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Tower.TowerJumpNodeIdForDebugRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Tower.TowerJumpNodeIdForDebugRes}
 */
proto.PbModel.Tower.TowerJumpNodeIdForDebugRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PbModel.Tower.TowerObj;
      reader.readMessage(value,proto.PbModel.Tower.TowerObj.deserializeBinaryFromReader);
      msg.setTowerinfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Tower.TowerJumpNodeIdForDebugRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Tower.TowerJumpNodeIdForDebugRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Tower.TowerJumpNodeIdForDebugRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Tower.TowerJumpNodeIdForDebugRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTowerinfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.PbModel.Tower.TowerObj.serializeBinaryToWriter
    );
  }
};


/**
 * optional TowerObj TowerInfo = 1;
 * @return {?proto.PbModel.Tower.TowerObj}
 */
proto.PbModel.Tower.TowerJumpNodeIdForDebugRes.prototype.getTowerinfo = function() {
  return /** @type{?proto.PbModel.Tower.TowerObj} */ (
    jspb.Message.getWrapperField(this, proto.PbModel.Tower.TowerObj, 1));
};


/**
 * @param {?proto.PbModel.Tower.TowerObj|undefined} value
 * @return {!proto.PbModel.Tower.TowerJumpNodeIdForDebugRes} returns this
*/
proto.PbModel.Tower.TowerJumpNodeIdForDebugRes.prototype.setTowerinfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.Tower.TowerJumpNodeIdForDebugRes} returns this
 */
proto.PbModel.Tower.TowerJumpNodeIdForDebugRes.prototype.clearTowerinfo = function() {
  return this.setTowerinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.Tower.TowerJumpNodeIdForDebugRes.prototype.hasTowerinfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


goog.object.extend(exports, proto.PbModel.Tower);
