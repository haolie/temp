// source: PlayerReward.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var Resource_pb = require('./Resource_pb.js');
goog.object.extend(proto, Resource_pb);
goog.exportSymbol('proto.PbModel.PlayerReward.PlayerRewardDrawReq', null, global);
goog.exportSymbol('proto.PbModel.PlayerReward.PlayerRewardDrawRes', null, global);
goog.exportSymbol('proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugReq', null, global);
goog.exportSymbol('proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugRes', null, global);
goog.exportSymbol('proto.PbModel.PlayerReward.PlayerRewardGameFinishAReq', null, global);
goog.exportSymbol('proto.PbModel.PlayerReward.PlayerRewardGameFinishARes', null, global);
goog.exportSymbol('proto.PbModel.PlayerReward.PlayerRewardGameFinishBReq', null, global);
goog.exportSymbol('proto.PbModel.PlayerReward.PlayerRewardGameFinishBRes', null, global);
goog.exportSymbol('proto.PbModel.PlayerReward.PlayerRewardGameFinishCReq', null, global);
goog.exportSymbol('proto.PbModel.PlayerReward.PlayerRewardGameFinishCRes', null, global);
goog.exportSymbol('proto.PbModel.PlayerReward.PlayerRewardGameFinishRelicReq', null, global);
goog.exportSymbol('proto.PbModel.PlayerReward.PlayerRewardGameFinishRelicRes', null, global);
goog.exportSymbol('proto.PbModel.PlayerReward.PlayerRewardGamePlayerInfo', null, global);
goog.exportSymbol('proto.PbModel.PlayerReward.PlayerRewardGameRelicReward', null, global);
goog.exportSymbol('proto.PbModel.PlayerReward.PlayerRewardGetInfoReq', null, global);
goog.exportSymbol('proto.PbModel.PlayerReward.PlayerRewardGetInfoRes', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.PlayerReward.PlayerRewardDrawReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.PlayerReward.PlayerRewardDrawReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.PlayerReward.PlayerRewardDrawReq.displayName = 'proto.PbModel.PlayerReward.PlayerRewardDrawReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.PlayerReward.PlayerRewardDrawRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.PlayerReward.PlayerRewardDrawRes.repeatedFields_, null);
};
goog.inherits(proto.PbModel.PlayerReward.PlayerRewardDrawRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.PlayerReward.PlayerRewardDrawRes.displayName = 'proto.PbModel.PlayerReward.PlayerRewardDrawRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugReq.displayName = 'proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugRes.repeatedFields_, null);
};
goog.inherits(proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugRes.displayName = 'proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishAReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.PlayerReward.PlayerRewardGameFinishAReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.PlayerReward.PlayerRewardGameFinishAReq.displayName = 'proto.PbModel.PlayerReward.PlayerRewardGameFinishAReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishARes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.PlayerReward.PlayerRewardGameFinishARes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.PlayerReward.PlayerRewardGameFinishARes.displayName = 'proto.PbModel.PlayerReward.PlayerRewardGameFinishARes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishBReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.PlayerReward.PlayerRewardGameFinishBReq.repeatedFields_, null);
};
goog.inherits(proto.PbModel.PlayerReward.PlayerRewardGameFinishBReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.PlayerReward.PlayerRewardGameFinishBReq.displayName = 'proto.PbModel.PlayerReward.PlayerRewardGameFinishBReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishBRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.PlayerReward.PlayerRewardGameFinishBRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.PlayerReward.PlayerRewardGameFinishBRes.displayName = 'proto.PbModel.PlayerReward.PlayerRewardGameFinishBRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishCReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.PlayerReward.PlayerRewardGameFinishCReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.PlayerReward.PlayerRewardGameFinishCReq.displayName = 'proto.PbModel.PlayerReward.PlayerRewardGameFinishCReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishCRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.PlayerReward.PlayerRewardGameFinishCRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.PlayerReward.PlayerRewardGameFinishCRes.displayName = 'proto.PbModel.PlayerReward.PlayerRewardGameFinishCRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishRelicReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.PlayerReward.PlayerRewardGameFinishRelicReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.PlayerReward.PlayerRewardGameFinishRelicReq.displayName = 'proto.PbModel.PlayerReward.PlayerRewardGameFinishRelicReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishRelicRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.PlayerReward.PlayerRewardGameFinishRelicRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.PlayerReward.PlayerRewardGameFinishRelicRes.displayName = 'proto.PbModel.PlayerReward.PlayerRewardGameFinishRelicRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.PlayerReward.PlayerRewardGetInfoReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.PlayerReward.PlayerRewardGetInfoReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.PlayerReward.PlayerRewardGetInfoReq.displayName = 'proto.PbModel.PlayerReward.PlayerRewardGetInfoReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.PlayerReward.PlayerRewardGetInfoRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.PlayerReward.PlayerRewardGetInfoRes.repeatedFields_, null);
};
goog.inherits(proto.PbModel.PlayerReward.PlayerRewardGetInfoRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.PlayerReward.PlayerRewardGetInfoRes.displayName = 'proto.PbModel.PlayerReward.PlayerRewardGetInfoRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.PlayerReward.PlayerRewardGamePlayerInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.PlayerReward.PlayerRewardGamePlayerInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.PlayerReward.PlayerRewardGamePlayerInfo.displayName = 'proto.PbModel.PlayerReward.PlayerRewardGamePlayerInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.PlayerReward.PlayerRewardGameRelicReward = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.PlayerReward.PlayerRewardGameRelicReward, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.PlayerReward.PlayerRewardGameRelicReward.displayName = 'proto.PbModel.PlayerReward.PlayerRewardGameRelicReward';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.PlayerReward.PlayerRewardDrawReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.PlayerReward.PlayerRewardDrawReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.PlayerReward.PlayerRewardDrawReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PlayerReward.PlayerRewardDrawReq.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.PlayerReward.PlayerRewardDrawReq}
 */
proto.PbModel.PlayerReward.PlayerRewardDrawReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.PlayerReward.PlayerRewardDrawReq;
  return proto.PbModel.PlayerReward.PlayerRewardDrawReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.PlayerReward.PlayerRewardDrawReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.PlayerReward.PlayerRewardDrawReq}
 */
proto.PbModel.PlayerReward.PlayerRewardDrawReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.PlayerReward.PlayerRewardDrawReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.PlayerReward.PlayerRewardDrawReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.PlayerReward.PlayerRewardDrawReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PlayerReward.PlayerRewardDrawReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.PlayerReward.PlayerRewardDrawRes.repeatedFields_ = [9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.PlayerReward.PlayerRewardDrawRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.PlayerReward.PlayerRewardDrawRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.PlayerReward.PlayerRewardDrawRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PlayerReward.PlayerRewardDrawRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    nextbignum: jspb.Message.getFieldWithDefault(msg, 1, 0),
    ifsamepic: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    pic: jspb.Message.getFieldWithDefault(msg, 3, ""),
    clientresourcemodel: (f = msg.getClientresourcemodel()) && Resource_pb.ResourceToClientModel.toObject(includeInstance, f),
    gameid: jspb.Message.getFieldWithDefault(msg, 5, 0),
    playerinfo: (f = msg.getPlayerinfo()) && proto.PbModel.PlayerReward.PlayerRewardGamePlayerInfo.toObject(includeInstance, f),
    gamebrewardinfoMap: (f = msg.getGamebrewardinfoMap()) ? f.toObject(includeInstance, undefined) : [],
    gamerelicid: jspb.Message.getFieldWithDefault(msg, 8, 0),
    gamerelicrewardlistList: jspb.Message.toObjectList(msg.getGamerelicrewardlistList(),
    proto.PbModel.PlayerReward.PlayerRewardGameRelicReward.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.PlayerReward.PlayerRewardDrawRes}
 */
proto.PbModel.PlayerReward.PlayerRewardDrawRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.PlayerReward.PlayerRewardDrawRes;
  return proto.PbModel.PlayerReward.PlayerRewardDrawRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.PlayerReward.PlayerRewardDrawRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.PlayerReward.PlayerRewardDrawRes}
 */
proto.PbModel.PlayerReward.PlayerRewardDrawRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNextbignum(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIfsamepic(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPic(value);
      break;
    case 4:
      var value = new Resource_pb.ResourceToClientModel;
      reader.readMessage(value,Resource_pb.ResourceToClientModel.deserializeBinaryFromReader);
      msg.setClientresourcemodel(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGameid(value);
      break;
    case 6:
      var value = new proto.PbModel.PlayerReward.PlayerRewardGamePlayerInfo;
      reader.readMessage(value,proto.PbModel.PlayerReward.PlayerRewardGamePlayerInfo.deserializeBinaryFromReader);
      msg.setPlayerinfo(value);
      break;
    case 7:
      var value = msg.getGamebrewardinfoMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readInt32, null, 0, 0);
         });
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGamerelicid(value);
      break;
    case 9:
      var value = new proto.PbModel.PlayerReward.PlayerRewardGameRelicReward;
      reader.readMessage(value,proto.PbModel.PlayerReward.PlayerRewardGameRelicReward.deserializeBinaryFromReader);
      msg.addGamerelicrewardlist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.PlayerReward.PlayerRewardDrawRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.PlayerReward.PlayerRewardDrawRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.PlayerReward.PlayerRewardDrawRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PlayerReward.PlayerRewardDrawRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNextbignum();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getIfsamepic();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getPic();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getClientresourcemodel();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      Resource_pb.ResourceToClientModel.serializeBinaryToWriter
    );
  }
  f = message.getGameid();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getPlayerinfo();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.PbModel.PlayerReward.PlayerRewardGamePlayerInfo.serializeBinaryToWriter
    );
  }
  f = message.getGamebrewardinfoMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(7, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeInt32);
  }
  f = message.getGamerelicid();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getGamerelicrewardlistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.PbModel.PlayerReward.PlayerRewardGameRelicReward.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 NextBigNum = 1;
 * @return {number}
 */
proto.PbModel.PlayerReward.PlayerRewardDrawRes.prototype.getNextbignum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.PlayerReward.PlayerRewardDrawRes} returns this
 */
proto.PbModel.PlayerReward.PlayerRewardDrawRes.prototype.setNextbignum = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool IfSamePic = 2;
 * @return {boolean}
 */
proto.PbModel.PlayerReward.PlayerRewardDrawRes.prototype.getIfsamepic = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PbModel.PlayerReward.PlayerRewardDrawRes} returns this
 */
proto.PbModel.PlayerReward.PlayerRewardDrawRes.prototype.setIfsamepic = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional string Pic = 3;
 * @return {string}
 */
proto.PbModel.PlayerReward.PlayerRewardDrawRes.prototype.getPic = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.PlayerReward.PlayerRewardDrawRes} returns this
 */
proto.PbModel.PlayerReward.PlayerRewardDrawRes.prototype.setPic = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional PbModel.Resource.ResourceToClientModel ClientResourceModel = 4;
 * @return {?proto.PbModel.Resource.ResourceToClientModel}
 */
proto.PbModel.PlayerReward.PlayerRewardDrawRes.prototype.getClientresourcemodel = function() {
  return /** @type{?proto.PbModel.Resource.ResourceToClientModel} */ (
    jspb.Message.getWrapperField(this, Resource_pb.ResourceToClientModel, 4));
};


/**
 * @param {?proto.PbModel.Resource.ResourceToClientModel|undefined} value
 * @return {!proto.PbModel.PlayerReward.PlayerRewardDrawRes} returns this
*/
proto.PbModel.PlayerReward.PlayerRewardDrawRes.prototype.setClientresourcemodel = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.PlayerReward.PlayerRewardDrawRes} returns this
 */
proto.PbModel.PlayerReward.PlayerRewardDrawRes.prototype.clearClientresourcemodel = function() {
  return this.setClientresourcemodel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.PlayerReward.PlayerRewardDrawRes.prototype.hasClientresourcemodel = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int32 GameId = 5;
 * @return {number}
 */
proto.PbModel.PlayerReward.PlayerRewardDrawRes.prototype.getGameid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.PlayerReward.PlayerRewardDrawRes} returns this
 */
proto.PbModel.PlayerReward.PlayerRewardDrawRes.prototype.setGameid = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional PlayerRewardGamePlayerInfo PlayerInfo = 6;
 * @return {?proto.PbModel.PlayerReward.PlayerRewardGamePlayerInfo}
 */
proto.PbModel.PlayerReward.PlayerRewardDrawRes.prototype.getPlayerinfo = function() {
  return /** @type{?proto.PbModel.PlayerReward.PlayerRewardGamePlayerInfo} */ (
    jspb.Message.getWrapperField(this, proto.PbModel.PlayerReward.PlayerRewardGamePlayerInfo, 6));
};


/**
 * @param {?proto.PbModel.PlayerReward.PlayerRewardGamePlayerInfo|undefined} value
 * @return {!proto.PbModel.PlayerReward.PlayerRewardDrawRes} returns this
*/
proto.PbModel.PlayerReward.PlayerRewardDrawRes.prototype.setPlayerinfo = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.PlayerReward.PlayerRewardDrawRes} returns this
 */
proto.PbModel.PlayerReward.PlayerRewardDrawRes.prototype.clearPlayerinfo = function() {
  return this.setPlayerinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.PlayerReward.PlayerRewardDrawRes.prototype.hasPlayerinfo = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * map<int32, int32> GameBRewardInfo = 7;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,number>}
 */
proto.PbModel.PlayerReward.PlayerRewardDrawRes.prototype.getGamebrewardinfoMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,number>} */ (
      jspb.Message.getMapField(this, 7, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.PbModel.PlayerReward.PlayerRewardDrawRes} returns this
 */
proto.PbModel.PlayerReward.PlayerRewardDrawRes.prototype.clearGamebrewardinfoMap = function() {
  this.getGamebrewardinfoMap().clear();
  return this;};


/**
 * optional int32 GameRelicId = 8;
 * @return {number}
 */
proto.PbModel.PlayerReward.PlayerRewardDrawRes.prototype.getGamerelicid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.PlayerReward.PlayerRewardDrawRes} returns this
 */
proto.PbModel.PlayerReward.PlayerRewardDrawRes.prototype.setGamerelicid = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * repeated PlayerRewardGameRelicReward GameRelicRewardList = 9;
 * @return {!Array<!proto.PbModel.PlayerReward.PlayerRewardGameRelicReward>}
 */
proto.PbModel.PlayerReward.PlayerRewardDrawRes.prototype.getGamerelicrewardlistList = function() {
  return /** @type{!Array<!proto.PbModel.PlayerReward.PlayerRewardGameRelicReward>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.PlayerReward.PlayerRewardGameRelicReward, 9));
};


/**
 * @param {!Array<!proto.PbModel.PlayerReward.PlayerRewardGameRelicReward>} value
 * @return {!proto.PbModel.PlayerReward.PlayerRewardDrawRes} returns this
*/
proto.PbModel.PlayerReward.PlayerRewardDrawRes.prototype.setGamerelicrewardlistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.PbModel.PlayerReward.PlayerRewardGameRelicReward=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGameRelicReward}
 */
proto.PbModel.PlayerReward.PlayerRewardDrawRes.prototype.addGamerelicrewardlist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.PbModel.PlayerReward.PlayerRewardGameRelicReward, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.PlayerReward.PlayerRewardDrawRes} returns this
 */
proto.PbModel.PlayerReward.PlayerRewardDrawRes.prototype.clearGamerelicrewardlistList = function() {
  return this.setGamerelicrewardlistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    gameid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    isgamerelic: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugReq}
 */
proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugReq;
  return proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugReq}
 */
proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGameid(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsgamerelic(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGameid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getIsgamerelic();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional int32 GameId = 1;
 * @return {number}
 */
proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugReq.prototype.getGameid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugReq} returns this
 */
proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugReq.prototype.setGameid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool IsGameRelic = 2;
 * @return {boolean}
 */
proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugReq.prototype.getIsgamerelic = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugReq} returns this
 */
proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugReq.prototype.setIsgamerelic = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugRes.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    playerinfo: (f = msg.getPlayerinfo()) && proto.PbModel.PlayerReward.PlayerRewardGamePlayerInfo.toObject(includeInstance, f),
    gamebrewardinfoMap: (f = msg.getGamebrewardinfoMap()) ? f.toObject(includeInstance, undefined) : [],
    gamerelicid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    gamerelicrewardlistList: jspb.Message.toObjectList(msg.getGamerelicrewardlistList(),
    proto.PbModel.PlayerReward.PlayerRewardGameRelicReward.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugRes}
 */
proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugRes;
  return proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugRes}
 */
proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PbModel.PlayerReward.PlayerRewardGamePlayerInfo;
      reader.readMessage(value,proto.PbModel.PlayerReward.PlayerRewardGamePlayerInfo.deserializeBinaryFromReader);
      msg.setPlayerinfo(value);
      break;
    case 2:
      var value = msg.getGamebrewardinfoMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readInt32, null, 0, 0);
         });
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGamerelicid(value);
      break;
    case 4:
      var value = new proto.PbModel.PlayerReward.PlayerRewardGameRelicReward;
      reader.readMessage(value,proto.PbModel.PlayerReward.PlayerRewardGameRelicReward.deserializeBinaryFromReader);
      msg.addGamerelicrewardlist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlayerinfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.PbModel.PlayerReward.PlayerRewardGamePlayerInfo.serializeBinaryToWriter
    );
  }
  f = message.getGamebrewardinfoMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeInt32);
  }
  f = message.getGamerelicid();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getGamerelicrewardlistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.PbModel.PlayerReward.PlayerRewardGameRelicReward.serializeBinaryToWriter
    );
  }
};


/**
 * optional PlayerRewardGamePlayerInfo PlayerInfo = 1;
 * @return {?proto.PbModel.PlayerReward.PlayerRewardGamePlayerInfo}
 */
proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugRes.prototype.getPlayerinfo = function() {
  return /** @type{?proto.PbModel.PlayerReward.PlayerRewardGamePlayerInfo} */ (
    jspb.Message.getWrapperField(this, proto.PbModel.PlayerReward.PlayerRewardGamePlayerInfo, 1));
};


/**
 * @param {?proto.PbModel.PlayerReward.PlayerRewardGamePlayerInfo|undefined} value
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugRes} returns this
*/
proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugRes.prototype.setPlayerinfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugRes} returns this
 */
proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugRes.prototype.clearPlayerinfo = function() {
  return this.setPlayerinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugRes.prototype.hasPlayerinfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * map<int32, int32> GameBRewardInfo = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,number>}
 */
proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugRes.prototype.getGamebrewardinfoMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,number>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugRes} returns this
 */
proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugRes.prototype.clearGamebrewardinfoMap = function() {
  this.getGamebrewardinfoMap().clear();
  return this;};


/**
 * optional int32 GameRelicId = 3;
 * @return {number}
 */
proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugRes.prototype.getGamerelicid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugRes} returns this
 */
proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugRes.prototype.setGamerelicid = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated PlayerRewardGameRelicReward GameRelicRewardList = 4;
 * @return {!Array<!proto.PbModel.PlayerReward.PlayerRewardGameRelicReward>}
 */
proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugRes.prototype.getGamerelicrewardlistList = function() {
  return /** @type{!Array<!proto.PbModel.PlayerReward.PlayerRewardGameRelicReward>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.PlayerReward.PlayerRewardGameRelicReward, 4));
};


/**
 * @param {!Array<!proto.PbModel.PlayerReward.PlayerRewardGameRelicReward>} value
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugRes} returns this
*/
proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugRes.prototype.setGamerelicrewardlistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.PbModel.PlayerReward.PlayerRewardGameRelicReward=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGameRelicReward}
 */
proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugRes.prototype.addGamerelicrewardlist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.PbModel.PlayerReward.PlayerRewardGameRelicReward, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugRes} returns this
 */
proto.PbModel.PlayerReward.PlayerRewardGameAddForDebugRes.prototype.clearGamerelicrewardlistList = function() {
  return this.setGamerelicrewardlistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishAReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.PlayerReward.PlayerRewardGameFinishAReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.PlayerReward.PlayerRewardGameFinishAReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishAReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    ordernumdictMap: (f = msg.getOrdernumdictMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGameFinishAReq}
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishAReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.PlayerReward.PlayerRewardGameFinishAReq;
  return proto.PbModel.PlayerReward.PlayerRewardGameFinishAReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.PlayerReward.PlayerRewardGameFinishAReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGameFinishAReq}
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishAReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getOrdernumdictMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readInt32, null, 0, 0);
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishAReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.PlayerReward.PlayerRewardGameFinishAReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.PlayerReward.PlayerRewardGameFinishAReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishAReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrdernumdictMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeInt32);
  }
};


/**
 * map<int32, int32> OrderNumDict = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,number>}
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishAReq.prototype.getOrdernumdictMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,number>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGameFinishAReq} returns this
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishAReq.prototype.clearOrdernumdictMap = function() {
  this.getOrdernumdictMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishARes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.PlayerReward.PlayerRewardGameFinishARes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.PlayerReward.PlayerRewardGameFinishARes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishARes.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientresourcemodel: (f = msg.getClientresourcemodel()) && Resource_pb.ResourceToClientModel.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGameFinishARes}
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishARes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.PlayerReward.PlayerRewardGameFinishARes;
  return proto.PbModel.PlayerReward.PlayerRewardGameFinishARes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.PlayerReward.PlayerRewardGameFinishARes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGameFinishARes}
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishARes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new Resource_pb.ResourceToClientModel;
      reader.readMessage(value,Resource_pb.ResourceToClientModel.deserializeBinaryFromReader);
      msg.setClientresourcemodel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishARes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.PlayerReward.PlayerRewardGameFinishARes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.PlayerReward.PlayerRewardGameFinishARes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishARes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientresourcemodel();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      Resource_pb.ResourceToClientModel.serializeBinaryToWriter
    );
  }
};


/**
 * optional PbModel.Resource.ResourceToClientModel ClientResourceModel = 1;
 * @return {?proto.PbModel.Resource.ResourceToClientModel}
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishARes.prototype.getClientresourcemodel = function() {
  return /** @type{?proto.PbModel.Resource.ResourceToClientModel} */ (
    jspb.Message.getWrapperField(this, Resource_pb.ResourceToClientModel, 1));
};


/**
 * @param {?proto.PbModel.Resource.ResourceToClientModel|undefined} value
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGameFinishARes} returns this
*/
proto.PbModel.PlayerReward.PlayerRewardGameFinishARes.prototype.setClientresourcemodel = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGameFinishARes} returns this
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishARes.prototype.clearClientresourcemodel = function() {
  return this.setClientresourcemodel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishARes.prototype.hasClientresourcemodel = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishBReq.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishBReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.PlayerReward.PlayerRewardGameFinishBReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.PlayerReward.PlayerRewardGameFinishBReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishBReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    positionlistList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGameFinishBReq}
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishBReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.PlayerReward.PlayerRewardGameFinishBReq;
  return proto.PbModel.PlayerReward.PlayerRewardGameFinishBReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.PlayerReward.PlayerRewardGameFinishBReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGameFinishBReq}
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishBReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setPositionlistList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishBReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.PlayerReward.PlayerRewardGameFinishBReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.PlayerReward.PlayerRewardGameFinishBReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishBReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPositionlistList();
  if (f.length > 0) {
    writer.writePackedInt32(
      1,
      f
    );
  }
};


/**
 * repeated int32 PositionList = 1;
 * @return {!Array<number>}
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishBReq.prototype.getPositionlistList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGameFinishBReq} returns this
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishBReq.prototype.setPositionlistList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGameFinishBReq} returns this
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishBReq.prototype.addPositionlist = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGameFinishBReq} returns this
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishBReq.prototype.clearPositionlistList = function() {
  return this.setPositionlistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishBRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.PlayerReward.PlayerRewardGameFinishBRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.PlayerReward.PlayerRewardGameFinishBRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishBRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientresourcemodel: (f = msg.getClientresourcemodel()) && Resource_pb.ResourceToClientModel.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGameFinishBRes}
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishBRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.PlayerReward.PlayerRewardGameFinishBRes;
  return proto.PbModel.PlayerReward.PlayerRewardGameFinishBRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.PlayerReward.PlayerRewardGameFinishBRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGameFinishBRes}
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishBRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new Resource_pb.ResourceToClientModel;
      reader.readMessage(value,Resource_pb.ResourceToClientModel.deserializeBinaryFromReader);
      msg.setClientresourcemodel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishBRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.PlayerReward.PlayerRewardGameFinishBRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.PlayerReward.PlayerRewardGameFinishBRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishBRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientresourcemodel();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      Resource_pb.ResourceToClientModel.serializeBinaryToWriter
    );
  }
};


/**
 * optional PbModel.Resource.ResourceToClientModel ClientResourceModel = 1;
 * @return {?proto.PbModel.Resource.ResourceToClientModel}
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishBRes.prototype.getClientresourcemodel = function() {
  return /** @type{?proto.PbModel.Resource.ResourceToClientModel} */ (
    jspb.Message.getWrapperField(this, Resource_pb.ResourceToClientModel, 1));
};


/**
 * @param {?proto.PbModel.Resource.ResourceToClientModel|undefined} value
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGameFinishBRes} returns this
*/
proto.PbModel.PlayerReward.PlayerRewardGameFinishBRes.prototype.setClientresourcemodel = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGameFinishBRes} returns this
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishBRes.prototype.clearClientresourcemodel = function() {
  return this.setClientresourcemodel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishBRes.prototype.hasClientresourcemodel = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishCReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.PlayerReward.PlayerRewardGameFinishCReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.PlayerReward.PlayerRewardGameFinishCReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishCReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    orderstr: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGameFinishCReq}
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishCReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.PlayerReward.PlayerRewardGameFinishCReq;
  return proto.PbModel.PlayerReward.PlayerRewardGameFinishCReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.PlayerReward.PlayerRewardGameFinishCReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGameFinishCReq}
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishCReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOrderstr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishCReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.PlayerReward.PlayerRewardGameFinishCReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.PlayerReward.PlayerRewardGameFinishCReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishCReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrderstr();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 OrderStr = 1;
 * @return {number}
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishCReq.prototype.getOrderstr = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGameFinishCReq} returns this
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishCReq.prototype.setOrderstr = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishCRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.PlayerReward.PlayerRewardGameFinishCRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.PlayerReward.PlayerRewardGameFinishCRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishCRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientresourcemodel: (f = msg.getClientresourcemodel()) && Resource_pb.ResourceToClientModel.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGameFinishCRes}
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishCRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.PlayerReward.PlayerRewardGameFinishCRes;
  return proto.PbModel.PlayerReward.PlayerRewardGameFinishCRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.PlayerReward.PlayerRewardGameFinishCRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGameFinishCRes}
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishCRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new Resource_pb.ResourceToClientModel;
      reader.readMessage(value,Resource_pb.ResourceToClientModel.deserializeBinaryFromReader);
      msg.setClientresourcemodel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishCRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.PlayerReward.PlayerRewardGameFinishCRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.PlayerReward.PlayerRewardGameFinishCRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishCRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientresourcemodel();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      Resource_pb.ResourceToClientModel.serializeBinaryToWriter
    );
  }
};


/**
 * optional PbModel.Resource.ResourceToClientModel ClientResourceModel = 1;
 * @return {?proto.PbModel.Resource.ResourceToClientModel}
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishCRes.prototype.getClientresourcemodel = function() {
  return /** @type{?proto.PbModel.Resource.ResourceToClientModel} */ (
    jspb.Message.getWrapperField(this, Resource_pb.ResourceToClientModel, 1));
};


/**
 * @param {?proto.PbModel.Resource.ResourceToClientModel|undefined} value
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGameFinishCRes} returns this
*/
proto.PbModel.PlayerReward.PlayerRewardGameFinishCRes.prototype.setClientresourcemodel = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGameFinishCRes} returns this
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishCRes.prototype.clearClientresourcemodel = function() {
  return this.setClientresourcemodel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishCRes.prototype.hasClientresourcemodel = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishRelicReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.PlayerReward.PlayerRewardGameFinishRelicReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.PlayerReward.PlayerRewardGameFinishRelicReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishRelicReq.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGameFinishRelicReq}
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishRelicReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.PlayerReward.PlayerRewardGameFinishRelicReq;
  return proto.PbModel.PlayerReward.PlayerRewardGameFinishRelicReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.PlayerReward.PlayerRewardGameFinishRelicReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGameFinishRelicReq}
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishRelicReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishRelicReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.PlayerReward.PlayerRewardGameFinishRelicReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.PlayerReward.PlayerRewardGameFinishRelicReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishRelicReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishRelicRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.PlayerReward.PlayerRewardGameFinishRelicRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.PlayerReward.PlayerRewardGameFinishRelicRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishRelicRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientresourcemodel: (f = msg.getClientresourcemodel()) && Resource_pb.ResourceToClientModel.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGameFinishRelicRes}
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishRelicRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.PlayerReward.PlayerRewardGameFinishRelicRes;
  return proto.PbModel.PlayerReward.PlayerRewardGameFinishRelicRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.PlayerReward.PlayerRewardGameFinishRelicRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGameFinishRelicRes}
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishRelicRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new Resource_pb.ResourceToClientModel;
      reader.readMessage(value,Resource_pb.ResourceToClientModel.deserializeBinaryFromReader);
      msg.setClientresourcemodel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishRelicRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.PlayerReward.PlayerRewardGameFinishRelicRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.PlayerReward.PlayerRewardGameFinishRelicRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishRelicRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientresourcemodel();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      Resource_pb.ResourceToClientModel.serializeBinaryToWriter
    );
  }
};


/**
 * optional PbModel.Resource.ResourceToClientModel ClientResourceModel = 1;
 * @return {?proto.PbModel.Resource.ResourceToClientModel}
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishRelicRes.prototype.getClientresourcemodel = function() {
  return /** @type{?proto.PbModel.Resource.ResourceToClientModel} */ (
    jspb.Message.getWrapperField(this, Resource_pb.ResourceToClientModel, 1));
};


/**
 * @param {?proto.PbModel.Resource.ResourceToClientModel|undefined} value
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGameFinishRelicRes} returns this
*/
proto.PbModel.PlayerReward.PlayerRewardGameFinishRelicRes.prototype.setClientresourcemodel = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGameFinishRelicRes} returns this
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishRelicRes.prototype.clearClientresourcemodel = function() {
  return this.setClientresourcemodel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.PlayerReward.PlayerRewardGameFinishRelicRes.prototype.hasClientresourcemodel = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.PlayerReward.PlayerRewardGetInfoReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.PlayerReward.PlayerRewardGetInfoReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.PlayerReward.PlayerRewardGetInfoReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PlayerReward.PlayerRewardGetInfoReq.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGetInfoReq}
 */
proto.PbModel.PlayerReward.PlayerRewardGetInfoReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.PlayerReward.PlayerRewardGetInfoReq;
  return proto.PbModel.PlayerReward.PlayerRewardGetInfoReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.PlayerReward.PlayerRewardGetInfoReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGetInfoReq}
 */
proto.PbModel.PlayerReward.PlayerRewardGetInfoReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.PlayerReward.PlayerRewardGetInfoReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.PlayerReward.PlayerRewardGetInfoReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.PlayerReward.PlayerRewardGetInfoReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PlayerReward.PlayerRewardGetInfoReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.PlayerReward.PlayerRewardGetInfoRes.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.PlayerReward.PlayerRewardGetInfoRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.PlayerReward.PlayerRewardGetInfoRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.PlayerReward.PlayerRewardGetInfoRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PlayerReward.PlayerRewardGetInfoRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    nextbignum: jspb.Message.getFieldWithDefault(msg, 1, 0),
    gameid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    playerinfo: (f = msg.getPlayerinfo()) && proto.PbModel.PlayerReward.PlayerRewardGamePlayerInfo.toObject(includeInstance, f),
    gamebrewardinfoMap: (f = msg.getGamebrewardinfoMap()) ? f.toObject(includeInstance, undefined) : [],
    gamerelicid: jspb.Message.getFieldWithDefault(msg, 5, 0),
    gamerelicrewardlistList: jspb.Message.toObjectList(msg.getGamerelicrewardlistList(),
    proto.PbModel.PlayerReward.PlayerRewardGameRelicReward.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGetInfoRes}
 */
proto.PbModel.PlayerReward.PlayerRewardGetInfoRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.PlayerReward.PlayerRewardGetInfoRes;
  return proto.PbModel.PlayerReward.PlayerRewardGetInfoRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.PlayerReward.PlayerRewardGetInfoRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGetInfoRes}
 */
proto.PbModel.PlayerReward.PlayerRewardGetInfoRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNextbignum(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGameid(value);
      break;
    case 3:
      var value = new proto.PbModel.PlayerReward.PlayerRewardGamePlayerInfo;
      reader.readMessage(value,proto.PbModel.PlayerReward.PlayerRewardGamePlayerInfo.deserializeBinaryFromReader);
      msg.setPlayerinfo(value);
      break;
    case 4:
      var value = msg.getGamebrewardinfoMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readInt32, null, 0, 0);
         });
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGamerelicid(value);
      break;
    case 6:
      var value = new proto.PbModel.PlayerReward.PlayerRewardGameRelicReward;
      reader.readMessage(value,proto.PbModel.PlayerReward.PlayerRewardGameRelicReward.deserializeBinaryFromReader);
      msg.addGamerelicrewardlist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.PlayerReward.PlayerRewardGetInfoRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.PlayerReward.PlayerRewardGetInfoRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.PlayerReward.PlayerRewardGetInfoRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PlayerReward.PlayerRewardGetInfoRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNextbignum();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getGameid();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getPlayerinfo();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.PbModel.PlayerReward.PlayerRewardGamePlayerInfo.serializeBinaryToWriter
    );
  }
  f = message.getGamebrewardinfoMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeInt32);
  }
  f = message.getGamerelicid();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getGamerelicrewardlistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.PbModel.PlayerReward.PlayerRewardGameRelicReward.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 NextBigNum = 1;
 * @return {number}
 */
proto.PbModel.PlayerReward.PlayerRewardGetInfoRes.prototype.getNextbignum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGetInfoRes} returns this
 */
proto.PbModel.PlayerReward.PlayerRewardGetInfoRes.prototype.setNextbignum = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 GameId = 2;
 * @return {number}
 */
proto.PbModel.PlayerReward.PlayerRewardGetInfoRes.prototype.getGameid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGetInfoRes} returns this
 */
proto.PbModel.PlayerReward.PlayerRewardGetInfoRes.prototype.setGameid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional PlayerRewardGamePlayerInfo PlayerInfo = 3;
 * @return {?proto.PbModel.PlayerReward.PlayerRewardGamePlayerInfo}
 */
proto.PbModel.PlayerReward.PlayerRewardGetInfoRes.prototype.getPlayerinfo = function() {
  return /** @type{?proto.PbModel.PlayerReward.PlayerRewardGamePlayerInfo} */ (
    jspb.Message.getWrapperField(this, proto.PbModel.PlayerReward.PlayerRewardGamePlayerInfo, 3));
};


/**
 * @param {?proto.PbModel.PlayerReward.PlayerRewardGamePlayerInfo|undefined} value
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGetInfoRes} returns this
*/
proto.PbModel.PlayerReward.PlayerRewardGetInfoRes.prototype.setPlayerinfo = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGetInfoRes} returns this
 */
proto.PbModel.PlayerReward.PlayerRewardGetInfoRes.prototype.clearPlayerinfo = function() {
  return this.setPlayerinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.PlayerReward.PlayerRewardGetInfoRes.prototype.hasPlayerinfo = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * map<int32, int32> GameBRewardInfo = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,number>}
 */
proto.PbModel.PlayerReward.PlayerRewardGetInfoRes.prototype.getGamebrewardinfoMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,number>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGetInfoRes} returns this
 */
proto.PbModel.PlayerReward.PlayerRewardGetInfoRes.prototype.clearGamebrewardinfoMap = function() {
  this.getGamebrewardinfoMap().clear();
  return this;};


/**
 * optional int32 GameRelicId = 5;
 * @return {number}
 */
proto.PbModel.PlayerReward.PlayerRewardGetInfoRes.prototype.getGamerelicid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGetInfoRes} returns this
 */
proto.PbModel.PlayerReward.PlayerRewardGetInfoRes.prototype.setGamerelicid = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * repeated PlayerRewardGameRelicReward GameRelicRewardList = 6;
 * @return {!Array<!proto.PbModel.PlayerReward.PlayerRewardGameRelicReward>}
 */
proto.PbModel.PlayerReward.PlayerRewardGetInfoRes.prototype.getGamerelicrewardlistList = function() {
  return /** @type{!Array<!proto.PbModel.PlayerReward.PlayerRewardGameRelicReward>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.PlayerReward.PlayerRewardGameRelicReward, 6));
};


/**
 * @param {!Array<!proto.PbModel.PlayerReward.PlayerRewardGameRelicReward>} value
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGetInfoRes} returns this
*/
proto.PbModel.PlayerReward.PlayerRewardGetInfoRes.prototype.setGamerelicrewardlistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.PbModel.PlayerReward.PlayerRewardGameRelicReward=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGameRelicReward}
 */
proto.PbModel.PlayerReward.PlayerRewardGetInfoRes.prototype.addGamerelicrewardlist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.PbModel.PlayerReward.PlayerRewardGameRelicReward, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGetInfoRes} returns this
 */
proto.PbModel.PlayerReward.PlayerRewardGetInfoRes.prototype.clearGamerelicrewardlistList = function() {
  return this.setGamerelicrewardlistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.PlayerReward.PlayerRewardGamePlayerInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.PlayerReward.PlayerRewardGamePlayerInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.PlayerReward.PlayerRewardGamePlayerInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PlayerReward.PlayerRewardGamePlayerInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    playerid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    headimageid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    lv: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGamePlayerInfo}
 */
proto.PbModel.PlayerReward.PlayerRewardGamePlayerInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.PlayerReward.PlayerRewardGamePlayerInfo;
  return proto.PbModel.PlayerReward.PlayerRewardGamePlayerInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.PlayerReward.PlayerRewardGamePlayerInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGamePlayerInfo}
 */
proto.PbModel.PlayerReward.PlayerRewardGamePlayerInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlayerid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHeadimageid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLv(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.PlayerReward.PlayerRewardGamePlayerInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.PlayerReward.PlayerRewardGamePlayerInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.PlayerReward.PlayerRewardGamePlayerInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PlayerReward.PlayerRewardGamePlayerInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlayerid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getHeadimageid();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getLv();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional string PlayerId = 1;
 * @return {string}
 */
proto.PbModel.PlayerReward.PlayerRewardGamePlayerInfo.prototype.getPlayerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGamePlayerInfo} returns this
 */
proto.PbModel.PlayerReward.PlayerRewardGamePlayerInfo.prototype.setPlayerid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Name = 2;
 * @return {string}
 */
proto.PbModel.PlayerReward.PlayerRewardGamePlayerInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGamePlayerInfo} returns this
 */
proto.PbModel.PlayerReward.PlayerRewardGamePlayerInfo.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 HeadImageId = 3;
 * @return {number}
 */
proto.PbModel.PlayerReward.PlayerRewardGamePlayerInfo.prototype.getHeadimageid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGamePlayerInfo} returns this
 */
proto.PbModel.PlayerReward.PlayerRewardGamePlayerInfo.prototype.setHeadimageid = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 Lv = 4;
 * @return {number}
 */
proto.PbModel.PlayerReward.PlayerRewardGamePlayerInfo.prototype.getLv = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGamePlayerInfo} returns this
 */
proto.PbModel.PlayerReward.PlayerRewardGamePlayerInfo.prototype.setLv = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.PlayerReward.PlayerRewardGameRelicReward.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.PlayerReward.PlayerRewardGameRelicReward.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.PlayerReward.PlayerRewardGameRelicReward} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PlayerReward.PlayerRewardGameRelicReward.toObject = function(includeInstance, msg) {
  var f, obj = {
    pondid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    orderstr: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGameRelicReward}
 */
proto.PbModel.PlayerReward.PlayerRewardGameRelicReward.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.PlayerReward.PlayerRewardGameRelicReward;
  return proto.PbModel.PlayerReward.PlayerRewardGameRelicReward.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.PlayerReward.PlayerRewardGameRelicReward} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGameRelicReward}
 */
proto.PbModel.PlayerReward.PlayerRewardGameRelicReward.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPondid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOrderstr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.PlayerReward.PlayerRewardGameRelicReward.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.PlayerReward.PlayerRewardGameRelicReward.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.PlayerReward.PlayerRewardGameRelicReward} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.PlayerReward.PlayerRewardGameRelicReward.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPondid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getOrderstr();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 PondId = 1;
 * @return {number}
 */
proto.PbModel.PlayerReward.PlayerRewardGameRelicReward.prototype.getPondid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGameRelicReward} returns this
 */
proto.PbModel.PlayerReward.PlayerRewardGameRelicReward.prototype.setPondid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 OrderStr = 2;
 * @return {number}
 */
proto.PbModel.PlayerReward.PlayerRewardGameRelicReward.prototype.getOrderstr = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.PlayerReward.PlayerRewardGameRelicReward} returns this
 */
proto.PbModel.PlayerReward.PlayerRewardGameRelicReward.prototype.setOrderstr = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


goog.object.extend(exports, proto.PbModel.PlayerReward);
