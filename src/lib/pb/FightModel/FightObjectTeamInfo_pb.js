// source: FightModel/FightObjectTeamInfo.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var FightModel_ClientHero_pb = require('../FightModel/ClientHero_pb.js');
goog.object.extend(proto, FightModel_ClientHero_pb);
var FightModel_ClientPlayer_pb = require('../FightModel/ClientPlayer_pb.js');
goog.object.extend(proto, FightModel_ClientPlayer_pb);
var FightModel_ClientNpcs_pb = require('../FightModel/ClientNpcs_pb.js');
goog.object.extend(proto, FightModel_ClientNpcs_pb);
var FightModel_ClientSummon_pb = require('../FightModel/ClientSummon_pb.js');
goog.object.extend(proto, FightModel_ClientSummon_pb);
goog.exportSymbol('proto.PbModel.FightModel.FightObjectTeamInfo', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.FightModel.FightObjectTeamInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.FightModel.FightObjectTeamInfo.repeatedFields_, null);
};
goog.inherits(proto.PbModel.FightModel.FightObjectTeamInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.FightModel.FightObjectTeamInfo.displayName = 'proto.PbModel.FightModel.FightObjectTeamInfo';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.FightModel.FightObjectTeamInfo.repeatedFields_ = [2,3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.FightModel.FightObjectTeamInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.FightModel.FightObjectTeamInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.FightModel.FightObjectTeamInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.FightModel.FightObjectTeamInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    player: (f = msg.getPlayer()) && FightModel_ClientPlayer_pb.ClientPlayer.toObject(includeInstance, f),
    herosList: jspb.Message.toObjectList(msg.getHerosList(),
    FightModel_ClientHero_pb.ClientHero.toObject, includeInstance),
    npcsList: jspb.Message.toObjectList(msg.getNpcsList(),
    FightModel_ClientNpcs_pb.ClientNpcs.toObject, includeInstance),
    summonsList: jspb.Message.toObjectList(msg.getSummonsList(),
    FightModel_ClientSummon_pb.ClientSummon.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.FightModel.FightObjectTeamInfo}
 */
proto.PbModel.FightModel.FightObjectTeamInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.FightModel.FightObjectTeamInfo;
  return proto.PbModel.FightModel.FightObjectTeamInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.FightModel.FightObjectTeamInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.FightModel.FightObjectTeamInfo}
 */
proto.PbModel.FightModel.FightObjectTeamInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new FightModel_ClientPlayer_pb.ClientPlayer;
      reader.readMessage(value,FightModel_ClientPlayer_pb.ClientPlayer.deserializeBinaryFromReader);
      msg.setPlayer(value);
      break;
    case 2:
      var value = new FightModel_ClientHero_pb.ClientHero;
      reader.readMessage(value,FightModel_ClientHero_pb.ClientHero.deserializeBinaryFromReader);
      msg.addHeros(value);
      break;
    case 3:
      var value = new FightModel_ClientNpcs_pb.ClientNpcs;
      reader.readMessage(value,FightModel_ClientNpcs_pb.ClientNpcs.deserializeBinaryFromReader);
      msg.addNpcs(value);
      break;
    case 4:
      var value = new FightModel_ClientSummon_pb.ClientSummon;
      reader.readMessage(value,FightModel_ClientSummon_pb.ClientSummon.deserializeBinaryFromReader);
      msg.addSummons(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.FightModel.FightObjectTeamInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.FightModel.FightObjectTeamInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.FightModel.FightObjectTeamInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.FightModel.FightObjectTeamInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlayer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      FightModel_ClientPlayer_pb.ClientPlayer.serializeBinaryToWriter
    );
  }
  f = message.getHerosList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      FightModel_ClientHero_pb.ClientHero.serializeBinaryToWriter
    );
  }
  f = message.getNpcsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      FightModel_ClientNpcs_pb.ClientNpcs.serializeBinaryToWriter
    );
  }
  f = message.getSummonsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      FightModel_ClientSummon_pb.ClientSummon.serializeBinaryToWriter
    );
  }
};


/**
 * optional ClientPlayer Player = 1;
 * @return {?proto.PbModel.FightModel.ClientPlayer}
 */
proto.PbModel.FightModel.FightObjectTeamInfo.prototype.getPlayer = function() {
  return /** @type{?proto.PbModel.FightModel.ClientPlayer} */ (
    jspb.Message.getWrapperField(this, FightModel_ClientPlayer_pb.ClientPlayer, 1));
};


/**
 * @param {?proto.PbModel.FightModel.ClientPlayer|undefined} value
 * @return {!proto.PbModel.FightModel.FightObjectTeamInfo} returns this
*/
proto.PbModel.FightModel.FightObjectTeamInfo.prototype.setPlayer = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.FightModel.FightObjectTeamInfo} returns this
 */
proto.PbModel.FightModel.FightObjectTeamInfo.prototype.clearPlayer = function() {
  return this.setPlayer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.FightModel.FightObjectTeamInfo.prototype.hasPlayer = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated ClientHero Heros = 2;
 * @return {!Array<!proto.PbModel.FightModel.ClientHero>}
 */
proto.PbModel.FightModel.FightObjectTeamInfo.prototype.getHerosList = function() {
  return /** @type{!Array<!proto.PbModel.FightModel.ClientHero>} */ (
    jspb.Message.getRepeatedWrapperField(this, FightModel_ClientHero_pb.ClientHero, 2));
};


/**
 * @param {!Array<!proto.PbModel.FightModel.ClientHero>} value
 * @return {!proto.PbModel.FightModel.FightObjectTeamInfo} returns this
*/
proto.PbModel.FightModel.FightObjectTeamInfo.prototype.setHerosList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.PbModel.FightModel.ClientHero=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.FightModel.ClientHero}
 */
proto.PbModel.FightModel.FightObjectTeamInfo.prototype.addHeros = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.PbModel.FightModel.ClientHero, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.FightModel.FightObjectTeamInfo} returns this
 */
proto.PbModel.FightModel.FightObjectTeamInfo.prototype.clearHerosList = function() {
  return this.setHerosList([]);
};


/**
 * repeated ClientNpcs Npcs = 3;
 * @return {!Array<!proto.PbModel.FightModel.ClientNpcs>}
 */
proto.PbModel.FightModel.FightObjectTeamInfo.prototype.getNpcsList = function() {
  return /** @type{!Array<!proto.PbModel.FightModel.ClientNpcs>} */ (
    jspb.Message.getRepeatedWrapperField(this, FightModel_ClientNpcs_pb.ClientNpcs, 3));
};


/**
 * @param {!Array<!proto.PbModel.FightModel.ClientNpcs>} value
 * @return {!proto.PbModel.FightModel.FightObjectTeamInfo} returns this
*/
proto.PbModel.FightModel.FightObjectTeamInfo.prototype.setNpcsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.PbModel.FightModel.ClientNpcs=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.FightModel.ClientNpcs}
 */
proto.PbModel.FightModel.FightObjectTeamInfo.prototype.addNpcs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.PbModel.FightModel.ClientNpcs, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.FightModel.FightObjectTeamInfo} returns this
 */
proto.PbModel.FightModel.FightObjectTeamInfo.prototype.clearNpcsList = function() {
  return this.setNpcsList([]);
};


/**
 * repeated ClientSummon Summons = 4;
 * @return {!Array<!proto.PbModel.FightModel.ClientSummon>}
 */
proto.PbModel.FightModel.FightObjectTeamInfo.prototype.getSummonsList = function() {
  return /** @type{!Array<!proto.PbModel.FightModel.ClientSummon>} */ (
    jspb.Message.getRepeatedWrapperField(this, FightModel_ClientSummon_pb.ClientSummon, 4));
};


/**
 * @param {!Array<!proto.PbModel.FightModel.ClientSummon>} value
 * @return {!proto.PbModel.FightModel.FightObjectTeamInfo} returns this
*/
proto.PbModel.FightModel.FightObjectTeamInfo.prototype.setSummonsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.PbModel.FightModel.ClientSummon=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.FightModel.ClientSummon}
 */
proto.PbModel.FightModel.FightObjectTeamInfo.prototype.addSummons = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.PbModel.FightModel.ClientSummon, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.FightModel.FightObjectTeamInfo} returns this
 */
proto.PbModel.FightModel.FightObjectTeamInfo.prototype.clearSummonsList = function() {
  return this.setSummonsList([]);
};


goog.object.extend(exports, proto.PbModel.FightModel);
