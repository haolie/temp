// source: FightModel/GetGsNpcTeamInfo.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var FightModel_FightObjectTeamInfo_pb = require('../FightModel/FightObjectTeamInfo_pb.js');
goog.object.extend(proto, FightModel_FightObjectTeamInfo_pb);
var FightModel_RemainHp_pb = require('../FightModel/RemainHp_pb.js');
goog.object.extend(proto, FightModel_RemainHp_pb);
var FightModel_GetGsPlayerTeamInfo_pb = require('../FightModel/GetGsPlayerTeamInfo_pb.js');
goog.object.extend(proto, FightModel_GetGsPlayerTeamInfo_pb);
goog.exportSymbol('proto.PbModel.FightModel.FightRequestEnum', null, global);
goog.exportSymbol('proto.PbModel.FightModel.GetGsNpcTeamInfoReq', null, global);
goog.exportSymbol('proto.PbModel.FightModel.GetGsNpcTeamInfoRes', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.FightModel.GetGsNpcTeamInfoReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.FightModel.GetGsNpcTeamInfoReq.repeatedFields_, null);
};
goog.inherits(proto.PbModel.FightModel.GetGsNpcTeamInfoReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.FightModel.GetGsNpcTeamInfoReq.displayName = 'proto.PbModel.FightModel.GetGsNpcTeamInfoReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.FightModel.GetGsNpcTeamInfoRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.FightModel.GetGsNpcTeamInfoRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.FightModel.GetGsNpcTeamInfoRes.displayName = 'proto.PbModel.FightModel.GetGsNpcTeamInfoRes';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.FightModel.GetGsNpcTeamInfoReq.repeatedFields_ = [3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.FightModel.GetGsNpcTeamInfoReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.FightModel.GetGsNpcTeamInfoReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.FightModel.GetGsNpcTeamInfoReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.FightModel.GetGsNpcTeamInfoReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    submodelid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    defineparamstr: jspb.Message.getFieldWithDefault(msg, 2, ""),
    remainhplistList: jspb.Message.toObjectList(msg.getRemainhplistList(),
    FightModel_RemainHp_pb.RemainHp.toObject, includeInstance),
    playerskillidlistList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    heroextraattrMap: (f = msg.getHeroextraattrMap()) ? f.toObject(includeInstance, proto.PbModel.FightModel.HeroExtraAttr.toObject) : [],
    fightrequestenum: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.FightModel.GetGsNpcTeamInfoReq}
 */
proto.PbModel.FightModel.GetGsNpcTeamInfoReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.FightModel.GetGsNpcTeamInfoReq;
  return proto.PbModel.FightModel.GetGsNpcTeamInfoReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.FightModel.GetGsNpcTeamInfoReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.FightModel.GetGsNpcTeamInfoReq}
 */
proto.PbModel.FightModel.GetGsNpcTeamInfoReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSubmodelid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDefineparamstr(value);
      break;
    case 3:
      var value = new FightModel_RemainHp_pb.RemainHp;
      reader.readMessage(value,FightModel_RemainHp_pb.RemainHp.deserializeBinaryFromReader);
      msg.addRemainhplist(value);
      break;
    case 4:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setPlayerskillidlistList(value);
      break;
    case 5:
      var value = msg.getHeroextraattrMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.PbModel.FightModel.HeroExtraAttr.deserializeBinaryFromReader, "", new proto.PbModel.FightModel.HeroExtraAttr());
         });
      break;
    case 6:
      var value = /** @type {!proto.PbModel.FightModel.FightRequestEnum} */ (reader.readEnum());
      msg.setFightrequestenum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.FightModel.GetGsNpcTeamInfoReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.FightModel.GetGsNpcTeamInfoReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.FightModel.GetGsNpcTeamInfoReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.FightModel.GetGsNpcTeamInfoReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubmodelid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getDefineparamstr();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRemainhplistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      FightModel_RemainHp_pb.RemainHp.serializeBinaryToWriter
    );
  }
  f = message.getPlayerskillidlistList();
  if (f.length > 0) {
    writer.writePackedInt32(
      4,
      f
    );
  }
  f = message.getHeroextraattrMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(5, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.PbModel.FightModel.HeroExtraAttr.serializeBinaryToWriter);
  }
  f = message.getFightrequestenum();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
};


/**
 * optional int32 SubModelId = 1;
 * @return {number}
 */
proto.PbModel.FightModel.GetGsNpcTeamInfoReq.prototype.getSubmodelid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.FightModel.GetGsNpcTeamInfoReq} returns this
 */
proto.PbModel.FightModel.GetGsNpcTeamInfoReq.prototype.setSubmodelid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string DefineParamStr = 2;
 * @return {string}
 */
proto.PbModel.FightModel.GetGsNpcTeamInfoReq.prototype.getDefineparamstr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.FightModel.GetGsNpcTeamInfoReq} returns this
 */
proto.PbModel.FightModel.GetGsNpcTeamInfoReq.prototype.setDefineparamstr = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated RemainHp RemainHpList = 3;
 * @return {!Array<!proto.PbModel.FightModel.RemainHp>}
 */
proto.PbModel.FightModel.GetGsNpcTeamInfoReq.prototype.getRemainhplistList = function() {
  return /** @type{!Array<!proto.PbModel.FightModel.RemainHp>} */ (
    jspb.Message.getRepeatedWrapperField(this, FightModel_RemainHp_pb.RemainHp, 3));
};


/**
 * @param {!Array<!proto.PbModel.FightModel.RemainHp>} value
 * @return {!proto.PbModel.FightModel.GetGsNpcTeamInfoReq} returns this
*/
proto.PbModel.FightModel.GetGsNpcTeamInfoReq.prototype.setRemainhplistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.PbModel.FightModel.RemainHp=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.FightModel.RemainHp}
 */
proto.PbModel.FightModel.GetGsNpcTeamInfoReq.prototype.addRemainhplist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.PbModel.FightModel.RemainHp, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.FightModel.GetGsNpcTeamInfoReq} returns this
 */
proto.PbModel.FightModel.GetGsNpcTeamInfoReq.prototype.clearRemainhplistList = function() {
  return this.setRemainhplistList([]);
};


/**
 * repeated int32 PlayerSkillIdList = 4;
 * @return {!Array<number>}
 */
proto.PbModel.FightModel.GetGsNpcTeamInfoReq.prototype.getPlayerskillidlistList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.PbModel.FightModel.GetGsNpcTeamInfoReq} returns this
 */
proto.PbModel.FightModel.GetGsNpcTeamInfoReq.prototype.setPlayerskillidlistList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.PbModel.FightModel.GetGsNpcTeamInfoReq} returns this
 */
proto.PbModel.FightModel.GetGsNpcTeamInfoReq.prototype.addPlayerskillidlist = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.FightModel.GetGsNpcTeamInfoReq} returns this
 */
proto.PbModel.FightModel.GetGsNpcTeamInfoReq.prototype.clearPlayerskillidlistList = function() {
  return this.setPlayerskillidlistList([]);
};


/**
 * map<string, HeroExtraAttr> HeroExtraAttr = 5;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.PbModel.FightModel.HeroExtraAttr>}
 */
proto.PbModel.FightModel.GetGsNpcTeamInfoReq.prototype.getHeroextraattrMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.PbModel.FightModel.HeroExtraAttr>} */ (
      jspb.Message.getMapField(this, 5, opt_noLazyCreate,
      proto.PbModel.FightModel.HeroExtraAttr));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.PbModel.FightModel.GetGsNpcTeamInfoReq} returns this
 */
proto.PbModel.FightModel.GetGsNpcTeamInfoReq.prototype.clearHeroextraattrMap = function() {
  this.getHeroextraattrMap().clear();
  return this;};


/**
 * optional FightRequestEnum FightRequestEnum = 6;
 * @return {!proto.PbModel.FightModel.FightRequestEnum}
 */
proto.PbModel.FightModel.GetGsNpcTeamInfoReq.prototype.getFightrequestenum = function() {
  return /** @type {!proto.PbModel.FightModel.FightRequestEnum} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.PbModel.FightModel.FightRequestEnum} value
 * @return {!proto.PbModel.FightModel.GetGsNpcTeamInfoReq} returns this
 */
proto.PbModel.FightModel.GetGsNpcTeamInfoReq.prototype.setFightrequestenum = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.FightModel.GetGsNpcTeamInfoRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.FightModel.GetGsNpcTeamInfoRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.FightModel.GetGsNpcTeamInfoRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.FightModel.GetGsNpcTeamInfoRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    fightobjectteaminfo: (f = msg.getFightobjectteaminfo()) && FightModel_FightObjectTeamInfo_pb.FightObjectTeamInfo.toObject(includeInstance, f),
    teamshowinfo: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.FightModel.GetGsNpcTeamInfoRes}
 */
proto.PbModel.FightModel.GetGsNpcTeamInfoRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.FightModel.GetGsNpcTeamInfoRes;
  return proto.PbModel.FightModel.GetGsNpcTeamInfoRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.FightModel.GetGsNpcTeamInfoRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.FightModel.GetGsNpcTeamInfoRes}
 */
proto.PbModel.FightModel.GetGsNpcTeamInfoRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new FightModel_FightObjectTeamInfo_pb.FightObjectTeamInfo;
      reader.readMessage(value,FightModel_FightObjectTeamInfo_pb.FightObjectTeamInfo.deserializeBinaryFromReader);
      msg.setFightobjectteaminfo(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTeamshowinfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.FightModel.GetGsNpcTeamInfoRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.FightModel.GetGsNpcTeamInfoRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.FightModel.GetGsNpcTeamInfoRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.FightModel.GetGsNpcTeamInfoRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFightobjectteaminfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      FightModel_FightObjectTeamInfo_pb.FightObjectTeamInfo.serializeBinaryToWriter
    );
  }
  f = message.getTeamshowinfo();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional FightObjectTeamInfo FightObjectTeamInfo = 1;
 * @return {?proto.PbModel.FightModel.FightObjectTeamInfo}
 */
proto.PbModel.FightModel.GetGsNpcTeamInfoRes.prototype.getFightobjectteaminfo = function() {
  return /** @type{?proto.PbModel.FightModel.FightObjectTeamInfo} */ (
    jspb.Message.getWrapperField(this, FightModel_FightObjectTeamInfo_pb.FightObjectTeamInfo, 1));
};


/**
 * @param {?proto.PbModel.FightModel.FightObjectTeamInfo|undefined} value
 * @return {!proto.PbModel.FightModel.GetGsNpcTeamInfoRes} returns this
*/
proto.PbModel.FightModel.GetGsNpcTeamInfoRes.prototype.setFightobjectteaminfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.FightModel.GetGsNpcTeamInfoRes} returns this
 */
proto.PbModel.FightModel.GetGsNpcTeamInfoRes.prototype.clearFightobjectteaminfo = function() {
  return this.setFightobjectteaminfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.FightModel.GetGsNpcTeamInfoRes.prototype.hasFightobjectteaminfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string TeamShowInfo = 2;
 * @return {string}
 */
proto.PbModel.FightModel.GetGsNpcTeamInfoRes.prototype.getTeamshowinfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.FightModel.GetGsNpcTeamInfoRes} returns this
 */
proto.PbModel.FightModel.GetGsNpcTeamInfoRes.prototype.setTeamshowinfo = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * @enum {number}
 */
proto.PbModel.FightModel.FightRequestEnum = {
  GUILDFLAG: 0
};

goog.object.extend(exports, proto.PbModel.FightModel);
