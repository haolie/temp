// source: Goods.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var Resource_pb = require('./Resource_pb.js');
goog.object.extend(proto, Resource_pb);
goog.exportSymbol('proto.PbModel.Goods.GoodsAddGoodsForDebugReq', null, global);
goog.exportSymbol('proto.PbModel.Goods.GoodsAddGoodsForDebugRes', null, global);
goog.exportSymbol('proto.PbModel.Goods.GoodsDeleteAllGoodsForDebugReq', null, global);
goog.exportSymbol('proto.PbModel.Goods.GoodsDeleteAllGoodsForDebugRes', null, global);
goog.exportSymbol('proto.PbModel.Goods.GoodsMainInfoPB', null, global);
goog.exportSymbol('proto.PbModel.Goods.GoodsPushChangeInfoRes', null, global);
goog.exportSymbol('proto.PbModel.Goods.GoodsSellGoodsReq', null, global);
goog.exportSymbol('proto.PbModel.Goods.GoodsSellGoodsRes', null, global);
goog.exportSymbol('proto.PbModel.Goods.GoodsSubsidiaryInfoPB', null, global);
goog.exportSymbol('proto.PbModel.Goods.GoodsUseGoodsReq', null, global);
goog.exportSymbol('proto.PbModel.Goods.GoodsUseGoodsRes', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Goods.GoodsAddGoodsForDebugReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Goods.GoodsAddGoodsForDebugReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Goods.GoodsAddGoodsForDebugReq.displayName = 'proto.PbModel.Goods.GoodsAddGoodsForDebugReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Goods.GoodsAddGoodsForDebugRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Goods.GoodsAddGoodsForDebugRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Goods.GoodsAddGoodsForDebugRes.displayName = 'proto.PbModel.Goods.GoodsAddGoodsForDebugRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Goods.GoodsDeleteAllGoodsForDebugReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Goods.GoodsDeleteAllGoodsForDebugReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Goods.GoodsDeleteAllGoodsForDebugReq.displayName = 'proto.PbModel.Goods.GoodsDeleteAllGoodsForDebugReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Goods.GoodsDeleteAllGoodsForDebugRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Goods.GoodsDeleteAllGoodsForDebugRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Goods.GoodsDeleteAllGoodsForDebugRes.displayName = 'proto.PbModel.Goods.GoodsDeleteAllGoodsForDebugRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Goods.GoodsMainInfoPB = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.Goods.GoodsMainInfoPB.repeatedFields_, null);
};
goog.inherits(proto.PbModel.Goods.GoodsMainInfoPB, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Goods.GoodsMainInfoPB.displayName = 'proto.PbModel.Goods.GoodsMainInfoPB';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Goods.GoodsSubsidiaryInfoPB = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Goods.GoodsSubsidiaryInfoPB, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Goods.GoodsSubsidiaryInfoPB.displayName = 'proto.PbModel.Goods.GoodsSubsidiaryInfoPB';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Goods.GoodsSellGoodsReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Goods.GoodsSellGoodsReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Goods.GoodsSellGoodsReq.displayName = 'proto.PbModel.Goods.GoodsSellGoodsReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Goods.GoodsSellGoodsRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Goods.GoodsSellGoodsRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Goods.GoodsSellGoodsRes.displayName = 'proto.PbModel.Goods.GoodsSellGoodsRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Goods.GoodsUseGoodsReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Goods.GoodsUseGoodsReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Goods.GoodsUseGoodsReq.displayName = 'proto.PbModel.Goods.GoodsUseGoodsReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Goods.GoodsUseGoodsRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Goods.GoodsUseGoodsRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Goods.GoodsUseGoodsRes.displayName = 'proto.PbModel.Goods.GoodsUseGoodsRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Goods.GoodsPushChangeInfoRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Goods.GoodsPushChangeInfoRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Goods.GoodsPushChangeInfoRes.displayName = 'proto.PbModel.Goods.GoodsPushChangeInfoRes';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Goods.GoodsAddGoodsForDebugReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Goods.GoodsAddGoodsForDebugReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Goods.GoodsAddGoodsForDebugReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Goods.GoodsAddGoodsForDebugReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    goodsmodelid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    count: jspb.Message.getFieldWithDefault(msg, 2, 0),
    exchangeruleid: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Goods.GoodsAddGoodsForDebugReq}
 */
proto.PbModel.Goods.GoodsAddGoodsForDebugReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Goods.GoodsAddGoodsForDebugReq;
  return proto.PbModel.Goods.GoodsAddGoodsForDebugReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Goods.GoodsAddGoodsForDebugReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Goods.GoodsAddGoodsForDebugReq}
 */
proto.PbModel.Goods.GoodsAddGoodsForDebugReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGoodsmodelid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCount(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setExchangeruleid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Goods.GoodsAddGoodsForDebugReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Goods.GoodsAddGoodsForDebugReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Goods.GoodsAddGoodsForDebugReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Goods.GoodsAddGoodsForDebugReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGoodsmodelid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getExchangeruleid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int32 GoodsModelId = 1;
 * @return {number}
 */
proto.PbModel.Goods.GoodsAddGoodsForDebugReq.prototype.getGoodsmodelid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Goods.GoodsAddGoodsForDebugReq} returns this
 */
proto.PbModel.Goods.GoodsAddGoodsForDebugReq.prototype.setGoodsmodelid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 Count = 2;
 * @return {number}
 */
proto.PbModel.Goods.GoodsAddGoodsForDebugReq.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Goods.GoodsAddGoodsForDebugReq} returns this
 */
proto.PbModel.Goods.GoodsAddGoodsForDebugReq.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string ExchangeRuleId = 3;
 * @return {string}
 */
proto.PbModel.Goods.GoodsAddGoodsForDebugReq.prototype.getExchangeruleid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Goods.GoodsAddGoodsForDebugReq} returns this
 */
proto.PbModel.Goods.GoodsAddGoodsForDebugReq.prototype.setExchangeruleid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Goods.GoodsAddGoodsForDebugRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Goods.GoodsAddGoodsForDebugRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Goods.GoodsAddGoodsForDebugRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Goods.GoodsAddGoodsForDebugRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    basegetgameresourcelist: (f = msg.getBasegetgameresourcelist()) && Resource_pb.ResourceToClientModel.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Goods.GoodsAddGoodsForDebugRes}
 */
proto.PbModel.Goods.GoodsAddGoodsForDebugRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Goods.GoodsAddGoodsForDebugRes;
  return proto.PbModel.Goods.GoodsAddGoodsForDebugRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Goods.GoodsAddGoodsForDebugRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Goods.GoodsAddGoodsForDebugRes}
 */
proto.PbModel.Goods.GoodsAddGoodsForDebugRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new Resource_pb.ResourceToClientModel;
      reader.readMessage(value,Resource_pb.ResourceToClientModel.deserializeBinaryFromReader);
      msg.setBasegetgameresourcelist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Goods.GoodsAddGoodsForDebugRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Goods.GoodsAddGoodsForDebugRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Goods.GoodsAddGoodsForDebugRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Goods.GoodsAddGoodsForDebugRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBasegetgameresourcelist();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      Resource_pb.ResourceToClientModel.serializeBinaryToWriter
    );
  }
};


/**
 * optional PbModel.Resource.ResourceToClientModel BaseGetGameResourceList = 1;
 * @return {?proto.PbModel.Resource.ResourceToClientModel}
 */
proto.PbModel.Goods.GoodsAddGoodsForDebugRes.prototype.getBasegetgameresourcelist = function() {
  return /** @type{?proto.PbModel.Resource.ResourceToClientModel} */ (
    jspb.Message.getWrapperField(this, Resource_pb.ResourceToClientModel, 1));
};


/**
 * @param {?proto.PbModel.Resource.ResourceToClientModel|undefined} value
 * @return {!proto.PbModel.Goods.GoodsAddGoodsForDebugRes} returns this
*/
proto.PbModel.Goods.GoodsAddGoodsForDebugRes.prototype.setBasegetgameresourcelist = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.Goods.GoodsAddGoodsForDebugRes} returns this
 */
proto.PbModel.Goods.GoodsAddGoodsForDebugRes.prototype.clearBasegetgameresourcelist = function() {
  return this.setBasegetgameresourcelist(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.Goods.GoodsAddGoodsForDebugRes.prototype.hasBasegetgameresourcelist = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Goods.GoodsDeleteAllGoodsForDebugReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Goods.GoodsDeleteAllGoodsForDebugReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Goods.GoodsDeleteAllGoodsForDebugReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Goods.GoodsDeleteAllGoodsForDebugReq.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Goods.GoodsDeleteAllGoodsForDebugReq}
 */
proto.PbModel.Goods.GoodsDeleteAllGoodsForDebugReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Goods.GoodsDeleteAllGoodsForDebugReq;
  return proto.PbModel.Goods.GoodsDeleteAllGoodsForDebugReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Goods.GoodsDeleteAllGoodsForDebugReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Goods.GoodsDeleteAllGoodsForDebugReq}
 */
proto.PbModel.Goods.GoodsDeleteAllGoodsForDebugReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Goods.GoodsDeleteAllGoodsForDebugReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Goods.GoodsDeleteAllGoodsForDebugReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Goods.GoodsDeleteAllGoodsForDebugReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Goods.GoodsDeleteAllGoodsForDebugReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Goods.GoodsDeleteAllGoodsForDebugRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Goods.GoodsDeleteAllGoodsForDebugRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Goods.GoodsDeleteAllGoodsForDebugRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Goods.GoodsDeleteAllGoodsForDebugRes.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Goods.GoodsDeleteAllGoodsForDebugRes}
 */
proto.PbModel.Goods.GoodsDeleteAllGoodsForDebugRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Goods.GoodsDeleteAllGoodsForDebugRes;
  return proto.PbModel.Goods.GoodsDeleteAllGoodsForDebugRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Goods.GoodsDeleteAllGoodsForDebugRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Goods.GoodsDeleteAllGoodsForDebugRes}
 */
proto.PbModel.Goods.GoodsDeleteAllGoodsForDebugRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Goods.GoodsDeleteAllGoodsForDebugRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Goods.GoodsDeleteAllGoodsForDebugRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Goods.GoodsDeleteAllGoodsForDebugRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Goods.GoodsDeleteAllGoodsForDebugRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.Goods.GoodsMainInfoPB.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Goods.GoodsMainInfoPB.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Goods.GoodsMainInfoPB.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Goods.GoodsMainInfoPB} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Goods.GoodsMainInfoPB.toObject = function(includeInstance, msg) {
  var f, obj = {
    pbgoodssubsidiaryinfolistList: jspb.Message.toObjectList(msg.getPbgoodssubsidiaryinfolistList(),
    proto.PbModel.Goods.GoodsSubsidiaryInfoPB.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Goods.GoodsMainInfoPB}
 */
proto.PbModel.Goods.GoodsMainInfoPB.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Goods.GoodsMainInfoPB;
  return proto.PbModel.Goods.GoodsMainInfoPB.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Goods.GoodsMainInfoPB} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Goods.GoodsMainInfoPB}
 */
proto.PbModel.Goods.GoodsMainInfoPB.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PbModel.Goods.GoodsSubsidiaryInfoPB;
      reader.readMessage(value,proto.PbModel.Goods.GoodsSubsidiaryInfoPB.deserializeBinaryFromReader);
      msg.addPbgoodssubsidiaryinfolist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Goods.GoodsMainInfoPB.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Goods.GoodsMainInfoPB.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Goods.GoodsMainInfoPB} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Goods.GoodsMainInfoPB.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPbgoodssubsidiaryinfolistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.PbModel.Goods.GoodsSubsidiaryInfoPB.serializeBinaryToWriter
    );
  }
};


/**
 * repeated GoodsSubsidiaryInfoPB PBGoodsSubsidiaryInfoList = 1;
 * @return {!Array<!proto.PbModel.Goods.GoodsSubsidiaryInfoPB>}
 */
proto.PbModel.Goods.GoodsMainInfoPB.prototype.getPbgoodssubsidiaryinfolistList = function() {
  return /** @type{!Array<!proto.PbModel.Goods.GoodsSubsidiaryInfoPB>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.Goods.GoodsSubsidiaryInfoPB, 1));
};


/**
 * @param {!Array<!proto.PbModel.Goods.GoodsSubsidiaryInfoPB>} value
 * @return {!proto.PbModel.Goods.GoodsMainInfoPB} returns this
*/
proto.PbModel.Goods.GoodsMainInfoPB.prototype.setPbgoodssubsidiaryinfolistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.PbModel.Goods.GoodsSubsidiaryInfoPB=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.Goods.GoodsSubsidiaryInfoPB}
 */
proto.PbModel.Goods.GoodsMainInfoPB.prototype.addPbgoodssubsidiaryinfolist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.PbModel.Goods.GoodsSubsidiaryInfoPB, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.Goods.GoodsMainInfoPB} returns this
 */
proto.PbModel.Goods.GoodsMainInfoPB.prototype.clearPbgoodssubsidiaryinfolistList = function() {
  return this.setPbgoodssubsidiaryinfolistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Goods.GoodsSubsidiaryInfoPB.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Goods.GoodsSubsidiaryInfoPB.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Goods.GoodsSubsidiaryInfoPB} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Goods.GoodsSubsidiaryInfoPB.toObject = function(includeInstance, msg) {
  var f, obj = {
    entityid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    modelid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    count: jspb.Message.getFieldWithDefault(msg, 3, 0),
    exchangeruleid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    canexchangecount: jspb.Message.getFieldWithDefault(msg, 5, 0),
    endtime: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Goods.GoodsSubsidiaryInfoPB}
 */
proto.PbModel.Goods.GoodsSubsidiaryInfoPB.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Goods.GoodsSubsidiaryInfoPB;
  return proto.PbModel.Goods.GoodsSubsidiaryInfoPB.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Goods.GoodsSubsidiaryInfoPB} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Goods.GoodsSubsidiaryInfoPB}
 */
proto.PbModel.Goods.GoodsSubsidiaryInfoPB.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEntityid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setModelid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCount(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setExchangeruleid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCanexchangecount(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEndtime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Goods.GoodsSubsidiaryInfoPB.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Goods.GoodsSubsidiaryInfoPB.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Goods.GoodsSubsidiaryInfoPB} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Goods.GoodsSubsidiaryInfoPB.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntityid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getModelid();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getExchangeruleid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCanexchangecount();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getEndtime();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
};


/**
 * optional string EntityId = 1;
 * @return {string}
 */
proto.PbModel.Goods.GoodsSubsidiaryInfoPB.prototype.getEntityid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Goods.GoodsSubsidiaryInfoPB} returns this
 */
proto.PbModel.Goods.GoodsSubsidiaryInfoPB.prototype.setEntityid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 ModelId = 2;
 * @return {number}
 */
proto.PbModel.Goods.GoodsSubsidiaryInfoPB.prototype.getModelid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Goods.GoodsSubsidiaryInfoPB} returns this
 */
proto.PbModel.Goods.GoodsSubsidiaryInfoPB.prototype.setModelid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 Count = 3;
 * @return {number}
 */
proto.PbModel.Goods.GoodsSubsidiaryInfoPB.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Goods.GoodsSubsidiaryInfoPB} returns this
 */
proto.PbModel.Goods.GoodsSubsidiaryInfoPB.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string ExchangeRuleId = 4;
 * @return {string}
 */
proto.PbModel.Goods.GoodsSubsidiaryInfoPB.prototype.getExchangeruleid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Goods.GoodsSubsidiaryInfoPB} returns this
 */
proto.PbModel.Goods.GoodsSubsidiaryInfoPB.prototype.setExchangeruleid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int64 CanExchangeCount = 5;
 * @return {number}
 */
proto.PbModel.Goods.GoodsSubsidiaryInfoPB.prototype.getCanexchangecount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Goods.GoodsSubsidiaryInfoPB} returns this
 */
proto.PbModel.Goods.GoodsSubsidiaryInfoPB.prototype.setCanexchangecount = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 EndTime = 6;
 * @return {number}
 */
proto.PbModel.Goods.GoodsSubsidiaryInfoPB.prototype.getEndtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Goods.GoodsSubsidiaryInfoPB} returns this
 */
proto.PbModel.Goods.GoodsSubsidiaryInfoPB.prototype.setEndtime = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Goods.GoodsSellGoodsReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Goods.GoodsSellGoodsReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Goods.GoodsSellGoodsReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Goods.GoodsSellGoodsReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    goodsmodelid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    sellcount: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Goods.GoodsSellGoodsReq}
 */
proto.PbModel.Goods.GoodsSellGoodsReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Goods.GoodsSellGoodsReq;
  return proto.PbModel.Goods.GoodsSellGoodsReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Goods.GoodsSellGoodsReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Goods.GoodsSellGoodsReq}
 */
proto.PbModel.Goods.GoodsSellGoodsReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGoodsmodelid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSellcount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Goods.GoodsSellGoodsReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Goods.GoodsSellGoodsReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Goods.GoodsSellGoodsReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Goods.GoodsSellGoodsReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGoodsmodelid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getSellcount();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional int32 GoodsModelId = 1;
 * @return {number}
 */
proto.PbModel.Goods.GoodsSellGoodsReq.prototype.getGoodsmodelid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Goods.GoodsSellGoodsReq} returns this
 */
proto.PbModel.Goods.GoodsSellGoodsReq.prototype.setGoodsmodelid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 SellCount = 2;
 * @return {number}
 */
proto.PbModel.Goods.GoodsSellGoodsReq.prototype.getSellcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Goods.GoodsSellGoodsReq} returns this
 */
proto.PbModel.Goods.GoodsSellGoodsReq.prototype.setSellcount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Goods.GoodsSellGoodsRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Goods.GoodsSellGoodsRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Goods.GoodsSellGoodsRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Goods.GoodsSellGoodsRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    basegetgameresourcelist: (f = msg.getBasegetgameresourcelist()) && Resource_pb.ResourceToClientModel.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Goods.GoodsSellGoodsRes}
 */
proto.PbModel.Goods.GoodsSellGoodsRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Goods.GoodsSellGoodsRes;
  return proto.PbModel.Goods.GoodsSellGoodsRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Goods.GoodsSellGoodsRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Goods.GoodsSellGoodsRes}
 */
proto.PbModel.Goods.GoodsSellGoodsRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new Resource_pb.ResourceToClientModel;
      reader.readMessage(value,Resource_pb.ResourceToClientModel.deserializeBinaryFromReader);
      msg.setBasegetgameresourcelist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Goods.GoodsSellGoodsRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Goods.GoodsSellGoodsRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Goods.GoodsSellGoodsRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Goods.GoodsSellGoodsRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBasegetgameresourcelist();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      Resource_pb.ResourceToClientModel.serializeBinaryToWriter
    );
  }
};


/**
 * optional PbModel.Resource.ResourceToClientModel BaseGetGameResourceList = 1;
 * @return {?proto.PbModel.Resource.ResourceToClientModel}
 */
proto.PbModel.Goods.GoodsSellGoodsRes.prototype.getBasegetgameresourcelist = function() {
  return /** @type{?proto.PbModel.Resource.ResourceToClientModel} */ (
    jspb.Message.getWrapperField(this, Resource_pb.ResourceToClientModel, 1));
};


/**
 * @param {?proto.PbModel.Resource.ResourceToClientModel|undefined} value
 * @return {!proto.PbModel.Goods.GoodsSellGoodsRes} returns this
*/
proto.PbModel.Goods.GoodsSellGoodsRes.prototype.setBasegetgameresourcelist = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.Goods.GoodsSellGoodsRes} returns this
 */
proto.PbModel.Goods.GoodsSellGoodsRes.prototype.clearBasegetgameresourcelist = function() {
  return this.setBasegetgameresourcelist(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.Goods.GoodsSellGoodsRes.prototype.hasBasegetgameresourcelist = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Goods.GoodsUseGoodsReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Goods.GoodsUseGoodsReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Goods.GoodsUseGoodsReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Goods.GoodsUseGoodsReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    entityid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    goodsmodelid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    usecount: jspb.Message.getFieldWithDefault(msg, 3, 0),
    optionalstr: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Goods.GoodsUseGoodsReq}
 */
proto.PbModel.Goods.GoodsUseGoodsReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Goods.GoodsUseGoodsReq;
  return proto.PbModel.Goods.GoodsUseGoodsReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Goods.GoodsUseGoodsReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Goods.GoodsUseGoodsReq}
 */
proto.PbModel.Goods.GoodsUseGoodsReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEntityid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGoodsmodelid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUsecount(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setOptionalstr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Goods.GoodsUseGoodsReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Goods.GoodsUseGoodsReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Goods.GoodsUseGoodsReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Goods.GoodsUseGoodsReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntityid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getGoodsmodelid();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getUsecount();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getOptionalstr();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string EntityId = 1;
 * @return {string}
 */
proto.PbModel.Goods.GoodsUseGoodsReq.prototype.getEntityid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Goods.GoodsUseGoodsReq} returns this
 */
proto.PbModel.Goods.GoodsUseGoodsReq.prototype.setEntityid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 GoodsModelId = 2;
 * @return {number}
 */
proto.PbModel.Goods.GoodsUseGoodsReq.prototype.getGoodsmodelid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Goods.GoodsUseGoodsReq} returns this
 */
proto.PbModel.Goods.GoodsUseGoodsReq.prototype.setGoodsmodelid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 UseCount = 3;
 * @return {number}
 */
proto.PbModel.Goods.GoodsUseGoodsReq.prototype.getUsecount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Goods.GoodsUseGoodsReq} returns this
 */
proto.PbModel.Goods.GoodsUseGoodsReq.prototype.setUsecount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string OptionalStr = 4;
 * @return {string}
 */
proto.PbModel.Goods.GoodsUseGoodsReq.prototype.getOptionalstr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Goods.GoodsUseGoodsReq} returns this
 */
proto.PbModel.Goods.GoodsUseGoodsReq.prototype.setOptionalstr = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Goods.GoodsUseGoodsRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Goods.GoodsUseGoodsRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Goods.GoodsUseGoodsRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Goods.GoodsUseGoodsRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    basegetgameresourcelist: (f = msg.getBasegetgameresourcelist()) && Resource_pb.ResourceToClientModel.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Goods.GoodsUseGoodsRes}
 */
proto.PbModel.Goods.GoodsUseGoodsRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Goods.GoodsUseGoodsRes;
  return proto.PbModel.Goods.GoodsUseGoodsRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Goods.GoodsUseGoodsRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Goods.GoodsUseGoodsRes}
 */
proto.PbModel.Goods.GoodsUseGoodsRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new Resource_pb.ResourceToClientModel;
      reader.readMessage(value,Resource_pb.ResourceToClientModel.deserializeBinaryFromReader);
      msg.setBasegetgameresourcelist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Goods.GoodsUseGoodsRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Goods.GoodsUseGoodsRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Goods.GoodsUseGoodsRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Goods.GoodsUseGoodsRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBasegetgameresourcelist();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      Resource_pb.ResourceToClientModel.serializeBinaryToWriter
    );
  }
};


/**
 * optional PbModel.Resource.ResourceToClientModel BaseGetGameResourceList = 1;
 * @return {?proto.PbModel.Resource.ResourceToClientModel}
 */
proto.PbModel.Goods.GoodsUseGoodsRes.prototype.getBasegetgameresourcelist = function() {
  return /** @type{?proto.PbModel.Resource.ResourceToClientModel} */ (
    jspb.Message.getWrapperField(this, Resource_pb.ResourceToClientModel, 1));
};


/**
 * @param {?proto.PbModel.Resource.ResourceToClientModel|undefined} value
 * @return {!proto.PbModel.Goods.GoodsUseGoodsRes} returns this
*/
proto.PbModel.Goods.GoodsUseGoodsRes.prototype.setBasegetgameresourcelist = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.Goods.GoodsUseGoodsRes} returns this
 */
proto.PbModel.Goods.GoodsUseGoodsRes.prototype.clearBasegetgameresourcelist = function() {
  return this.setBasegetgameresourcelist(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.Goods.GoodsUseGoodsRes.prototype.hasBasegetgameresourcelist = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Goods.GoodsPushChangeInfoRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Goods.GoodsPushChangeInfoRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Goods.GoodsPushChangeInfoRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Goods.GoodsPushChangeInfoRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    goodsinfodicMap: (f = msg.getGoodsinfodicMap()) ? f.toObject(includeInstance, proto.PbModel.Goods.GoodsMainInfoPB.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Goods.GoodsPushChangeInfoRes}
 */
proto.PbModel.Goods.GoodsPushChangeInfoRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Goods.GoodsPushChangeInfoRes;
  return proto.PbModel.Goods.GoodsPushChangeInfoRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Goods.GoodsPushChangeInfoRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Goods.GoodsPushChangeInfoRes}
 */
proto.PbModel.Goods.GoodsPushChangeInfoRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getGoodsinfodicMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readMessage, proto.PbModel.Goods.GoodsMainInfoPB.deserializeBinaryFromReader, 0, new proto.PbModel.Goods.GoodsMainInfoPB());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Goods.GoodsPushChangeInfoRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Goods.GoodsPushChangeInfoRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Goods.GoodsPushChangeInfoRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Goods.GoodsPushChangeInfoRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGoodsinfodicMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeMessage, proto.PbModel.Goods.GoodsMainInfoPB.serializeBinaryToWriter);
  }
};


/**
 * map<int32, GoodsMainInfoPB> GoodsInfoDic = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,!proto.PbModel.Goods.GoodsMainInfoPB>}
 */
proto.PbModel.Goods.GoodsPushChangeInfoRes.prototype.getGoodsinfodicMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,!proto.PbModel.Goods.GoodsMainInfoPB>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.PbModel.Goods.GoodsMainInfoPB));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.PbModel.Goods.GoodsPushChangeInfoRes} returns this
 */
proto.PbModel.Goods.GoodsPushChangeInfoRes.prototype.clearGoodsinfodicMap = function() {
  this.getGoodsinfodicMap().clear();
  return this;};


goog.object.extend(exports, proto.PbModel.Goods);
