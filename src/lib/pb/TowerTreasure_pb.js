// source: TowerTreasure.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var Resource_pb = require('./Resource_pb.js');
goog.object.extend(proto, Resource_pb);
goog.exportSymbol('proto.PbModel.TowerTreasure.TowerTreasureAwardConfig', null, global);
goog.exportSymbol('proto.PbModel.TowerTreasure.TowerTreasureAwardConfigList', null, global);
goog.exportSymbol('proto.PbModel.TowerTreasure.TowerTreasureChargeConfig', null, global);
goog.exportSymbol('proto.PbModel.TowerTreasure.TowerTreasureConfig', null, global);
goog.exportSymbol('proto.PbModel.TowerTreasure.TowerTreasureDrawReq', null, global);
goog.exportSymbol('proto.PbModel.TowerTreasure.TowerTreasureDrawRes', null, global);
goog.exportSymbol('proto.PbModel.TowerTreasure.TowerTreasureGetInfoReq', null, global);
goog.exportSymbol('proto.PbModel.TowerTreasure.TowerTreasureGetInfoRes', null, global);
goog.exportSymbol('proto.PbModel.TowerTreasure.TowerTreasureObj', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.TowerTreasure.TowerTreasureDrawReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.TowerTreasure.TowerTreasureDrawReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.TowerTreasure.TowerTreasureDrawReq.displayName = 'proto.PbModel.TowerTreasure.TowerTreasureDrawReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.TowerTreasure.TowerTreasureDrawRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.TowerTreasure.TowerTreasureDrawRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.TowerTreasure.TowerTreasureDrawRes.displayName = 'proto.PbModel.TowerTreasure.TowerTreasureDrawRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.TowerTreasure.TowerTreasureGetInfoReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.TowerTreasure.TowerTreasureGetInfoReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.TowerTreasure.TowerTreasureGetInfoReq.displayName = 'proto.PbModel.TowerTreasure.TowerTreasureGetInfoReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.TowerTreasure.TowerTreasureGetInfoRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.TowerTreasure.TowerTreasureGetInfoRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.TowerTreasure.TowerTreasureGetInfoRes.displayName = 'proto.PbModel.TowerTreasure.TowerTreasureGetInfoRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.TowerTreasure.TowerTreasureObj = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.TowerTreasure.TowerTreasureObj.repeatedFields_, null);
};
goog.inherits(proto.PbModel.TowerTreasure.TowerTreasureObj, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.TowerTreasure.TowerTreasureObj.displayName = 'proto.PbModel.TowerTreasure.TowerTreasureObj';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.TowerTreasure.TowerTreasureConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.TowerTreasure.TowerTreasureConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.TowerTreasure.TowerTreasureConfig.displayName = 'proto.PbModel.TowerTreasure.TowerTreasureConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.TowerTreasure.TowerTreasureChargeConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.TowerTreasure.TowerTreasureChargeConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.TowerTreasure.TowerTreasureChargeConfig.displayName = 'proto.PbModel.TowerTreasure.TowerTreasureChargeConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.TowerTreasure.TowerTreasureAwardConfigList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.TowerTreasure.TowerTreasureAwardConfigList.repeatedFields_, null);
};
goog.inherits(proto.PbModel.TowerTreasure.TowerTreasureAwardConfigList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.TowerTreasure.TowerTreasureAwardConfigList.displayName = 'proto.PbModel.TowerTreasure.TowerTreasureAwardConfigList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.TowerTreasure.TowerTreasureAwardConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.TowerTreasure.TowerTreasureAwardConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.TowerTreasure.TowerTreasureAwardConfig.displayName = 'proto.PbModel.TowerTreasure.TowerTreasureAwardConfig';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.TowerTreasure.TowerTreasureDrawReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.TowerTreasure.TowerTreasureDrawReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.TowerTreasure.TowerTreasureDrawReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.TowerTreasure.TowerTreasureDrawReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    activityid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    layerid: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.TowerTreasure.TowerTreasureDrawReq}
 */
proto.PbModel.TowerTreasure.TowerTreasureDrawReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.TowerTreasure.TowerTreasureDrawReq;
  return proto.PbModel.TowerTreasure.TowerTreasureDrawReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.TowerTreasure.TowerTreasureDrawReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.TowerTreasure.TowerTreasureDrawReq}
 */
proto.PbModel.TowerTreasure.TowerTreasureDrawReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setActivityid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLayerid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.TowerTreasure.TowerTreasureDrawReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.TowerTreasure.TowerTreasureDrawReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.TowerTreasure.TowerTreasureDrawReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.TowerTreasure.TowerTreasureDrawReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActivityid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getLayerid();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 ActivityId = 1;
 * @return {number}
 */
proto.PbModel.TowerTreasure.TowerTreasureDrawReq.prototype.getActivityid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.TowerTreasure.TowerTreasureDrawReq} returns this
 */
proto.PbModel.TowerTreasure.TowerTreasureDrawReq.prototype.setActivityid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 LayerId = 2;
 * @return {number}
 */
proto.PbModel.TowerTreasure.TowerTreasureDrawReq.prototype.getLayerid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.TowerTreasure.TowerTreasureDrawReq} returns this
 */
proto.PbModel.TowerTreasure.TowerTreasureDrawReq.prototype.setLayerid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.TowerTreasure.TowerTreasureDrawRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.TowerTreasure.TowerTreasureDrawRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.TowerTreasure.TowerTreasureDrawRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.TowerTreasure.TowerTreasureDrawRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    towertreasureinfo: (f = msg.getTowertreasureinfo()) && proto.PbModel.TowerTreasure.TowerTreasureObj.toObject(includeInstance, f),
    towertreasureconfig: (f = msg.getTowertreasureconfig()) && proto.PbModel.TowerTreasure.TowerTreasureConfig.toObject(includeInstance, f),
    basegetgameresourcelist: (f = msg.getBasegetgameresourcelist()) && Resource_pb.ResourceToClientModel.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.TowerTreasure.TowerTreasureDrawRes}
 */
proto.PbModel.TowerTreasure.TowerTreasureDrawRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.TowerTreasure.TowerTreasureDrawRes;
  return proto.PbModel.TowerTreasure.TowerTreasureDrawRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.TowerTreasure.TowerTreasureDrawRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.TowerTreasure.TowerTreasureDrawRes}
 */
proto.PbModel.TowerTreasure.TowerTreasureDrawRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PbModel.TowerTreasure.TowerTreasureObj;
      reader.readMessage(value,proto.PbModel.TowerTreasure.TowerTreasureObj.deserializeBinaryFromReader);
      msg.setTowertreasureinfo(value);
      break;
    case 2:
      var value = new proto.PbModel.TowerTreasure.TowerTreasureConfig;
      reader.readMessage(value,proto.PbModel.TowerTreasure.TowerTreasureConfig.deserializeBinaryFromReader);
      msg.setTowertreasureconfig(value);
      break;
    case 3:
      var value = new Resource_pb.ResourceToClientModel;
      reader.readMessage(value,Resource_pb.ResourceToClientModel.deserializeBinaryFromReader);
      msg.setBasegetgameresourcelist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.TowerTreasure.TowerTreasureDrawRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.TowerTreasure.TowerTreasureDrawRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.TowerTreasure.TowerTreasureDrawRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.TowerTreasure.TowerTreasureDrawRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTowertreasureinfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.PbModel.TowerTreasure.TowerTreasureObj.serializeBinaryToWriter
    );
  }
  f = message.getTowertreasureconfig();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.PbModel.TowerTreasure.TowerTreasureConfig.serializeBinaryToWriter
    );
  }
  f = message.getBasegetgameresourcelist();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      Resource_pb.ResourceToClientModel.serializeBinaryToWriter
    );
  }
};


/**
 * optional TowerTreasureObj TowerTreasureInfo = 1;
 * @return {?proto.PbModel.TowerTreasure.TowerTreasureObj}
 */
proto.PbModel.TowerTreasure.TowerTreasureDrawRes.prototype.getTowertreasureinfo = function() {
  return /** @type{?proto.PbModel.TowerTreasure.TowerTreasureObj} */ (
    jspb.Message.getWrapperField(this, proto.PbModel.TowerTreasure.TowerTreasureObj, 1));
};


/**
 * @param {?proto.PbModel.TowerTreasure.TowerTreasureObj|undefined} value
 * @return {!proto.PbModel.TowerTreasure.TowerTreasureDrawRes} returns this
*/
proto.PbModel.TowerTreasure.TowerTreasureDrawRes.prototype.setTowertreasureinfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.TowerTreasure.TowerTreasureDrawRes} returns this
 */
proto.PbModel.TowerTreasure.TowerTreasureDrawRes.prototype.clearTowertreasureinfo = function() {
  return this.setTowertreasureinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.TowerTreasure.TowerTreasureDrawRes.prototype.hasTowertreasureinfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TowerTreasureConfig TowerTreasureConfig = 2;
 * @return {?proto.PbModel.TowerTreasure.TowerTreasureConfig}
 */
proto.PbModel.TowerTreasure.TowerTreasureDrawRes.prototype.getTowertreasureconfig = function() {
  return /** @type{?proto.PbModel.TowerTreasure.TowerTreasureConfig} */ (
    jspb.Message.getWrapperField(this, proto.PbModel.TowerTreasure.TowerTreasureConfig, 2));
};


/**
 * @param {?proto.PbModel.TowerTreasure.TowerTreasureConfig|undefined} value
 * @return {!proto.PbModel.TowerTreasure.TowerTreasureDrawRes} returns this
*/
proto.PbModel.TowerTreasure.TowerTreasureDrawRes.prototype.setTowertreasureconfig = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.TowerTreasure.TowerTreasureDrawRes} returns this
 */
proto.PbModel.TowerTreasure.TowerTreasureDrawRes.prototype.clearTowertreasureconfig = function() {
  return this.setTowertreasureconfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.TowerTreasure.TowerTreasureDrawRes.prototype.hasTowertreasureconfig = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional PbModel.Resource.ResourceToClientModel BaseGetGameResourceList = 3;
 * @return {?proto.PbModel.Resource.ResourceToClientModel}
 */
proto.PbModel.TowerTreasure.TowerTreasureDrawRes.prototype.getBasegetgameresourcelist = function() {
  return /** @type{?proto.PbModel.Resource.ResourceToClientModel} */ (
    jspb.Message.getWrapperField(this, Resource_pb.ResourceToClientModel, 3));
};


/**
 * @param {?proto.PbModel.Resource.ResourceToClientModel|undefined} value
 * @return {!proto.PbModel.TowerTreasure.TowerTreasureDrawRes} returns this
*/
proto.PbModel.TowerTreasure.TowerTreasureDrawRes.prototype.setBasegetgameresourcelist = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.TowerTreasure.TowerTreasureDrawRes} returns this
 */
proto.PbModel.TowerTreasure.TowerTreasureDrawRes.prototype.clearBasegetgameresourcelist = function() {
  return this.setBasegetgameresourcelist(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.TowerTreasure.TowerTreasureDrawRes.prototype.hasBasegetgameresourcelist = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.TowerTreasure.TowerTreasureGetInfoReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.TowerTreasure.TowerTreasureGetInfoReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.TowerTreasure.TowerTreasureGetInfoReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.TowerTreasure.TowerTreasureGetInfoReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    activityid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.TowerTreasure.TowerTreasureGetInfoReq}
 */
proto.PbModel.TowerTreasure.TowerTreasureGetInfoReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.TowerTreasure.TowerTreasureGetInfoReq;
  return proto.PbModel.TowerTreasure.TowerTreasureGetInfoReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.TowerTreasure.TowerTreasureGetInfoReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.TowerTreasure.TowerTreasureGetInfoReq}
 */
proto.PbModel.TowerTreasure.TowerTreasureGetInfoReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setActivityid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.TowerTreasure.TowerTreasureGetInfoReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.TowerTreasure.TowerTreasureGetInfoReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.TowerTreasure.TowerTreasureGetInfoReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.TowerTreasure.TowerTreasureGetInfoReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActivityid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 ActivityId = 1;
 * @return {number}
 */
proto.PbModel.TowerTreasure.TowerTreasureGetInfoReq.prototype.getActivityid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.TowerTreasure.TowerTreasureGetInfoReq} returns this
 */
proto.PbModel.TowerTreasure.TowerTreasureGetInfoReq.prototype.setActivityid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.TowerTreasure.TowerTreasureGetInfoRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.TowerTreasure.TowerTreasureGetInfoRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.TowerTreasure.TowerTreasureGetInfoRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.TowerTreasure.TowerTreasureGetInfoRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    towertreasureinfo: (f = msg.getTowertreasureinfo()) && proto.PbModel.TowerTreasure.TowerTreasureObj.toObject(includeInstance, f),
    towertreasureconfig: (f = msg.getTowertreasureconfig()) && proto.PbModel.TowerTreasure.TowerTreasureConfig.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.TowerTreasure.TowerTreasureGetInfoRes}
 */
proto.PbModel.TowerTreasure.TowerTreasureGetInfoRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.TowerTreasure.TowerTreasureGetInfoRes;
  return proto.PbModel.TowerTreasure.TowerTreasureGetInfoRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.TowerTreasure.TowerTreasureGetInfoRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.TowerTreasure.TowerTreasureGetInfoRes}
 */
proto.PbModel.TowerTreasure.TowerTreasureGetInfoRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PbModel.TowerTreasure.TowerTreasureObj;
      reader.readMessage(value,proto.PbModel.TowerTreasure.TowerTreasureObj.deserializeBinaryFromReader);
      msg.setTowertreasureinfo(value);
      break;
    case 2:
      var value = new proto.PbModel.TowerTreasure.TowerTreasureConfig;
      reader.readMessage(value,proto.PbModel.TowerTreasure.TowerTreasureConfig.deserializeBinaryFromReader);
      msg.setTowertreasureconfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.TowerTreasure.TowerTreasureGetInfoRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.TowerTreasure.TowerTreasureGetInfoRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.TowerTreasure.TowerTreasureGetInfoRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.TowerTreasure.TowerTreasureGetInfoRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTowertreasureinfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.PbModel.TowerTreasure.TowerTreasureObj.serializeBinaryToWriter
    );
  }
  f = message.getTowertreasureconfig();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.PbModel.TowerTreasure.TowerTreasureConfig.serializeBinaryToWriter
    );
  }
};


/**
 * optional TowerTreasureObj TowerTreasureInfo = 1;
 * @return {?proto.PbModel.TowerTreasure.TowerTreasureObj}
 */
proto.PbModel.TowerTreasure.TowerTreasureGetInfoRes.prototype.getTowertreasureinfo = function() {
  return /** @type{?proto.PbModel.TowerTreasure.TowerTreasureObj} */ (
    jspb.Message.getWrapperField(this, proto.PbModel.TowerTreasure.TowerTreasureObj, 1));
};


/**
 * @param {?proto.PbModel.TowerTreasure.TowerTreasureObj|undefined} value
 * @return {!proto.PbModel.TowerTreasure.TowerTreasureGetInfoRes} returns this
*/
proto.PbModel.TowerTreasure.TowerTreasureGetInfoRes.prototype.setTowertreasureinfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.TowerTreasure.TowerTreasureGetInfoRes} returns this
 */
proto.PbModel.TowerTreasure.TowerTreasureGetInfoRes.prototype.clearTowertreasureinfo = function() {
  return this.setTowertreasureinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.TowerTreasure.TowerTreasureGetInfoRes.prototype.hasTowertreasureinfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TowerTreasureConfig TowerTreasureConfig = 2;
 * @return {?proto.PbModel.TowerTreasure.TowerTreasureConfig}
 */
proto.PbModel.TowerTreasure.TowerTreasureGetInfoRes.prototype.getTowertreasureconfig = function() {
  return /** @type{?proto.PbModel.TowerTreasure.TowerTreasureConfig} */ (
    jspb.Message.getWrapperField(this, proto.PbModel.TowerTreasure.TowerTreasureConfig, 2));
};


/**
 * @param {?proto.PbModel.TowerTreasure.TowerTreasureConfig|undefined} value
 * @return {!proto.PbModel.TowerTreasure.TowerTreasureGetInfoRes} returns this
*/
proto.PbModel.TowerTreasure.TowerTreasureGetInfoRes.prototype.setTowertreasureconfig = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.TowerTreasure.TowerTreasureGetInfoRes} returns this
 */
proto.PbModel.TowerTreasure.TowerTreasureGetInfoRes.prototype.clearTowertreasureconfig = function() {
  return this.setTowertreasureconfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.TowerTreasure.TowerTreasureGetInfoRes.prototype.hasTowertreasureconfig = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.TowerTreasure.TowerTreasureObj.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.TowerTreasure.TowerTreasureObj.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.TowerTreasure.TowerTreasureObj.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.TowerTreasure.TowerTreasureObj} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.TowerTreasure.TowerTreasureObj.toObject = function(includeInstance, msg) {
  var f, obj = {
    activityid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    activityenum: jspb.Message.getFieldWithDefault(msg, 2, 0),
    chargelistList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    freedrawdic: jspb.Message.getFieldWithDefault(msg, 4, ""),
    chargedrawdic: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.TowerTreasure.TowerTreasureObj}
 */
proto.PbModel.TowerTreasure.TowerTreasureObj.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.TowerTreasure.TowerTreasureObj;
  return proto.PbModel.TowerTreasure.TowerTreasureObj.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.TowerTreasure.TowerTreasureObj} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.TowerTreasure.TowerTreasureObj}
 */
proto.PbModel.TowerTreasure.TowerTreasureObj.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setActivityid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setActivityenum(value);
      break;
    case 3:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setChargelistList(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFreedrawdic(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setChargedrawdic(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.TowerTreasure.TowerTreasureObj.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.TowerTreasure.TowerTreasureObj.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.TowerTreasure.TowerTreasureObj} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.TowerTreasure.TowerTreasureObj.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActivityid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getActivityenum();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getChargelistList();
  if (f.length > 0) {
    writer.writePackedInt32(
      3,
      f
    );
  }
  f = message.getFreedrawdic();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getChargedrawdic();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional int32 ActivityId = 1;
 * @return {number}
 */
proto.PbModel.TowerTreasure.TowerTreasureObj.prototype.getActivityid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.TowerTreasure.TowerTreasureObj} returns this
 */
proto.PbModel.TowerTreasure.TowerTreasureObj.prototype.setActivityid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 ActivityEnum = 2;
 * @return {number}
 */
proto.PbModel.TowerTreasure.TowerTreasureObj.prototype.getActivityenum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.TowerTreasure.TowerTreasureObj} returns this
 */
proto.PbModel.TowerTreasure.TowerTreasureObj.prototype.setActivityenum = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated int32 ChargeList = 3;
 * @return {!Array<number>}
 */
proto.PbModel.TowerTreasure.TowerTreasureObj.prototype.getChargelistList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.PbModel.TowerTreasure.TowerTreasureObj} returns this
 */
proto.PbModel.TowerTreasure.TowerTreasureObj.prototype.setChargelistList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.PbModel.TowerTreasure.TowerTreasureObj} returns this
 */
proto.PbModel.TowerTreasure.TowerTreasureObj.prototype.addChargelist = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.TowerTreasure.TowerTreasureObj} returns this
 */
proto.PbModel.TowerTreasure.TowerTreasureObj.prototype.clearChargelistList = function() {
  return this.setChargelistList([]);
};


/**
 * optional string FreeDrawDic = 4;
 * @return {string}
 */
proto.PbModel.TowerTreasure.TowerTreasureObj.prototype.getFreedrawdic = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.TowerTreasure.TowerTreasureObj} returns this
 */
proto.PbModel.TowerTreasure.TowerTreasureObj.prototype.setFreedrawdic = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string ChargeDrawDic = 5;
 * @return {string}
 */
proto.PbModel.TowerTreasure.TowerTreasureObj.prototype.getChargedrawdic = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.TowerTreasure.TowerTreasureObj} returns this
 */
proto.PbModel.TowerTreasure.TowerTreasureObj.prototype.setChargedrawdic = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.TowerTreasure.TowerTreasureConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.TowerTreasure.TowerTreasureConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.TowerTreasure.TowerTreasureConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.TowerTreasure.TowerTreasureConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    treasurechargedicMap: (f = msg.getTreasurechargedicMap()) ? f.toObject(includeInstance, proto.PbModel.TowerTreasure.TowerTreasureChargeConfig.toObject) : [],
    treasureawarddicMap: (f = msg.getTreasureawarddicMap()) ? f.toObject(includeInstance, proto.PbModel.TowerTreasure.TowerTreasureAwardConfigList.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.TowerTreasure.TowerTreasureConfig}
 */
proto.PbModel.TowerTreasure.TowerTreasureConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.TowerTreasure.TowerTreasureConfig;
  return proto.PbModel.TowerTreasure.TowerTreasureConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.TowerTreasure.TowerTreasureConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.TowerTreasure.TowerTreasureConfig}
 */
proto.PbModel.TowerTreasure.TowerTreasureConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getTreasurechargedicMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readMessage, proto.PbModel.TowerTreasure.TowerTreasureChargeConfig.deserializeBinaryFromReader, 0, new proto.PbModel.TowerTreasure.TowerTreasureChargeConfig());
         });
      break;
    case 2:
      var value = msg.getTreasureawarddicMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readMessage, proto.PbModel.TowerTreasure.TowerTreasureAwardConfigList.deserializeBinaryFromReader, 0, new proto.PbModel.TowerTreasure.TowerTreasureAwardConfigList());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.TowerTreasure.TowerTreasureConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.TowerTreasure.TowerTreasureConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.TowerTreasure.TowerTreasureConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.TowerTreasure.TowerTreasureConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTreasurechargedicMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeMessage, proto.PbModel.TowerTreasure.TowerTreasureChargeConfig.serializeBinaryToWriter);
  }
  f = message.getTreasureawarddicMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeMessage, proto.PbModel.TowerTreasure.TowerTreasureAwardConfigList.serializeBinaryToWriter);
  }
};


/**
 * map<int32, TowerTreasureChargeConfig> TreasureChargeDic = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,!proto.PbModel.TowerTreasure.TowerTreasureChargeConfig>}
 */
proto.PbModel.TowerTreasure.TowerTreasureConfig.prototype.getTreasurechargedicMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,!proto.PbModel.TowerTreasure.TowerTreasureChargeConfig>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.PbModel.TowerTreasure.TowerTreasureChargeConfig));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.PbModel.TowerTreasure.TowerTreasureConfig} returns this
 */
proto.PbModel.TowerTreasure.TowerTreasureConfig.prototype.clearTreasurechargedicMap = function() {
  this.getTreasurechargedicMap().clear();
  return this;};


/**
 * map<int32, TowerTreasureAwardConfigList> TreasureAwardDic = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,!proto.PbModel.TowerTreasure.TowerTreasureAwardConfigList>}
 */
proto.PbModel.TowerTreasure.TowerTreasureConfig.prototype.getTreasureawarddicMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,!proto.PbModel.TowerTreasure.TowerTreasureAwardConfigList>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      proto.PbModel.TowerTreasure.TowerTreasureAwardConfigList));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.PbModel.TowerTreasure.TowerTreasureConfig} returns this
 */
proto.PbModel.TowerTreasure.TowerTreasureConfig.prototype.clearTreasureawarddicMap = function() {
  this.getTreasureawarddicMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.TowerTreasure.TowerTreasureChargeConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.TowerTreasure.TowerTreasureChargeConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.TowerTreasure.TowerTreasureChargeConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.TowerTreasure.TowerTreasureChargeConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    layerid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    opennodeid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    money: jspb.Message.getFieldWithDefault(msg, 3, 0),
    ispay: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    productid: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.TowerTreasure.TowerTreasureChargeConfig}
 */
proto.PbModel.TowerTreasure.TowerTreasureChargeConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.TowerTreasure.TowerTreasureChargeConfig;
  return proto.PbModel.TowerTreasure.TowerTreasureChargeConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.TowerTreasure.TowerTreasureChargeConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.TowerTreasure.TowerTreasureChargeConfig}
 */
proto.PbModel.TowerTreasure.TowerTreasureChargeConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLayerid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOpennodeid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMoney(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIspay(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.TowerTreasure.TowerTreasureChargeConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.TowerTreasure.TowerTreasureChargeConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.TowerTreasure.TowerTreasureChargeConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.TowerTreasure.TowerTreasureChargeConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLayerid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getOpennodeid();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getMoney();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getIspay();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getProductid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional int32 LayerId = 1;
 * @return {number}
 */
proto.PbModel.TowerTreasure.TowerTreasureChargeConfig.prototype.getLayerid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.TowerTreasure.TowerTreasureChargeConfig} returns this
 */
proto.PbModel.TowerTreasure.TowerTreasureChargeConfig.prototype.setLayerid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 OpenNodeId = 2;
 * @return {number}
 */
proto.PbModel.TowerTreasure.TowerTreasureChargeConfig.prototype.getOpennodeid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.TowerTreasure.TowerTreasureChargeConfig} returns this
 */
proto.PbModel.TowerTreasure.TowerTreasureChargeConfig.prototype.setOpennodeid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 Money = 3;
 * @return {number}
 */
proto.PbModel.TowerTreasure.TowerTreasureChargeConfig.prototype.getMoney = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.TowerTreasure.TowerTreasureChargeConfig} returns this
 */
proto.PbModel.TowerTreasure.TowerTreasureChargeConfig.prototype.setMoney = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bool IsPay = 4;
 * @return {boolean}
 */
proto.PbModel.TowerTreasure.TowerTreasureChargeConfig.prototype.getIspay = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PbModel.TowerTreasure.TowerTreasureChargeConfig} returns this
 */
proto.PbModel.TowerTreasure.TowerTreasureChargeConfig.prototype.setIspay = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional string ProductId = 5;
 * @return {string}
 */
proto.PbModel.TowerTreasure.TowerTreasureChargeConfig.prototype.getProductid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.TowerTreasure.TowerTreasureChargeConfig} returns this
 */
proto.PbModel.TowerTreasure.TowerTreasureChargeConfig.prototype.setProductid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.TowerTreasure.TowerTreasureAwardConfigList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.TowerTreasure.TowerTreasureAwardConfigList.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.TowerTreasure.TowerTreasureAwardConfigList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.TowerTreasure.TowerTreasureAwardConfigList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.TowerTreasure.TowerTreasureAwardConfigList.toObject = function(includeInstance, msg) {
  var f, obj = {
    awardconfiglistList: jspb.Message.toObjectList(msg.getAwardconfiglistList(),
    proto.PbModel.TowerTreasure.TowerTreasureAwardConfig.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.TowerTreasure.TowerTreasureAwardConfigList}
 */
proto.PbModel.TowerTreasure.TowerTreasureAwardConfigList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.TowerTreasure.TowerTreasureAwardConfigList;
  return proto.PbModel.TowerTreasure.TowerTreasureAwardConfigList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.TowerTreasure.TowerTreasureAwardConfigList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.TowerTreasure.TowerTreasureAwardConfigList}
 */
proto.PbModel.TowerTreasure.TowerTreasureAwardConfigList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PbModel.TowerTreasure.TowerTreasureAwardConfig;
      reader.readMessage(value,proto.PbModel.TowerTreasure.TowerTreasureAwardConfig.deserializeBinaryFromReader);
      msg.addAwardconfiglist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.TowerTreasure.TowerTreasureAwardConfigList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.TowerTreasure.TowerTreasureAwardConfigList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.TowerTreasure.TowerTreasureAwardConfigList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.TowerTreasure.TowerTreasureAwardConfigList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAwardconfiglistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.PbModel.TowerTreasure.TowerTreasureAwardConfig.serializeBinaryToWriter
    );
  }
};


/**
 * repeated TowerTreasureAwardConfig AwardConfigList = 1;
 * @return {!Array<!proto.PbModel.TowerTreasure.TowerTreasureAwardConfig>}
 */
proto.PbModel.TowerTreasure.TowerTreasureAwardConfigList.prototype.getAwardconfiglistList = function() {
  return /** @type{!Array<!proto.PbModel.TowerTreasure.TowerTreasureAwardConfig>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.TowerTreasure.TowerTreasureAwardConfig, 1));
};


/**
 * @param {!Array<!proto.PbModel.TowerTreasure.TowerTreasureAwardConfig>} value
 * @return {!proto.PbModel.TowerTreasure.TowerTreasureAwardConfigList} returns this
*/
proto.PbModel.TowerTreasure.TowerTreasureAwardConfigList.prototype.setAwardconfiglistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.PbModel.TowerTreasure.TowerTreasureAwardConfig=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.TowerTreasure.TowerTreasureAwardConfig}
 */
proto.PbModel.TowerTreasure.TowerTreasureAwardConfigList.prototype.addAwardconfiglist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.PbModel.TowerTreasure.TowerTreasureAwardConfig, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.TowerTreasure.TowerTreasureAwardConfigList} returns this
 */
proto.PbModel.TowerTreasure.TowerTreasureAwardConfigList.prototype.clearAwardconfiglistList = function() {
  return this.setAwardconfiglistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.TowerTreasure.TowerTreasureAwardConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.TowerTreasure.TowerTreasureAwardConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.TowerTreasure.TowerTreasureAwardConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.TowerTreasure.TowerTreasureAwardConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    layerid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    opennodeid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    freereward: jspb.Message.getFieldWithDefault(msg, 3, ""),
    isexistfreeaward: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    chargereward: jspb.Message.getFieldWithDefault(msg, 5, ""),
    isexistchargereward: jspb.Message.getBooleanFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.TowerTreasure.TowerTreasureAwardConfig}
 */
proto.PbModel.TowerTreasure.TowerTreasureAwardConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.TowerTreasure.TowerTreasureAwardConfig;
  return proto.PbModel.TowerTreasure.TowerTreasureAwardConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.TowerTreasure.TowerTreasureAwardConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.TowerTreasure.TowerTreasureAwardConfig}
 */
proto.PbModel.TowerTreasure.TowerTreasureAwardConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLayerid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOpennodeid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFreereward(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsexistfreeaward(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setChargereward(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsexistchargereward(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.TowerTreasure.TowerTreasureAwardConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.TowerTreasure.TowerTreasureAwardConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.TowerTreasure.TowerTreasureAwardConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.TowerTreasure.TowerTreasureAwardConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLayerid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getOpennodeid();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getFreereward();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIsexistfreeaward();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getChargereward();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getIsexistchargereward();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional int32 LayerId = 1;
 * @return {number}
 */
proto.PbModel.TowerTreasure.TowerTreasureAwardConfig.prototype.getLayerid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.TowerTreasure.TowerTreasureAwardConfig} returns this
 */
proto.PbModel.TowerTreasure.TowerTreasureAwardConfig.prototype.setLayerid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 OpenNodeId = 2;
 * @return {number}
 */
proto.PbModel.TowerTreasure.TowerTreasureAwardConfig.prototype.getOpennodeid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.TowerTreasure.TowerTreasureAwardConfig} returns this
 */
proto.PbModel.TowerTreasure.TowerTreasureAwardConfig.prototype.setOpennodeid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string FreeReward = 3;
 * @return {string}
 */
proto.PbModel.TowerTreasure.TowerTreasureAwardConfig.prototype.getFreereward = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.TowerTreasure.TowerTreasureAwardConfig} returns this
 */
proto.PbModel.TowerTreasure.TowerTreasureAwardConfig.prototype.setFreereward = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool IsExistFreeAward = 4;
 * @return {boolean}
 */
proto.PbModel.TowerTreasure.TowerTreasureAwardConfig.prototype.getIsexistfreeaward = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PbModel.TowerTreasure.TowerTreasureAwardConfig} returns this
 */
proto.PbModel.TowerTreasure.TowerTreasureAwardConfig.prototype.setIsexistfreeaward = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional string ChargeReward = 5;
 * @return {string}
 */
proto.PbModel.TowerTreasure.TowerTreasureAwardConfig.prototype.getChargereward = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.TowerTreasure.TowerTreasureAwardConfig} returns this
 */
proto.PbModel.TowerTreasure.TowerTreasureAwardConfig.prototype.setChargereward = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool IsExistChargeReward = 6;
 * @return {boolean}
 */
proto.PbModel.TowerTreasure.TowerTreasureAwardConfig.prototype.getIsexistchargereward = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PbModel.TowerTreasure.TowerTreasureAwardConfig} returns this
 */
proto.PbModel.TowerTreasure.TowerTreasureAwardConfig.prototype.setIsexistchargereward = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


goog.object.extend(exports, proto.PbModel.TowerTreasure);
