// source: Expedition/ExpeditionGetReportInfo.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var Player_PlayerCommonInfo_pb = require('../Player/PlayerCommonInfo_pb.js');
goog.object.extend(proto, Player_PlayerCommonInfo_pb);
goog.exportSymbol('proto.PbModel.Expedition.ExpeditionGetReportInfo', null, global);
goog.exportSymbol('proto.PbModel.Expedition.ExpeditionGetReportInfoReq', null, global);
goog.exportSymbol('proto.PbModel.Expedition.ExpeditionGetReportInfoRes', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Expedition.ExpeditionGetReportInfoReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Expedition.ExpeditionGetReportInfoReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Expedition.ExpeditionGetReportInfoReq.displayName = 'proto.PbModel.Expedition.ExpeditionGetReportInfoReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Expedition.ExpeditionGetReportInfoRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.Expedition.ExpeditionGetReportInfoRes.repeatedFields_, null);
};
goog.inherits(proto.PbModel.Expedition.ExpeditionGetReportInfoRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Expedition.ExpeditionGetReportInfoRes.displayName = 'proto.PbModel.Expedition.ExpeditionGetReportInfoRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Expedition.ExpeditionGetReportInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Expedition.ExpeditionGetReportInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Expedition.ExpeditionGetReportInfo.displayName = 'proto.PbModel.Expedition.ExpeditionGetReportInfo';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Expedition.ExpeditionGetReportInfoReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Expedition.ExpeditionGetReportInfoReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Expedition.ExpeditionGetReportInfoReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionGetReportInfoReq.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Expedition.ExpeditionGetReportInfoReq}
 */
proto.PbModel.Expedition.ExpeditionGetReportInfoReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Expedition.ExpeditionGetReportInfoReq;
  return proto.PbModel.Expedition.ExpeditionGetReportInfoReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Expedition.ExpeditionGetReportInfoReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Expedition.ExpeditionGetReportInfoReq}
 */
proto.PbModel.Expedition.ExpeditionGetReportInfoReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Expedition.ExpeditionGetReportInfoReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Expedition.ExpeditionGetReportInfoReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Expedition.ExpeditionGetReportInfoReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionGetReportInfoReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.Expedition.ExpeditionGetReportInfoRes.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Expedition.ExpeditionGetReportInfoRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Expedition.ExpeditionGetReportInfoRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Expedition.ExpeditionGetReportInfoRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionGetReportInfoRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    infosList: jspb.Message.toObjectList(msg.getInfosList(),
    proto.PbModel.Expedition.ExpeditionGetReportInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Expedition.ExpeditionGetReportInfoRes}
 */
proto.PbModel.Expedition.ExpeditionGetReportInfoRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Expedition.ExpeditionGetReportInfoRes;
  return proto.PbModel.Expedition.ExpeditionGetReportInfoRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Expedition.ExpeditionGetReportInfoRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Expedition.ExpeditionGetReportInfoRes}
 */
proto.PbModel.Expedition.ExpeditionGetReportInfoRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PbModel.Expedition.ExpeditionGetReportInfo;
      reader.readMessage(value,proto.PbModel.Expedition.ExpeditionGetReportInfo.deserializeBinaryFromReader);
      msg.addInfos(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Expedition.ExpeditionGetReportInfoRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Expedition.ExpeditionGetReportInfoRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Expedition.ExpeditionGetReportInfoRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionGetReportInfoRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInfosList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.PbModel.Expedition.ExpeditionGetReportInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ExpeditionGetReportInfo Infos = 1;
 * @return {!Array<!proto.PbModel.Expedition.ExpeditionGetReportInfo>}
 */
proto.PbModel.Expedition.ExpeditionGetReportInfoRes.prototype.getInfosList = function() {
  return /** @type{!Array<!proto.PbModel.Expedition.ExpeditionGetReportInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.Expedition.ExpeditionGetReportInfo, 1));
};


/**
 * @param {!Array<!proto.PbModel.Expedition.ExpeditionGetReportInfo>} value
 * @return {!proto.PbModel.Expedition.ExpeditionGetReportInfoRes} returns this
*/
proto.PbModel.Expedition.ExpeditionGetReportInfoRes.prototype.setInfosList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.PbModel.Expedition.ExpeditionGetReportInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.Expedition.ExpeditionGetReportInfo}
 */
proto.PbModel.Expedition.ExpeditionGetReportInfoRes.prototype.addInfos = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.PbModel.Expedition.ExpeditionGetReportInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.Expedition.ExpeditionGetReportInfoRes} returns this
 */
proto.PbModel.Expedition.ExpeditionGetReportInfoRes.prototype.clearInfosList = function() {
  return this.setInfosList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Expedition.ExpeditionGetReportInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Expedition.ExpeditionGetReportInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Expedition.ExpeditionGetReportInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionGetReportInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    damage: jspb.Message.getFieldWithDefault(msg, 2, 0),
    reportid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    playerinfo: (f = msg.getPlayerinfo()) && Player_PlayerCommonInfo_pb.PlayerCommonInfoRes.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Expedition.ExpeditionGetReportInfo}
 */
proto.PbModel.Expedition.ExpeditionGetReportInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Expedition.ExpeditionGetReportInfo;
  return proto.PbModel.Expedition.ExpeditionGetReportInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Expedition.ExpeditionGetReportInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Expedition.ExpeditionGetReportInfo}
 */
proto.PbModel.Expedition.ExpeditionGetReportInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDamage(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setReportid(value);
      break;
    case 4:
      var value = new Player_PlayerCommonInfo_pb.PlayerCommonInfoRes;
      reader.readMessage(value,Player_PlayerCommonInfo_pb.PlayerCommonInfoRes.deserializeBinaryFromReader);
      msg.setPlayerinfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Expedition.ExpeditionGetReportInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Expedition.ExpeditionGetReportInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Expedition.ExpeditionGetReportInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Expedition.ExpeditionGetReportInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDamage();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getReportid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPlayerinfo();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      Player_PlayerCommonInfo_pb.PlayerCommonInfoRes.serializeBinaryToWriter
    );
  }
};


/**
 * optional string Id = 1;
 * @return {string}
 */
proto.PbModel.Expedition.ExpeditionGetReportInfo.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Expedition.ExpeditionGetReportInfo} returns this
 */
proto.PbModel.Expedition.ExpeditionGetReportInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 Damage = 2;
 * @return {number}
 */
proto.PbModel.Expedition.ExpeditionGetReportInfo.prototype.getDamage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Expedition.ExpeditionGetReportInfo} returns this
 */
proto.PbModel.Expedition.ExpeditionGetReportInfo.prototype.setDamage = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string ReportId = 3;
 * @return {string}
 */
proto.PbModel.Expedition.ExpeditionGetReportInfo.prototype.getReportid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Expedition.ExpeditionGetReportInfo} returns this
 */
proto.PbModel.Expedition.ExpeditionGetReportInfo.prototype.setReportid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional PbModel.Player.PlayerCommonInfoRes PlayerInfo = 4;
 * @return {?proto.PbModel.Player.PlayerCommonInfoRes}
 */
proto.PbModel.Expedition.ExpeditionGetReportInfo.prototype.getPlayerinfo = function() {
  return /** @type{?proto.PbModel.Player.PlayerCommonInfoRes} */ (
    jspb.Message.getWrapperField(this, Player_PlayerCommonInfo_pb.PlayerCommonInfoRes, 4));
};


/**
 * @param {?proto.PbModel.Player.PlayerCommonInfoRes|undefined} value
 * @return {!proto.PbModel.Expedition.ExpeditionGetReportInfo} returns this
*/
proto.PbModel.Expedition.ExpeditionGetReportInfo.prototype.setPlayerinfo = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.Expedition.ExpeditionGetReportInfo} returns this
 */
proto.PbModel.Expedition.ExpeditionGetReportInfo.prototype.clearPlayerinfo = function() {
  return this.setPlayerinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.Expedition.ExpeditionGetReportInfo.prototype.hasPlayerinfo = function() {
  return jspb.Message.getField(this, 4) != null;
};


goog.object.extend(exports, proto.PbModel.Expedition);
