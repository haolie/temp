// source: GeneralActivityConvert.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var Resource_pb = require('./Resource_pb.js');
goog.object.extend(proto, Resource_pb);
goog.exportSymbol('proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConfigPB', null, global);
goog.exportSymbol('proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConvertReq', null, global);
goog.exportSymbol('proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConvertRes', null, global);
goog.exportSymbol('proto.PbModel.GeneralActivityConvert.GeneralActivityConvertGetInfoReq', null, global);
goog.exportSymbol('proto.PbModel.GeneralActivityConvert.GeneralActivityConvertGetInfoRes', null, global);
goog.exportSymbol('proto.PbModel.GeneralActivityConvert.GeneralActivityConvertSubConfigPB', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConvertReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConvertReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConvertReq.displayName = 'proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConvertReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConvertRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConvertRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConvertRes.displayName = 'proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConvertRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertGetInfoReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.GeneralActivityConvert.GeneralActivityConvertGetInfoReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.GeneralActivityConvert.GeneralActivityConvertGetInfoReq.displayName = 'proto.PbModel.GeneralActivityConvert.GeneralActivityConvertGetInfoReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertGetInfoRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.GeneralActivityConvert.GeneralActivityConvertGetInfoRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.GeneralActivityConvert.GeneralActivityConvertGetInfoRes.displayName = 'proto.PbModel.GeneralActivityConvert.GeneralActivityConvertGetInfoRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConfigPB = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConfigPB, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConfigPB.displayName = 'proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConfigPB';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertSubConfigPB = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.GeneralActivityConvert.GeneralActivityConvertSubConfigPB, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.GeneralActivityConvert.GeneralActivityConvertSubConfigPB.displayName = 'proto.PbModel.GeneralActivityConvert.GeneralActivityConvertSubConfigPB';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConvertReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConvertReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConvertReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConvertReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    activityid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    convertid: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConvertReq}
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConvertReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConvertReq;
  return proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConvertReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConvertReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConvertReq}
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConvertReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setActivityid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setConvertid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConvertReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConvertReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConvertReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConvertReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActivityid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getConvertid();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 ActivityId = 1;
 * @return {number}
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConvertReq.prototype.getActivityid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConvertReq} returns this
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConvertReq.prototype.setActivityid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 ConvertId = 2;
 * @return {number}
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConvertReq.prototype.getConvertid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConvertReq} returns this
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConvertReq.prototype.setConvertid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConvertRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConvertRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConvertRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConvertRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    convertcountdicMap: (f = msg.getConvertcountdicMap()) ? f.toObject(includeInstance, undefined) : [],
    basegetgameresourcelist: (f = msg.getBasegetgameresourcelist()) && Resource_pb.ResourceToClientModel.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConvertRes}
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConvertRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConvertRes;
  return proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConvertRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConvertRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConvertRes}
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConvertRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getConvertcountdicMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readInt32, null, 0, 0);
         });
      break;
    case 2:
      var value = new Resource_pb.ResourceToClientModel;
      reader.readMessage(value,Resource_pb.ResourceToClientModel.deserializeBinaryFromReader);
      msg.setBasegetgameresourcelist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConvertRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConvertRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConvertRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConvertRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConvertcountdicMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeInt32);
  }
  f = message.getBasegetgameresourcelist();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      Resource_pb.ResourceToClientModel.serializeBinaryToWriter
    );
  }
};


/**
 * map<int32, int32> ConvertCountDic = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,number>}
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConvertRes.prototype.getConvertcountdicMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,number>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConvertRes} returns this
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConvertRes.prototype.clearConvertcountdicMap = function() {
  this.getConvertcountdicMap().clear();
  return this;};


/**
 * optional PbModel.Resource.ResourceToClientModel BaseGetGameResourceList = 2;
 * @return {?proto.PbModel.Resource.ResourceToClientModel}
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConvertRes.prototype.getBasegetgameresourcelist = function() {
  return /** @type{?proto.PbModel.Resource.ResourceToClientModel} */ (
    jspb.Message.getWrapperField(this, Resource_pb.ResourceToClientModel, 2));
};


/**
 * @param {?proto.PbModel.Resource.ResourceToClientModel|undefined} value
 * @return {!proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConvertRes} returns this
*/
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConvertRes.prototype.setBasegetgameresourcelist = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConvertRes} returns this
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConvertRes.prototype.clearBasegetgameresourcelist = function() {
  return this.setBasegetgameresourcelist(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConvertRes.prototype.hasBasegetgameresourcelist = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertGetInfoReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.GeneralActivityConvert.GeneralActivityConvertGetInfoReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.GeneralActivityConvert.GeneralActivityConvertGetInfoReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertGetInfoReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    activityid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.GeneralActivityConvert.GeneralActivityConvertGetInfoReq}
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertGetInfoReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.GeneralActivityConvert.GeneralActivityConvertGetInfoReq;
  return proto.PbModel.GeneralActivityConvert.GeneralActivityConvertGetInfoReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.GeneralActivityConvert.GeneralActivityConvertGetInfoReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.GeneralActivityConvert.GeneralActivityConvertGetInfoReq}
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertGetInfoReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setActivityid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertGetInfoReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.GeneralActivityConvert.GeneralActivityConvertGetInfoReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.GeneralActivityConvert.GeneralActivityConvertGetInfoReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertGetInfoReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActivityid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 ActivityId = 1;
 * @return {number}
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertGetInfoReq.prototype.getActivityid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.GeneralActivityConvert.GeneralActivityConvertGetInfoReq} returns this
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertGetInfoReq.prototype.setActivityid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertGetInfoRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.GeneralActivityConvert.GeneralActivityConvertGetInfoRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.GeneralActivityConvert.GeneralActivityConvertGetInfoRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertGetInfoRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    convertcountdicMap: (f = msg.getConvertcountdicMap()) ? f.toObject(includeInstance, undefined) : [],
    generalactivityconvertconfigpb: (f = msg.getGeneralactivityconvertconfigpb()) && proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConfigPB.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.GeneralActivityConvert.GeneralActivityConvertGetInfoRes}
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertGetInfoRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.GeneralActivityConvert.GeneralActivityConvertGetInfoRes;
  return proto.PbModel.GeneralActivityConvert.GeneralActivityConvertGetInfoRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.GeneralActivityConvert.GeneralActivityConvertGetInfoRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.GeneralActivityConvert.GeneralActivityConvertGetInfoRes}
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertGetInfoRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getConvertcountdicMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readInt32, null, 0, 0);
         });
      break;
    case 2:
      var value = new proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConfigPB;
      reader.readMessage(value,proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConfigPB.deserializeBinaryFromReader);
      msg.setGeneralactivityconvertconfigpb(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertGetInfoRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.GeneralActivityConvert.GeneralActivityConvertGetInfoRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.GeneralActivityConvert.GeneralActivityConvertGetInfoRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertGetInfoRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConvertcountdicMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeInt32);
  }
  f = message.getGeneralactivityconvertconfigpb();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConfigPB.serializeBinaryToWriter
    );
  }
};


/**
 * map<int32, int32> ConvertCountDic = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,number>}
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertGetInfoRes.prototype.getConvertcountdicMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,number>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.PbModel.GeneralActivityConvert.GeneralActivityConvertGetInfoRes} returns this
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertGetInfoRes.prototype.clearConvertcountdicMap = function() {
  this.getConvertcountdicMap().clear();
  return this;};


/**
 * optional GeneralActivityConvertConfigPB GeneralActivityConvertConfigPB = 2;
 * @return {?proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConfigPB}
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertGetInfoRes.prototype.getGeneralactivityconvertconfigpb = function() {
  return /** @type{?proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConfigPB} */ (
    jspb.Message.getWrapperField(this, proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConfigPB, 2));
};


/**
 * @param {?proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConfigPB|undefined} value
 * @return {!proto.PbModel.GeneralActivityConvert.GeneralActivityConvertGetInfoRes} returns this
*/
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertGetInfoRes.prototype.setGeneralactivityconvertconfigpb = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.GeneralActivityConvert.GeneralActivityConvertGetInfoRes} returns this
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertGetInfoRes.prototype.clearGeneralactivityconvertconfigpb = function() {
  return this.setGeneralactivityconvertconfigpb(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertGetInfoRes.prototype.hasGeneralactivityconvertconfigpb = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConfigPB.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConfigPB.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConfigPB} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConfigPB.toObject = function(includeInstance, msg) {
  var f, obj = {
    generalactivityconvertsubconfigdicMap: (f = msg.getGeneralactivityconvertsubconfigdicMap()) ? f.toObject(includeInstance, proto.PbModel.GeneralActivityConvert.GeneralActivityConvertSubConfigPB.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConfigPB}
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConfigPB.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConfigPB;
  return proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConfigPB.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConfigPB} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConfigPB}
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConfigPB.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getGeneralactivityconvertsubconfigdicMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readMessage, proto.PbModel.GeneralActivityConvert.GeneralActivityConvertSubConfigPB.deserializeBinaryFromReader, 0, new proto.PbModel.GeneralActivityConvert.GeneralActivityConvertSubConfigPB());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConfigPB.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConfigPB.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConfigPB} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConfigPB.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGeneralactivityconvertsubconfigdicMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeMessage, proto.PbModel.GeneralActivityConvert.GeneralActivityConvertSubConfigPB.serializeBinaryToWriter);
  }
};


/**
 * map<int32, GeneralActivityConvertSubConfigPB> GeneralActivityConvertSubConfigDic = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,!proto.PbModel.GeneralActivityConvert.GeneralActivityConvertSubConfigPB>}
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConfigPB.prototype.getGeneralactivityconvertsubconfigdicMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,!proto.PbModel.GeneralActivityConvert.GeneralActivityConvertSubConfigPB>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.PbModel.GeneralActivityConvert.GeneralActivityConvertSubConfigPB));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConfigPB} returns this
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertConfigPB.prototype.clearGeneralactivityconvertsubconfigdicMap = function() {
  this.getGeneralactivityconvertsubconfigdicMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertSubConfigPB.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.GeneralActivityConvert.GeneralActivityConvertSubConfigPB.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.GeneralActivityConvert.GeneralActivityConvertSubConfigPB} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertSubConfigPB.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    cost: jspb.Message.getFieldWithDefault(msg, 2, ""),
    reward: jspb.Message.getFieldWithDefault(msg, 3, ""),
    limitcount: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.GeneralActivityConvert.GeneralActivityConvertSubConfigPB}
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertSubConfigPB.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.GeneralActivityConvert.GeneralActivityConvertSubConfigPB;
  return proto.PbModel.GeneralActivityConvert.GeneralActivityConvertSubConfigPB.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.GeneralActivityConvert.GeneralActivityConvertSubConfigPB} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.GeneralActivityConvert.GeneralActivityConvertSubConfigPB}
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertSubConfigPB.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCost(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setReward(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimitcount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertSubConfigPB.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.GeneralActivityConvert.GeneralActivityConvertSubConfigPB.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.GeneralActivityConvert.GeneralActivityConvertSubConfigPB} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertSubConfigPB.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getCost();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getReward();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLimitcount();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional int32 Id = 1;
 * @return {number}
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertSubConfigPB.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.GeneralActivityConvert.GeneralActivityConvertSubConfigPB} returns this
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertSubConfigPB.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string Cost = 2;
 * @return {string}
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertSubConfigPB.prototype.getCost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.GeneralActivityConvert.GeneralActivityConvertSubConfigPB} returns this
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertSubConfigPB.prototype.setCost = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string Reward = 3;
 * @return {string}
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertSubConfigPB.prototype.getReward = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.GeneralActivityConvert.GeneralActivityConvertSubConfigPB} returns this
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertSubConfigPB.prototype.setReward = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 LimitCount = 4;
 * @return {number}
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertSubConfigPB.prototype.getLimitcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.GeneralActivityConvert.GeneralActivityConvertSubConfigPB} returns this
 */
proto.PbModel.GeneralActivityConvert.GeneralActivityConvertSubConfigPB.prototype.setLimitcount = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


goog.object.extend(exports, proto.PbModel.GeneralActivityConvert);
