// source: Pvp.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var Resource_pb = require('./Resource_pb.js');
goog.object.extend(proto, Resource_pb);
var Player_pb = require('./Player_pb.js');
goog.object.extend(proto, Player_pb);
var Team_pb = require('./Team_pb.js');
goog.object.extend(proto, Team_pb);
var Fight_pb = require('./Fight_pb.js');
goog.object.extend(proto, Fight_pb);
goog.exportSymbol('proto.PbModel.Pvp.PvpBuyRankRewardReq', null, global);
goog.exportSymbol('proto.PbModel.Pvp.PvpBuyRankRewardRes', null, global);
goog.exportSymbol('proto.PbModel.Pvp.PvpBuyTicketReq', null, global);
goog.exportSymbol('proto.PbModel.Pvp.PvpBuyTicketRes', null, global);
goog.exportSymbol('proto.PbModel.Pvp.PvpChallengeItem', null, global);
goog.exportSymbol('proto.PbModel.Pvp.PvpFightForGroupReq', null, global);
goog.exportSymbol('proto.PbModel.Pvp.PvpFightForGroupRes', null, global);
goog.exportSymbol('proto.PbModel.Pvp.PvpFightForScoreReq', null, global);
goog.exportSymbol('proto.PbModel.Pvp.PvpFightForScoreRes', null, global);
goog.exportSymbol('proto.PbModel.Pvp.PvpGetInfoReq', null, global);
goog.exportSymbol('proto.PbModel.Pvp.PvpGetInfoRes', null, global);
goog.exportSymbol('proto.PbModel.Pvp.PvpGetRankInfoReq', null, global);
goog.exportSymbol('proto.PbModel.Pvp.PvpGetRankInfoRes', null, global);
goog.exportSymbol('proto.PbModel.Pvp.PvpGetReportInfoReq', null, global);
goog.exportSymbol('proto.PbModel.Pvp.PvpGetReportInfoRes', null, global);
goog.exportSymbol('proto.PbModel.Pvp.PvpRankItem', null, global);
goog.exportSymbol('proto.PbModel.Pvp.PvpRefreshReq', null, global);
goog.exportSymbol('proto.PbModel.Pvp.PvpRefreshRes', null, global);
goog.exportSymbol('proto.PbModel.Pvp.PvpReportItem', null, global);
goog.exportSymbol('proto.PbModel.Pvp.PvpTeamReq', null, global);
goog.exportSymbol('proto.PbModel.Pvp.PvpTeamRes', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Pvp.PvpBuyRankRewardReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Pvp.PvpBuyRankRewardReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Pvp.PvpBuyRankRewardReq.displayName = 'proto.PbModel.Pvp.PvpBuyRankRewardReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Pvp.PvpBuyRankRewardRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.Pvp.PvpBuyRankRewardRes.repeatedFields_, null);
};
goog.inherits(proto.PbModel.Pvp.PvpBuyRankRewardRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Pvp.PvpBuyRankRewardRes.displayName = 'proto.PbModel.Pvp.PvpBuyRankRewardRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Pvp.PvpFightForGroupReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.Pvp.PvpFightForGroupReq.repeatedFields_, null);
};
goog.inherits(proto.PbModel.Pvp.PvpFightForGroupReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Pvp.PvpFightForGroupReq.displayName = 'proto.PbModel.Pvp.PvpFightForGroupReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Pvp.PvpFightForGroupRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.Pvp.PvpFightForGroupRes.repeatedFields_, null);
};
goog.inherits(proto.PbModel.Pvp.PvpFightForGroupRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Pvp.PvpFightForGroupRes.displayName = 'proto.PbModel.Pvp.PvpFightForGroupRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Pvp.PvpFightForScoreReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.Pvp.PvpFightForScoreReq.repeatedFields_, null);
};
goog.inherits(proto.PbModel.Pvp.PvpFightForScoreReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Pvp.PvpFightForScoreReq.displayName = 'proto.PbModel.Pvp.PvpFightForScoreReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Pvp.PvpFightForScoreRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.Pvp.PvpFightForScoreRes.repeatedFields_, null);
};
goog.inherits(proto.PbModel.Pvp.PvpFightForScoreRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Pvp.PvpFightForScoreRes.displayName = 'proto.PbModel.Pvp.PvpFightForScoreRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Pvp.PvpGetInfoReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Pvp.PvpGetInfoReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Pvp.PvpGetInfoReq.displayName = 'proto.PbModel.Pvp.PvpGetInfoReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Pvp.PvpGetInfoRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.Pvp.PvpGetInfoRes.repeatedFields_, null);
};
goog.inherits(proto.PbModel.Pvp.PvpGetInfoRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Pvp.PvpGetInfoRes.displayName = 'proto.PbModel.Pvp.PvpGetInfoRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Pvp.PvpRankItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Pvp.PvpRankItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Pvp.PvpRankItem.displayName = 'proto.PbModel.Pvp.PvpRankItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Pvp.PvpChallengeItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Pvp.PvpChallengeItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Pvp.PvpChallengeItem.displayName = 'proto.PbModel.Pvp.PvpChallengeItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Pvp.PvpGetRankInfoReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Pvp.PvpGetRankInfoReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Pvp.PvpGetRankInfoReq.displayName = 'proto.PbModel.Pvp.PvpGetRankInfoReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Pvp.PvpGetRankInfoRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.Pvp.PvpGetRankInfoRes.repeatedFields_, null);
};
goog.inherits(proto.PbModel.Pvp.PvpGetRankInfoRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Pvp.PvpGetRankInfoRes.displayName = 'proto.PbModel.Pvp.PvpGetRankInfoRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Pvp.PvpGetReportInfoReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Pvp.PvpGetReportInfoReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Pvp.PvpGetReportInfoReq.displayName = 'proto.PbModel.Pvp.PvpGetReportInfoReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Pvp.PvpGetReportInfoRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.Pvp.PvpGetReportInfoRes.repeatedFields_, null);
};
goog.inherits(proto.PbModel.Pvp.PvpGetReportInfoRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Pvp.PvpGetReportInfoRes.displayName = 'proto.PbModel.Pvp.PvpGetReportInfoRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Pvp.PvpReportItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Pvp.PvpReportItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Pvp.PvpReportItem.displayName = 'proto.PbModel.Pvp.PvpReportItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Pvp.PvpRefreshReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Pvp.PvpRefreshReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Pvp.PvpRefreshReq.displayName = 'proto.PbModel.Pvp.PvpRefreshReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Pvp.PvpRefreshRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.Pvp.PvpRefreshRes.repeatedFields_, null);
};
goog.inherits(proto.PbModel.Pvp.PvpRefreshRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Pvp.PvpRefreshRes.displayName = 'proto.PbModel.Pvp.PvpRefreshRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Pvp.PvpBuyTicketReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Pvp.PvpBuyTicketReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Pvp.PvpBuyTicketReq.displayName = 'proto.PbModel.Pvp.PvpBuyTicketReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Pvp.PvpBuyTicketRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Pvp.PvpBuyTicketRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Pvp.PvpBuyTicketRes.displayName = 'proto.PbModel.Pvp.PvpBuyTicketRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Pvp.PvpTeamReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.Pvp.PvpTeamReq.repeatedFields_, null);
};
goog.inherits(proto.PbModel.Pvp.PvpTeamReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Pvp.PvpTeamReq.displayName = 'proto.PbModel.Pvp.PvpTeamReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Pvp.PvpTeamRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Pvp.PvpTeamRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Pvp.PvpTeamRes.displayName = 'proto.PbModel.Pvp.PvpTeamRes';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Pvp.PvpBuyRankRewardReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Pvp.PvpBuyRankRewardReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Pvp.PvpBuyRankRewardReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Pvp.PvpBuyRankRewardReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    groupid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    rank: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Pvp.PvpBuyRankRewardReq}
 */
proto.PbModel.Pvp.PvpBuyRankRewardReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Pvp.PvpBuyRankRewardReq;
  return proto.PbModel.Pvp.PvpBuyRankRewardReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Pvp.PvpBuyRankRewardReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Pvp.PvpBuyRankRewardReq}
 */
proto.PbModel.Pvp.PvpBuyRankRewardReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGroupid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRank(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Pvp.PvpBuyRankRewardReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Pvp.PvpBuyRankRewardReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Pvp.PvpBuyRankRewardReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Pvp.PvpBuyRankRewardReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroupid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getRank();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 GroupId = 1;
 * @return {number}
 */
proto.PbModel.Pvp.PvpBuyRankRewardReq.prototype.getGroupid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Pvp.PvpBuyRankRewardReq} returns this
 */
proto.PbModel.Pvp.PvpBuyRankRewardReq.prototype.setGroupid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 Rank = 2;
 * @return {number}
 */
proto.PbModel.Pvp.PvpBuyRankRewardReq.prototype.getRank = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Pvp.PvpBuyRankRewardReq} returns this
 */
proto.PbModel.Pvp.PvpBuyRankRewardReq.prototype.setRank = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.Pvp.PvpBuyRankRewardRes.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Pvp.PvpBuyRankRewardRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Pvp.PvpBuyRankRewardRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Pvp.PvpBuyRankRewardRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Pvp.PvpBuyRankRewardRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    grouprewardreceivelistList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    clientresourcemodel: (f = msg.getClientresourcemodel()) && Resource_pb.ResourceToClientModel.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Pvp.PvpBuyRankRewardRes}
 */
proto.PbModel.Pvp.PvpBuyRankRewardRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Pvp.PvpBuyRankRewardRes;
  return proto.PbModel.Pvp.PvpBuyRankRewardRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Pvp.PvpBuyRankRewardRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Pvp.PvpBuyRankRewardRes}
 */
proto.PbModel.Pvp.PvpBuyRankRewardRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addGrouprewardreceivelist(value);
      break;
    case 2:
      var value = new Resource_pb.ResourceToClientModel;
      reader.readMessage(value,Resource_pb.ResourceToClientModel.deserializeBinaryFromReader);
      msg.setClientresourcemodel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Pvp.PvpBuyRankRewardRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Pvp.PvpBuyRankRewardRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Pvp.PvpBuyRankRewardRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Pvp.PvpBuyRankRewardRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGrouprewardreceivelistList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getClientresourcemodel();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      Resource_pb.ResourceToClientModel.serializeBinaryToWriter
    );
  }
};


/**
 * repeated string GroupRewardReceiveList = 1;
 * @return {!Array<string>}
 */
proto.PbModel.Pvp.PvpBuyRankRewardRes.prototype.getGrouprewardreceivelistList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.PbModel.Pvp.PvpBuyRankRewardRes} returns this
 */
proto.PbModel.Pvp.PvpBuyRankRewardRes.prototype.setGrouprewardreceivelistList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.PbModel.Pvp.PvpBuyRankRewardRes} returns this
 */
proto.PbModel.Pvp.PvpBuyRankRewardRes.prototype.addGrouprewardreceivelist = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.Pvp.PvpBuyRankRewardRes} returns this
 */
proto.PbModel.Pvp.PvpBuyRankRewardRes.prototype.clearGrouprewardreceivelistList = function() {
  return this.setGrouprewardreceivelistList([]);
};


/**
 * optional PbModel.Resource.ResourceToClientModel ClientResourceModel = 2;
 * @return {?proto.PbModel.Resource.ResourceToClientModel}
 */
proto.PbModel.Pvp.PvpBuyRankRewardRes.prototype.getClientresourcemodel = function() {
  return /** @type{?proto.PbModel.Resource.ResourceToClientModel} */ (
    jspb.Message.getWrapperField(this, Resource_pb.ResourceToClientModel, 2));
};


/**
 * @param {?proto.PbModel.Resource.ResourceToClientModel|undefined} value
 * @return {!proto.PbModel.Pvp.PvpBuyRankRewardRes} returns this
*/
proto.PbModel.Pvp.PvpBuyRankRewardRes.prototype.setClientresourcemodel = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.Pvp.PvpBuyRankRewardRes} returns this
 */
proto.PbModel.Pvp.PvpBuyRankRewardRes.prototype.clearClientresourcemodel = function() {
  return this.setClientresourcemodel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.Pvp.PvpBuyRankRewardRes.prototype.hasClientresourcemodel = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.Pvp.PvpFightForGroupReq.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Pvp.PvpFightForGroupReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Pvp.PvpFightForGroupReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Pvp.PvpFightForGroupReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Pvp.PvpFightForGroupReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    playerid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    teaminfoList: jspb.Message.toObjectList(msg.getTeaminfoList(),
    Team_pb.Team.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Pvp.PvpFightForGroupReq}
 */
proto.PbModel.Pvp.PvpFightForGroupReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Pvp.PvpFightForGroupReq;
  return proto.PbModel.Pvp.PvpFightForGroupReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Pvp.PvpFightForGroupReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Pvp.PvpFightForGroupReq}
 */
proto.PbModel.Pvp.PvpFightForGroupReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlayerid(value);
      break;
    case 2:
      var value = new Team_pb.Team;
      reader.readMessage(value,Team_pb.Team.deserializeBinaryFromReader);
      msg.addTeaminfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Pvp.PvpFightForGroupReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Pvp.PvpFightForGroupReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Pvp.PvpFightForGroupReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Pvp.PvpFightForGroupReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlayerid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTeaminfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      Team_pb.Team.serializeBinaryToWriter
    );
  }
};


/**
 * optional string PlayerId = 1;
 * @return {string}
 */
proto.PbModel.Pvp.PvpFightForGroupReq.prototype.getPlayerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Pvp.PvpFightForGroupReq} returns this
 */
proto.PbModel.Pvp.PvpFightForGroupReq.prototype.setPlayerid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated PbModel.Team.Team TeamInfo = 2;
 * @return {!Array<!proto.PbModel.Team.Team>}
 */
proto.PbModel.Pvp.PvpFightForGroupReq.prototype.getTeaminfoList = function() {
  return /** @type{!Array<!proto.PbModel.Team.Team>} */ (
    jspb.Message.getRepeatedWrapperField(this, Team_pb.Team, 2));
};


/**
 * @param {!Array<!proto.PbModel.Team.Team>} value
 * @return {!proto.PbModel.Pvp.PvpFightForGroupReq} returns this
*/
proto.PbModel.Pvp.PvpFightForGroupReq.prototype.setTeaminfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.PbModel.Team.Team=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.Team.Team}
 */
proto.PbModel.Pvp.PvpFightForGroupReq.prototype.addTeaminfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.PbModel.Team.Team, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.Pvp.PvpFightForGroupReq} returns this
 */
proto.PbModel.Pvp.PvpFightForGroupReq.prototype.clearTeaminfoList = function() {
  return this.setTeaminfoList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.Pvp.PvpFightForGroupRes.repeatedFields_ = [6,7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Pvp.PvpFightForGroupRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Pvp.PvpFightForGroupRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Pvp.PvpFightForGroupRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Pvp.PvpFightForGroupRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    iswin: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    myrank: jspb.Message.getFieldWithDefault(msg, 2, 0),
    reportfight: (f = msg.getReportfight()) && Fight_pb.FightReport.toObject(includeInstance, f),
    clientresourcemodel: (f = msg.getClientresourcemodel()) && Resource_pb.ResourceToClientModel.toObject(includeInstance, f),
    rankupgetlist: (f = msg.getRankupgetlist()) && Resource_pb.ResourceToClientModel.toObject(includeInstance, f),
    brandlistList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f,
    brandpoolList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Pvp.PvpFightForGroupRes}
 */
proto.PbModel.Pvp.PvpFightForGroupRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Pvp.PvpFightForGroupRes;
  return proto.PbModel.Pvp.PvpFightForGroupRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Pvp.PvpFightForGroupRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Pvp.PvpFightForGroupRes}
 */
proto.PbModel.Pvp.PvpFightForGroupRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIswin(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMyrank(value);
      break;
    case 3:
      var value = new Fight_pb.FightReport;
      reader.readMessage(value,Fight_pb.FightReport.deserializeBinaryFromReader);
      msg.setReportfight(value);
      break;
    case 4:
      var value = new Resource_pb.ResourceToClientModel;
      reader.readMessage(value,Resource_pb.ResourceToClientModel.deserializeBinaryFromReader);
      msg.setClientresourcemodel(value);
      break;
    case 5:
      var value = new Resource_pb.ResourceToClientModel;
      reader.readMessage(value,Resource_pb.ResourceToClientModel.deserializeBinaryFromReader);
      msg.setRankupgetlist(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addBrandlist(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.addBrandpool(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Pvp.PvpFightForGroupRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Pvp.PvpFightForGroupRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Pvp.PvpFightForGroupRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Pvp.PvpFightForGroupRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIswin();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getMyrank();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getReportfight();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      Fight_pb.FightReport.serializeBinaryToWriter
    );
  }
  f = message.getClientresourcemodel();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      Resource_pb.ResourceToClientModel.serializeBinaryToWriter
    );
  }
  f = message.getRankupgetlist();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      Resource_pb.ResourceToClientModel.serializeBinaryToWriter
    );
  }
  f = message.getBrandlistList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
  f = message.getBrandpoolList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      7,
      f
    );
  }
};


/**
 * optional bool IsWin = 1;
 * @return {boolean}
 */
proto.PbModel.Pvp.PvpFightForGroupRes.prototype.getIswin = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PbModel.Pvp.PvpFightForGroupRes} returns this
 */
proto.PbModel.Pvp.PvpFightForGroupRes.prototype.setIswin = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional int32 MyRank = 2;
 * @return {number}
 */
proto.PbModel.Pvp.PvpFightForGroupRes.prototype.getMyrank = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Pvp.PvpFightForGroupRes} returns this
 */
proto.PbModel.Pvp.PvpFightForGroupRes.prototype.setMyrank = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional PbModel.Fight.FightReport ReportFight = 3;
 * @return {?proto.PbModel.Fight.FightReport}
 */
proto.PbModel.Pvp.PvpFightForGroupRes.prototype.getReportfight = function() {
  return /** @type{?proto.PbModel.Fight.FightReport} */ (
    jspb.Message.getWrapperField(this, Fight_pb.FightReport, 3));
};


/**
 * @param {?proto.PbModel.Fight.FightReport|undefined} value
 * @return {!proto.PbModel.Pvp.PvpFightForGroupRes} returns this
*/
proto.PbModel.Pvp.PvpFightForGroupRes.prototype.setReportfight = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.Pvp.PvpFightForGroupRes} returns this
 */
proto.PbModel.Pvp.PvpFightForGroupRes.prototype.clearReportfight = function() {
  return this.setReportfight(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.Pvp.PvpFightForGroupRes.prototype.hasReportfight = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional PbModel.Resource.ResourceToClientModel ClientResourceModel = 4;
 * @return {?proto.PbModel.Resource.ResourceToClientModel}
 */
proto.PbModel.Pvp.PvpFightForGroupRes.prototype.getClientresourcemodel = function() {
  return /** @type{?proto.PbModel.Resource.ResourceToClientModel} */ (
    jspb.Message.getWrapperField(this, Resource_pb.ResourceToClientModel, 4));
};


/**
 * @param {?proto.PbModel.Resource.ResourceToClientModel|undefined} value
 * @return {!proto.PbModel.Pvp.PvpFightForGroupRes} returns this
*/
proto.PbModel.Pvp.PvpFightForGroupRes.prototype.setClientresourcemodel = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.Pvp.PvpFightForGroupRes} returns this
 */
proto.PbModel.Pvp.PvpFightForGroupRes.prototype.clearClientresourcemodel = function() {
  return this.setClientresourcemodel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.Pvp.PvpFightForGroupRes.prototype.hasClientresourcemodel = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional PbModel.Resource.ResourceToClientModel RankUpGetList = 5;
 * @return {?proto.PbModel.Resource.ResourceToClientModel}
 */
proto.PbModel.Pvp.PvpFightForGroupRes.prototype.getRankupgetlist = function() {
  return /** @type{?proto.PbModel.Resource.ResourceToClientModel} */ (
    jspb.Message.getWrapperField(this, Resource_pb.ResourceToClientModel, 5));
};


/**
 * @param {?proto.PbModel.Resource.ResourceToClientModel|undefined} value
 * @return {!proto.PbModel.Pvp.PvpFightForGroupRes} returns this
*/
proto.PbModel.Pvp.PvpFightForGroupRes.prototype.setRankupgetlist = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.Pvp.PvpFightForGroupRes} returns this
 */
proto.PbModel.Pvp.PvpFightForGroupRes.prototype.clearRankupgetlist = function() {
  return this.setRankupgetlist(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.Pvp.PvpFightForGroupRes.prototype.hasRankupgetlist = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated string BrandList = 6;
 * @return {!Array<string>}
 */
proto.PbModel.Pvp.PvpFightForGroupRes.prototype.getBrandlistList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.PbModel.Pvp.PvpFightForGroupRes} returns this
 */
proto.PbModel.Pvp.PvpFightForGroupRes.prototype.setBrandlistList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.PbModel.Pvp.PvpFightForGroupRes} returns this
 */
proto.PbModel.Pvp.PvpFightForGroupRes.prototype.addBrandlist = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.Pvp.PvpFightForGroupRes} returns this
 */
proto.PbModel.Pvp.PvpFightForGroupRes.prototype.clearBrandlistList = function() {
  return this.setBrandlistList([]);
};


/**
 * repeated string BrandPool = 7;
 * @return {!Array<string>}
 */
proto.PbModel.Pvp.PvpFightForGroupRes.prototype.getBrandpoolList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 7));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.PbModel.Pvp.PvpFightForGroupRes} returns this
 */
proto.PbModel.Pvp.PvpFightForGroupRes.prototype.setBrandpoolList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.PbModel.Pvp.PvpFightForGroupRes} returns this
 */
proto.PbModel.Pvp.PvpFightForGroupRes.prototype.addBrandpool = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.Pvp.PvpFightForGroupRes} returns this
 */
proto.PbModel.Pvp.PvpFightForGroupRes.prototype.clearBrandpoolList = function() {
  return this.setBrandpoolList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.Pvp.PvpFightForScoreReq.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Pvp.PvpFightForScoreReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Pvp.PvpFightForScoreReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Pvp.PvpFightForScoreReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Pvp.PvpFightForScoreReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    playerid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    teaminfoList: jspb.Message.toObjectList(msg.getTeaminfoList(),
    Team_pb.Team.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Pvp.PvpFightForScoreReq}
 */
proto.PbModel.Pvp.PvpFightForScoreReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Pvp.PvpFightForScoreReq;
  return proto.PbModel.Pvp.PvpFightForScoreReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Pvp.PvpFightForScoreReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Pvp.PvpFightForScoreReq}
 */
proto.PbModel.Pvp.PvpFightForScoreReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlayerid(value);
      break;
    case 2:
      var value = new Team_pb.Team;
      reader.readMessage(value,Team_pb.Team.deserializeBinaryFromReader);
      msg.addTeaminfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Pvp.PvpFightForScoreReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Pvp.PvpFightForScoreReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Pvp.PvpFightForScoreReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Pvp.PvpFightForScoreReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlayerid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTeaminfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      Team_pb.Team.serializeBinaryToWriter
    );
  }
};


/**
 * optional string PlayerId = 1;
 * @return {string}
 */
proto.PbModel.Pvp.PvpFightForScoreReq.prototype.getPlayerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Pvp.PvpFightForScoreReq} returns this
 */
proto.PbModel.Pvp.PvpFightForScoreReq.prototype.setPlayerid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated PbModel.Team.Team TeamInfo = 2;
 * @return {!Array<!proto.PbModel.Team.Team>}
 */
proto.PbModel.Pvp.PvpFightForScoreReq.prototype.getTeaminfoList = function() {
  return /** @type{!Array<!proto.PbModel.Team.Team>} */ (
    jspb.Message.getRepeatedWrapperField(this, Team_pb.Team, 2));
};


/**
 * @param {!Array<!proto.PbModel.Team.Team>} value
 * @return {!proto.PbModel.Pvp.PvpFightForScoreReq} returns this
*/
proto.PbModel.Pvp.PvpFightForScoreReq.prototype.setTeaminfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.PbModel.Team.Team=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.Team.Team}
 */
proto.PbModel.Pvp.PvpFightForScoreReq.prototype.addTeaminfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.PbModel.Team.Team, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.Pvp.PvpFightForScoreReq} returns this
 */
proto.PbModel.Pvp.PvpFightForScoreReq.prototype.clearTeaminfoList = function() {
  return this.setTeaminfoList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.Pvp.PvpFightForScoreRes.repeatedFields_ = [8,9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Pvp.PvpFightForScoreRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Pvp.PvpFightForScoreRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Pvp.PvpFightForScoreRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Pvp.PvpFightForScoreRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    iswin: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    score: jspb.Message.getFieldWithDefault(msg, 2, 0),
    scorechange: jspb.Message.getFieldWithDefault(msg, 3, 0),
    tgtscore: jspb.Message.getFieldWithDefault(msg, 4, 0),
    tgtscorechange: jspb.Message.getFieldWithDefault(msg, 5, 0),
    reportfight: (f = msg.getReportfight()) && Fight_pb.FightReport.toObject(includeInstance, f),
    clientresourcemodel: (f = msg.getClientresourcemodel()) && Resource_pb.ResourceToClientModel.toObject(includeInstance, f),
    brandlistList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f,
    brandpoolList: (f = jspb.Message.getRepeatedField(msg, 9)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Pvp.PvpFightForScoreRes}
 */
proto.PbModel.Pvp.PvpFightForScoreRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Pvp.PvpFightForScoreRes;
  return proto.PbModel.Pvp.PvpFightForScoreRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Pvp.PvpFightForScoreRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Pvp.PvpFightForScoreRes}
 */
proto.PbModel.Pvp.PvpFightForScoreRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIswin(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setScore(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setScorechange(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTgtscore(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTgtscorechange(value);
      break;
    case 6:
      var value = new Fight_pb.FightReport;
      reader.readMessage(value,Fight_pb.FightReport.deserializeBinaryFromReader);
      msg.setReportfight(value);
      break;
    case 7:
      var value = new Resource_pb.ResourceToClientModel;
      reader.readMessage(value,Resource_pb.ResourceToClientModel.deserializeBinaryFromReader);
      msg.setClientresourcemodel(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.addBrandlist(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.addBrandpool(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Pvp.PvpFightForScoreRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Pvp.PvpFightForScoreRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Pvp.PvpFightForScoreRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Pvp.PvpFightForScoreRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIswin();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getScore();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getScorechange();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getTgtscore();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getTgtscorechange();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getReportfight();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      Fight_pb.FightReport.serializeBinaryToWriter
    );
  }
  f = message.getClientresourcemodel();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      Resource_pb.ResourceToClientModel.serializeBinaryToWriter
    );
  }
  f = message.getBrandlistList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      8,
      f
    );
  }
  f = message.getBrandpoolList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      9,
      f
    );
  }
};


/**
 * optional bool IsWin = 1;
 * @return {boolean}
 */
proto.PbModel.Pvp.PvpFightForScoreRes.prototype.getIswin = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PbModel.Pvp.PvpFightForScoreRes} returns this
 */
proto.PbModel.Pvp.PvpFightForScoreRes.prototype.setIswin = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional int32 Score = 2;
 * @return {number}
 */
proto.PbModel.Pvp.PvpFightForScoreRes.prototype.getScore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Pvp.PvpFightForScoreRes} returns this
 */
proto.PbModel.Pvp.PvpFightForScoreRes.prototype.setScore = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 ScoreChange = 3;
 * @return {number}
 */
proto.PbModel.Pvp.PvpFightForScoreRes.prototype.getScorechange = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Pvp.PvpFightForScoreRes} returns this
 */
proto.PbModel.Pvp.PvpFightForScoreRes.prototype.setScorechange = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 TgtScore = 4;
 * @return {number}
 */
proto.PbModel.Pvp.PvpFightForScoreRes.prototype.getTgtscore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Pvp.PvpFightForScoreRes} returns this
 */
proto.PbModel.Pvp.PvpFightForScoreRes.prototype.setTgtscore = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 TgtScoreChange = 5;
 * @return {number}
 */
proto.PbModel.Pvp.PvpFightForScoreRes.prototype.getTgtscorechange = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Pvp.PvpFightForScoreRes} returns this
 */
proto.PbModel.Pvp.PvpFightForScoreRes.prototype.setTgtscorechange = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional PbModel.Fight.FightReport ReportFight = 6;
 * @return {?proto.PbModel.Fight.FightReport}
 */
proto.PbModel.Pvp.PvpFightForScoreRes.prototype.getReportfight = function() {
  return /** @type{?proto.PbModel.Fight.FightReport} */ (
    jspb.Message.getWrapperField(this, Fight_pb.FightReport, 6));
};


/**
 * @param {?proto.PbModel.Fight.FightReport|undefined} value
 * @return {!proto.PbModel.Pvp.PvpFightForScoreRes} returns this
*/
proto.PbModel.Pvp.PvpFightForScoreRes.prototype.setReportfight = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.Pvp.PvpFightForScoreRes} returns this
 */
proto.PbModel.Pvp.PvpFightForScoreRes.prototype.clearReportfight = function() {
  return this.setReportfight(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.Pvp.PvpFightForScoreRes.prototype.hasReportfight = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional PbModel.Resource.ResourceToClientModel ClientResourceModel = 7;
 * @return {?proto.PbModel.Resource.ResourceToClientModel}
 */
proto.PbModel.Pvp.PvpFightForScoreRes.prototype.getClientresourcemodel = function() {
  return /** @type{?proto.PbModel.Resource.ResourceToClientModel} */ (
    jspb.Message.getWrapperField(this, Resource_pb.ResourceToClientModel, 7));
};


/**
 * @param {?proto.PbModel.Resource.ResourceToClientModel|undefined} value
 * @return {!proto.PbModel.Pvp.PvpFightForScoreRes} returns this
*/
proto.PbModel.Pvp.PvpFightForScoreRes.prototype.setClientresourcemodel = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.Pvp.PvpFightForScoreRes} returns this
 */
proto.PbModel.Pvp.PvpFightForScoreRes.prototype.clearClientresourcemodel = function() {
  return this.setClientresourcemodel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.Pvp.PvpFightForScoreRes.prototype.hasClientresourcemodel = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * repeated string BrandList = 8;
 * @return {!Array<string>}
 */
proto.PbModel.Pvp.PvpFightForScoreRes.prototype.getBrandlistList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 8));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.PbModel.Pvp.PvpFightForScoreRes} returns this
 */
proto.PbModel.Pvp.PvpFightForScoreRes.prototype.setBrandlistList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.PbModel.Pvp.PvpFightForScoreRes} returns this
 */
proto.PbModel.Pvp.PvpFightForScoreRes.prototype.addBrandlist = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.Pvp.PvpFightForScoreRes} returns this
 */
proto.PbModel.Pvp.PvpFightForScoreRes.prototype.clearBrandlistList = function() {
  return this.setBrandlistList([]);
};


/**
 * repeated string BrandPool = 9;
 * @return {!Array<string>}
 */
proto.PbModel.Pvp.PvpFightForScoreRes.prototype.getBrandpoolList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 9));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.PbModel.Pvp.PvpFightForScoreRes} returns this
 */
proto.PbModel.Pvp.PvpFightForScoreRes.prototype.setBrandpoolList = function(value) {
  return jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.PbModel.Pvp.PvpFightForScoreRes} returns this
 */
proto.PbModel.Pvp.PvpFightForScoreRes.prototype.addBrandpool = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.Pvp.PvpFightForScoreRes} returns this
 */
proto.PbModel.Pvp.PvpFightForScoreRes.prototype.clearBrandpoolList = function() {
  return this.setBrandpoolList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Pvp.PvpGetInfoReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Pvp.PvpGetInfoReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Pvp.PvpGetInfoReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Pvp.PvpGetInfoReq.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Pvp.PvpGetInfoReq}
 */
proto.PbModel.Pvp.PvpGetInfoReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Pvp.PvpGetInfoReq;
  return proto.PbModel.Pvp.PvpGetInfoReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Pvp.PvpGetInfoReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Pvp.PvpGetInfoReq}
 */
proto.PbModel.Pvp.PvpGetInfoReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Pvp.PvpGetInfoReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Pvp.PvpGetInfoReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Pvp.PvpGetInfoReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Pvp.PvpGetInfoReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.Pvp.PvpGetInfoRes.repeatedFields_ = [7,10,11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Pvp.PvpGetInfoRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Pvp.PvpGetInfoRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Pvp.PvpGetInfoRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Pvp.PvpGetInfoRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    groupid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    maxrank: jspb.Message.getFieldWithDefault(msg, 2, 0),
    myrank: jspb.Message.getFieldWithDefault(msg, 3, 0),
    myscore: jspb.Message.getFieldWithDefault(msg, 4, 0),
    maxnum: jspb.Message.getFieldWithDefault(msg, 5, 0),
    buynum: jspb.Message.getFieldWithDefault(msg, 6, 0),
    grouprewardreceivelistList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f,
    dayrefreshtime: jspb.Message.getFieldWithDefault(msg, 8, 0),
    weekrefreshtime: jspb.Message.getFieldWithDefault(msg, 9, 0),
    topthreerankinfoList: jspb.Message.toObjectList(msg.getTopthreerankinfoList(),
    proto.PbModel.Pvp.PvpRankItem.toObject, includeInstance),
    challengeinfoList: jspb.Message.toObjectList(msg.getChallengeinfoList(),
    proto.PbModel.Pvp.PvpChallengeItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Pvp.PvpGetInfoRes}
 */
proto.PbModel.Pvp.PvpGetInfoRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Pvp.PvpGetInfoRes;
  return proto.PbModel.Pvp.PvpGetInfoRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Pvp.PvpGetInfoRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Pvp.PvpGetInfoRes}
 */
proto.PbModel.Pvp.PvpGetInfoRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGroupid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxrank(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMyrank(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMyscore(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxnum(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBuynum(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.addGrouprewardreceivelist(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDayrefreshtime(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setWeekrefreshtime(value);
      break;
    case 10:
      var value = new proto.PbModel.Pvp.PvpRankItem;
      reader.readMessage(value,proto.PbModel.Pvp.PvpRankItem.deserializeBinaryFromReader);
      msg.addTopthreerankinfo(value);
      break;
    case 11:
      var value = new proto.PbModel.Pvp.PvpChallengeItem;
      reader.readMessage(value,proto.PbModel.Pvp.PvpChallengeItem.deserializeBinaryFromReader);
      msg.addChallengeinfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Pvp.PvpGetInfoRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Pvp.PvpGetInfoRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Pvp.PvpGetInfoRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Pvp.PvpGetInfoRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroupid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMaxrank();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getMyrank();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getMyscore();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getMaxnum();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getBuynum();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getGrouprewardreceivelistList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      7,
      f
    );
  }
  f = message.getDayrefreshtime();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getWeekrefreshtime();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getTopthreerankinfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.PbModel.Pvp.PvpRankItem.serializeBinaryToWriter
    );
  }
  f = message.getChallengeinfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      proto.PbModel.Pvp.PvpChallengeItem.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 GroupId = 1;
 * @return {number}
 */
proto.PbModel.Pvp.PvpGetInfoRes.prototype.getGroupid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Pvp.PvpGetInfoRes} returns this
 */
proto.PbModel.Pvp.PvpGetInfoRes.prototype.setGroupid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 MaxRank = 2;
 * @return {number}
 */
proto.PbModel.Pvp.PvpGetInfoRes.prototype.getMaxrank = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Pvp.PvpGetInfoRes} returns this
 */
proto.PbModel.Pvp.PvpGetInfoRes.prototype.setMaxrank = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 MyRank = 3;
 * @return {number}
 */
proto.PbModel.Pvp.PvpGetInfoRes.prototype.getMyrank = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Pvp.PvpGetInfoRes} returns this
 */
proto.PbModel.Pvp.PvpGetInfoRes.prototype.setMyrank = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 MyScore = 4;
 * @return {number}
 */
proto.PbModel.Pvp.PvpGetInfoRes.prototype.getMyscore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Pvp.PvpGetInfoRes} returns this
 */
proto.PbModel.Pvp.PvpGetInfoRes.prototype.setMyscore = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 MaxNum = 5;
 * @return {number}
 */
proto.PbModel.Pvp.PvpGetInfoRes.prototype.getMaxnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Pvp.PvpGetInfoRes} returns this
 */
proto.PbModel.Pvp.PvpGetInfoRes.prototype.setMaxnum = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 BuyNum = 6;
 * @return {number}
 */
proto.PbModel.Pvp.PvpGetInfoRes.prototype.getBuynum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Pvp.PvpGetInfoRes} returns this
 */
proto.PbModel.Pvp.PvpGetInfoRes.prototype.setBuynum = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * repeated string GroupRewardReceiveList = 7;
 * @return {!Array<string>}
 */
proto.PbModel.Pvp.PvpGetInfoRes.prototype.getGrouprewardreceivelistList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 7));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.PbModel.Pvp.PvpGetInfoRes} returns this
 */
proto.PbModel.Pvp.PvpGetInfoRes.prototype.setGrouprewardreceivelistList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.PbModel.Pvp.PvpGetInfoRes} returns this
 */
proto.PbModel.Pvp.PvpGetInfoRes.prototype.addGrouprewardreceivelist = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.Pvp.PvpGetInfoRes} returns this
 */
proto.PbModel.Pvp.PvpGetInfoRes.prototype.clearGrouprewardreceivelistList = function() {
  return this.setGrouprewardreceivelistList([]);
};


/**
 * optional int64 DayRefreshTime = 8;
 * @return {number}
 */
proto.PbModel.Pvp.PvpGetInfoRes.prototype.getDayrefreshtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Pvp.PvpGetInfoRes} returns this
 */
proto.PbModel.Pvp.PvpGetInfoRes.prototype.setDayrefreshtime = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int64 WeekRefreshTime = 9;
 * @return {number}
 */
proto.PbModel.Pvp.PvpGetInfoRes.prototype.getWeekrefreshtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Pvp.PvpGetInfoRes} returns this
 */
proto.PbModel.Pvp.PvpGetInfoRes.prototype.setWeekrefreshtime = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * repeated PvpRankItem TopThreeRankInfo = 10;
 * @return {!Array<!proto.PbModel.Pvp.PvpRankItem>}
 */
proto.PbModel.Pvp.PvpGetInfoRes.prototype.getTopthreerankinfoList = function() {
  return /** @type{!Array<!proto.PbModel.Pvp.PvpRankItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.Pvp.PvpRankItem, 10));
};


/**
 * @param {!Array<!proto.PbModel.Pvp.PvpRankItem>} value
 * @return {!proto.PbModel.Pvp.PvpGetInfoRes} returns this
*/
proto.PbModel.Pvp.PvpGetInfoRes.prototype.setTopthreerankinfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.PbModel.Pvp.PvpRankItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.Pvp.PvpRankItem}
 */
proto.PbModel.Pvp.PvpGetInfoRes.prototype.addTopthreerankinfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.PbModel.Pvp.PvpRankItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.Pvp.PvpGetInfoRes} returns this
 */
proto.PbModel.Pvp.PvpGetInfoRes.prototype.clearTopthreerankinfoList = function() {
  return this.setTopthreerankinfoList([]);
};


/**
 * repeated PvpChallengeItem ChallengeInfo = 11;
 * @return {!Array<!proto.PbModel.Pvp.PvpChallengeItem>}
 */
proto.PbModel.Pvp.PvpGetInfoRes.prototype.getChallengeinfoList = function() {
  return /** @type{!Array<!proto.PbModel.Pvp.PvpChallengeItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.Pvp.PvpChallengeItem, 11));
};


/**
 * @param {!Array<!proto.PbModel.Pvp.PvpChallengeItem>} value
 * @return {!proto.PbModel.Pvp.PvpGetInfoRes} returns this
*/
proto.PbModel.Pvp.PvpGetInfoRes.prototype.setChallengeinfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.PbModel.Pvp.PvpChallengeItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.Pvp.PvpChallengeItem}
 */
proto.PbModel.Pvp.PvpGetInfoRes.prototype.addChallengeinfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.PbModel.Pvp.PvpChallengeItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.Pvp.PvpGetInfoRes} returns this
 */
proto.PbModel.Pvp.PvpGetInfoRes.prototype.clearChallengeinfoList = function() {
  return this.setChallengeinfoList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Pvp.PvpRankItem.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Pvp.PvpRankItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Pvp.PvpRankItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Pvp.PvpRankItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    playerid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    playerinfo: (f = msg.getPlayerinfo()) && Player_pb.PlayerCommonInfoRes.toObject(includeInstance, f),
    score: jspb.Message.getFieldWithDefault(msg, 3, 0),
    isnpc: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Pvp.PvpRankItem}
 */
proto.PbModel.Pvp.PvpRankItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Pvp.PvpRankItem;
  return proto.PbModel.Pvp.PvpRankItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Pvp.PvpRankItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Pvp.PvpRankItem}
 */
proto.PbModel.Pvp.PvpRankItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlayerid(value);
      break;
    case 2:
      var value = new Player_pb.PlayerCommonInfoRes;
      reader.readMessage(value,Player_pb.PlayerCommonInfoRes.deserializeBinaryFromReader);
      msg.setPlayerinfo(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setScore(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsnpc(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Pvp.PvpRankItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Pvp.PvpRankItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Pvp.PvpRankItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Pvp.PvpRankItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlayerid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPlayerinfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      Player_pb.PlayerCommonInfoRes.serializeBinaryToWriter
    );
  }
  f = message.getScore();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getIsnpc();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional string PlayerId = 1;
 * @return {string}
 */
proto.PbModel.Pvp.PvpRankItem.prototype.getPlayerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Pvp.PvpRankItem} returns this
 */
proto.PbModel.Pvp.PvpRankItem.prototype.setPlayerid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional PbModel.Player.PlayerCommonInfoRes PlayerInfo = 2;
 * @return {?proto.PbModel.Player.PlayerCommonInfoRes}
 */
proto.PbModel.Pvp.PvpRankItem.prototype.getPlayerinfo = function() {
  return /** @type{?proto.PbModel.Player.PlayerCommonInfoRes} */ (
    jspb.Message.getWrapperField(this, Player_pb.PlayerCommonInfoRes, 2));
};


/**
 * @param {?proto.PbModel.Player.PlayerCommonInfoRes|undefined} value
 * @return {!proto.PbModel.Pvp.PvpRankItem} returns this
*/
proto.PbModel.Pvp.PvpRankItem.prototype.setPlayerinfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.Pvp.PvpRankItem} returns this
 */
proto.PbModel.Pvp.PvpRankItem.prototype.clearPlayerinfo = function() {
  return this.setPlayerinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.Pvp.PvpRankItem.prototype.hasPlayerinfo = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 Score = 3;
 * @return {number}
 */
proto.PbModel.Pvp.PvpRankItem.prototype.getScore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Pvp.PvpRankItem} returns this
 */
proto.PbModel.Pvp.PvpRankItem.prototype.setScore = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bool IsNpc = 4;
 * @return {boolean}
 */
proto.PbModel.Pvp.PvpRankItem.prototype.getIsnpc = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PbModel.Pvp.PvpRankItem} returns this
 */
proto.PbModel.Pvp.PvpRankItem.prototype.setIsnpc = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Pvp.PvpChallengeItem.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Pvp.PvpChallengeItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Pvp.PvpChallengeItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Pvp.PvpChallengeItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    playerid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    playerinfo: (f = msg.getPlayerinfo()) && Player_pb.PlayerCommonInfoRes.toObject(includeInstance, f),
    num: jspb.Message.getFieldWithDefault(msg, 3, 0),
    isnpc: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    npcid: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Pvp.PvpChallengeItem}
 */
proto.PbModel.Pvp.PvpChallengeItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Pvp.PvpChallengeItem;
  return proto.PbModel.Pvp.PvpChallengeItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Pvp.PvpChallengeItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Pvp.PvpChallengeItem}
 */
proto.PbModel.Pvp.PvpChallengeItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlayerid(value);
      break;
    case 2:
      var value = new Player_pb.PlayerCommonInfoRes;
      reader.readMessage(value,Player_pb.PlayerCommonInfoRes.deserializeBinaryFromReader);
      msg.setPlayerinfo(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNum(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsnpc(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNpcid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Pvp.PvpChallengeItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Pvp.PvpChallengeItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Pvp.PvpChallengeItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Pvp.PvpChallengeItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlayerid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPlayerinfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      Player_pb.PlayerCommonInfoRes.serializeBinaryToWriter
    );
  }
  f = message.getNum();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getIsnpc();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getNpcid();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional string PlayerId = 1;
 * @return {string}
 */
proto.PbModel.Pvp.PvpChallengeItem.prototype.getPlayerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Pvp.PvpChallengeItem} returns this
 */
proto.PbModel.Pvp.PvpChallengeItem.prototype.setPlayerid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional PbModel.Player.PlayerCommonInfoRes PlayerInfo = 2;
 * @return {?proto.PbModel.Player.PlayerCommonInfoRes}
 */
proto.PbModel.Pvp.PvpChallengeItem.prototype.getPlayerinfo = function() {
  return /** @type{?proto.PbModel.Player.PlayerCommonInfoRes} */ (
    jspb.Message.getWrapperField(this, Player_pb.PlayerCommonInfoRes, 2));
};


/**
 * @param {?proto.PbModel.Player.PlayerCommonInfoRes|undefined} value
 * @return {!proto.PbModel.Pvp.PvpChallengeItem} returns this
*/
proto.PbModel.Pvp.PvpChallengeItem.prototype.setPlayerinfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.Pvp.PvpChallengeItem} returns this
 */
proto.PbModel.Pvp.PvpChallengeItem.prototype.clearPlayerinfo = function() {
  return this.setPlayerinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.Pvp.PvpChallengeItem.prototype.hasPlayerinfo = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 Num = 3;
 * @return {number}
 */
proto.PbModel.Pvp.PvpChallengeItem.prototype.getNum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Pvp.PvpChallengeItem} returns this
 */
proto.PbModel.Pvp.PvpChallengeItem.prototype.setNum = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bool IsNpc = 4;
 * @return {boolean}
 */
proto.PbModel.Pvp.PvpChallengeItem.prototype.getIsnpc = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PbModel.Pvp.PvpChallengeItem} returns this
 */
proto.PbModel.Pvp.PvpChallengeItem.prototype.setIsnpc = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional int32 NpcId = 5;
 * @return {number}
 */
proto.PbModel.Pvp.PvpChallengeItem.prototype.getNpcid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Pvp.PvpChallengeItem} returns this
 */
proto.PbModel.Pvp.PvpChallengeItem.prototype.setNpcid = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Pvp.PvpGetRankInfoReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Pvp.PvpGetRankInfoReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Pvp.PvpGetRankInfoReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Pvp.PvpGetRankInfoReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    groupid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Pvp.PvpGetRankInfoReq}
 */
proto.PbModel.Pvp.PvpGetRankInfoReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Pvp.PvpGetRankInfoReq;
  return proto.PbModel.Pvp.PvpGetRankInfoReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Pvp.PvpGetRankInfoReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Pvp.PvpGetRankInfoReq}
 */
proto.PbModel.Pvp.PvpGetRankInfoReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGroupid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Pvp.PvpGetRankInfoReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Pvp.PvpGetRankInfoReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Pvp.PvpGetRankInfoReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Pvp.PvpGetRankInfoReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroupid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 GroupId = 1;
 * @return {number}
 */
proto.PbModel.Pvp.PvpGetRankInfoReq.prototype.getGroupid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Pvp.PvpGetRankInfoReq} returns this
 */
proto.PbModel.Pvp.PvpGetRankInfoReq.prototype.setGroupid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.Pvp.PvpGetRankInfoRes.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Pvp.PvpGetRankInfoRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Pvp.PvpGetRankInfoRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Pvp.PvpGetRankInfoRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Pvp.PvpGetRankInfoRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    rankinfoList: jspb.Message.toObjectList(msg.getRankinfoList(),
    proto.PbModel.Pvp.PvpRankItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Pvp.PvpGetRankInfoRes}
 */
proto.PbModel.Pvp.PvpGetRankInfoRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Pvp.PvpGetRankInfoRes;
  return proto.PbModel.Pvp.PvpGetRankInfoRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Pvp.PvpGetRankInfoRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Pvp.PvpGetRankInfoRes}
 */
proto.PbModel.Pvp.PvpGetRankInfoRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PbModel.Pvp.PvpRankItem;
      reader.readMessage(value,proto.PbModel.Pvp.PvpRankItem.deserializeBinaryFromReader);
      msg.addRankinfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Pvp.PvpGetRankInfoRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Pvp.PvpGetRankInfoRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Pvp.PvpGetRankInfoRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Pvp.PvpGetRankInfoRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRankinfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.PbModel.Pvp.PvpRankItem.serializeBinaryToWriter
    );
  }
};


/**
 * repeated PvpRankItem RankInfo = 1;
 * @return {!Array<!proto.PbModel.Pvp.PvpRankItem>}
 */
proto.PbModel.Pvp.PvpGetRankInfoRes.prototype.getRankinfoList = function() {
  return /** @type{!Array<!proto.PbModel.Pvp.PvpRankItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.Pvp.PvpRankItem, 1));
};


/**
 * @param {!Array<!proto.PbModel.Pvp.PvpRankItem>} value
 * @return {!proto.PbModel.Pvp.PvpGetRankInfoRes} returns this
*/
proto.PbModel.Pvp.PvpGetRankInfoRes.prototype.setRankinfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.PbModel.Pvp.PvpRankItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.Pvp.PvpRankItem}
 */
proto.PbModel.Pvp.PvpGetRankInfoRes.prototype.addRankinfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.PbModel.Pvp.PvpRankItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.Pvp.PvpGetRankInfoRes} returns this
 */
proto.PbModel.Pvp.PvpGetRankInfoRes.prototype.clearRankinfoList = function() {
  return this.setRankinfoList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Pvp.PvpGetReportInfoReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Pvp.PvpGetReportInfoReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Pvp.PvpGetReportInfoReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Pvp.PvpGetReportInfoReq.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Pvp.PvpGetReportInfoReq}
 */
proto.PbModel.Pvp.PvpGetReportInfoReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Pvp.PvpGetReportInfoReq;
  return proto.PbModel.Pvp.PvpGetReportInfoReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Pvp.PvpGetReportInfoReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Pvp.PvpGetReportInfoReq}
 */
proto.PbModel.Pvp.PvpGetReportInfoReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Pvp.PvpGetReportInfoReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Pvp.PvpGetReportInfoReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Pvp.PvpGetReportInfoReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Pvp.PvpGetReportInfoReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.Pvp.PvpGetReportInfoRes.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Pvp.PvpGetReportInfoRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Pvp.PvpGetReportInfoRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Pvp.PvpGetReportInfoRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Pvp.PvpGetReportInfoRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    reportinfoList: jspb.Message.toObjectList(msg.getReportinfoList(),
    proto.PbModel.Pvp.PvpReportItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Pvp.PvpGetReportInfoRes}
 */
proto.PbModel.Pvp.PvpGetReportInfoRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Pvp.PvpGetReportInfoRes;
  return proto.PbModel.Pvp.PvpGetReportInfoRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Pvp.PvpGetReportInfoRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Pvp.PvpGetReportInfoRes}
 */
proto.PbModel.Pvp.PvpGetReportInfoRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PbModel.Pvp.PvpReportItem;
      reader.readMessage(value,proto.PbModel.Pvp.PvpReportItem.deserializeBinaryFromReader);
      msg.addReportinfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Pvp.PvpGetReportInfoRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Pvp.PvpGetReportInfoRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Pvp.PvpGetReportInfoRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Pvp.PvpGetReportInfoRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReportinfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.PbModel.Pvp.PvpReportItem.serializeBinaryToWriter
    );
  }
};


/**
 * repeated PvpReportItem ReportInfo = 1;
 * @return {!Array<!proto.PbModel.Pvp.PvpReportItem>}
 */
proto.PbModel.Pvp.PvpGetReportInfoRes.prototype.getReportinfoList = function() {
  return /** @type{!Array<!proto.PbModel.Pvp.PvpReportItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.Pvp.PvpReportItem, 1));
};


/**
 * @param {!Array<!proto.PbModel.Pvp.PvpReportItem>} value
 * @return {!proto.PbModel.Pvp.PvpGetReportInfoRes} returns this
*/
proto.PbModel.Pvp.PvpGetReportInfoRes.prototype.setReportinfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.PbModel.Pvp.PvpReportItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.Pvp.PvpReportItem}
 */
proto.PbModel.Pvp.PvpGetReportInfoRes.prototype.addReportinfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.PbModel.Pvp.PvpReportItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.Pvp.PvpGetReportInfoRes} returns this
 */
proto.PbModel.Pvp.PvpGetReportInfoRes.prototype.clearReportinfoList = function() {
  return this.setReportinfoList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Pvp.PvpReportItem.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Pvp.PvpReportItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Pvp.PvpReportItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Pvp.PvpReportItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    isatk: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    tgtisnpc: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    npcid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    iswin: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    groupid: jspb.Message.getFieldWithDefault(msg, 5, 0),
    changenum: jspb.Message.getFieldWithDefault(msg, 6, 0),
    timetick: jspb.Message.getFieldWithDefault(msg, 7, 0),
    playerinfo: (f = msg.getPlayerinfo()) && Player_pb.PlayerCommonInfoRes.toObject(includeInstance, f),
    battlereportid: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Pvp.PvpReportItem}
 */
proto.PbModel.Pvp.PvpReportItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Pvp.PvpReportItem;
  return proto.PbModel.Pvp.PvpReportItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Pvp.PvpReportItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Pvp.PvpReportItem}
 */
proto.PbModel.Pvp.PvpReportItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsatk(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTgtisnpc(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNpcid(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIswin(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGroupid(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setChangenum(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimetick(value);
      break;
    case 8:
      var value = new Player_pb.PlayerCommonInfoRes;
      reader.readMessage(value,Player_pb.PlayerCommonInfoRes.deserializeBinaryFromReader);
      msg.setPlayerinfo(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setBattlereportid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Pvp.PvpReportItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Pvp.PvpReportItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Pvp.PvpReportItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Pvp.PvpReportItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIsatk();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getTgtisnpc();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getNpcid();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getIswin();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getGroupid();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getChangenum();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getTimetick();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getPlayerinfo();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      Player_pb.PlayerCommonInfoRes.serializeBinaryToWriter
    );
  }
  f = message.getBattlereportid();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional bool IsAtk = 1;
 * @return {boolean}
 */
proto.PbModel.Pvp.PvpReportItem.prototype.getIsatk = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PbModel.Pvp.PvpReportItem} returns this
 */
proto.PbModel.Pvp.PvpReportItem.prototype.setIsatk = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool TgtIsNpc = 2;
 * @return {boolean}
 */
proto.PbModel.Pvp.PvpReportItem.prototype.getTgtisnpc = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PbModel.Pvp.PvpReportItem} returns this
 */
proto.PbModel.Pvp.PvpReportItem.prototype.setTgtisnpc = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional int32 NpcId = 3;
 * @return {number}
 */
proto.PbModel.Pvp.PvpReportItem.prototype.getNpcid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Pvp.PvpReportItem} returns this
 */
proto.PbModel.Pvp.PvpReportItem.prototype.setNpcid = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bool IsWin = 4;
 * @return {boolean}
 */
proto.PbModel.Pvp.PvpReportItem.prototype.getIswin = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PbModel.Pvp.PvpReportItem} returns this
 */
proto.PbModel.Pvp.PvpReportItem.prototype.setIswin = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional int32 GroupId = 5;
 * @return {number}
 */
proto.PbModel.Pvp.PvpReportItem.prototype.getGroupid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Pvp.PvpReportItem} returns this
 */
proto.PbModel.Pvp.PvpReportItem.prototype.setGroupid = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 ChangeNum = 6;
 * @return {number}
 */
proto.PbModel.Pvp.PvpReportItem.prototype.getChangenum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Pvp.PvpReportItem} returns this
 */
proto.PbModel.Pvp.PvpReportItem.prototype.setChangenum = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int64 TimeTick = 7;
 * @return {number}
 */
proto.PbModel.Pvp.PvpReportItem.prototype.getTimetick = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Pvp.PvpReportItem} returns this
 */
proto.PbModel.Pvp.PvpReportItem.prototype.setTimetick = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional PbModel.Player.PlayerCommonInfoRes PlayerInfo = 8;
 * @return {?proto.PbModel.Player.PlayerCommonInfoRes}
 */
proto.PbModel.Pvp.PvpReportItem.prototype.getPlayerinfo = function() {
  return /** @type{?proto.PbModel.Player.PlayerCommonInfoRes} */ (
    jspb.Message.getWrapperField(this, Player_pb.PlayerCommonInfoRes, 8));
};


/**
 * @param {?proto.PbModel.Player.PlayerCommonInfoRes|undefined} value
 * @return {!proto.PbModel.Pvp.PvpReportItem} returns this
*/
proto.PbModel.Pvp.PvpReportItem.prototype.setPlayerinfo = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.Pvp.PvpReportItem} returns this
 */
proto.PbModel.Pvp.PvpReportItem.prototype.clearPlayerinfo = function() {
  return this.setPlayerinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.Pvp.PvpReportItem.prototype.hasPlayerinfo = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string BattleReportId = 9;
 * @return {string}
 */
proto.PbModel.Pvp.PvpReportItem.prototype.getBattlereportid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Pvp.PvpReportItem} returns this
 */
proto.PbModel.Pvp.PvpReportItem.prototype.setBattlereportid = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Pvp.PvpRefreshReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Pvp.PvpRefreshReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Pvp.PvpRefreshReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Pvp.PvpRefreshReq.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Pvp.PvpRefreshReq}
 */
proto.PbModel.Pvp.PvpRefreshReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Pvp.PvpRefreshReq;
  return proto.PbModel.Pvp.PvpRefreshReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Pvp.PvpRefreshReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Pvp.PvpRefreshReq}
 */
proto.PbModel.Pvp.PvpRefreshReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Pvp.PvpRefreshReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Pvp.PvpRefreshReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Pvp.PvpRefreshReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Pvp.PvpRefreshReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.Pvp.PvpRefreshRes.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Pvp.PvpRefreshRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Pvp.PvpRefreshRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Pvp.PvpRefreshRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Pvp.PvpRefreshRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    challengeinfoList: jspb.Message.toObjectList(msg.getChallengeinfoList(),
    proto.PbModel.Pvp.PvpChallengeItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Pvp.PvpRefreshRes}
 */
proto.PbModel.Pvp.PvpRefreshRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Pvp.PvpRefreshRes;
  return proto.PbModel.Pvp.PvpRefreshRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Pvp.PvpRefreshRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Pvp.PvpRefreshRes}
 */
proto.PbModel.Pvp.PvpRefreshRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PbModel.Pvp.PvpChallengeItem;
      reader.readMessage(value,proto.PbModel.Pvp.PvpChallengeItem.deserializeBinaryFromReader);
      msg.addChallengeinfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Pvp.PvpRefreshRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Pvp.PvpRefreshRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Pvp.PvpRefreshRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Pvp.PvpRefreshRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChallengeinfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.PbModel.Pvp.PvpChallengeItem.serializeBinaryToWriter
    );
  }
};


/**
 * repeated PvpChallengeItem ChallengeInfo = 1;
 * @return {!Array<!proto.PbModel.Pvp.PvpChallengeItem>}
 */
proto.PbModel.Pvp.PvpRefreshRes.prototype.getChallengeinfoList = function() {
  return /** @type{!Array<!proto.PbModel.Pvp.PvpChallengeItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.Pvp.PvpChallengeItem, 1));
};


/**
 * @param {!Array<!proto.PbModel.Pvp.PvpChallengeItem>} value
 * @return {!proto.PbModel.Pvp.PvpRefreshRes} returns this
*/
proto.PbModel.Pvp.PvpRefreshRes.prototype.setChallengeinfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.PbModel.Pvp.PvpChallengeItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.Pvp.PvpChallengeItem}
 */
proto.PbModel.Pvp.PvpRefreshRes.prototype.addChallengeinfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.PbModel.Pvp.PvpChallengeItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.Pvp.PvpRefreshRes} returns this
 */
proto.PbModel.Pvp.PvpRefreshRes.prototype.clearChallengeinfoList = function() {
  return this.setChallengeinfoList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Pvp.PvpBuyTicketReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Pvp.PvpBuyTicketReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Pvp.PvpBuyTicketReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Pvp.PvpBuyTicketReq.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Pvp.PvpBuyTicketReq}
 */
proto.PbModel.Pvp.PvpBuyTicketReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Pvp.PvpBuyTicketReq;
  return proto.PbModel.Pvp.PvpBuyTicketReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Pvp.PvpBuyTicketReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Pvp.PvpBuyTicketReq}
 */
proto.PbModel.Pvp.PvpBuyTicketReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Pvp.PvpBuyTicketReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Pvp.PvpBuyTicketReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Pvp.PvpBuyTicketReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Pvp.PvpBuyTicketReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Pvp.PvpBuyTicketRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Pvp.PvpBuyTicketRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Pvp.PvpBuyTicketRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Pvp.PvpBuyTicketRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    buynum: jspb.Message.getFieldWithDefault(msg, 1, 0),
    basegetgameresourcelist: (f = msg.getBasegetgameresourcelist()) && Resource_pb.ResourceToClientModel.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Pvp.PvpBuyTicketRes}
 */
proto.PbModel.Pvp.PvpBuyTicketRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Pvp.PvpBuyTicketRes;
  return proto.PbModel.Pvp.PvpBuyTicketRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Pvp.PvpBuyTicketRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Pvp.PvpBuyTicketRes}
 */
proto.PbModel.Pvp.PvpBuyTicketRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBuynum(value);
      break;
    case 2:
      var value = new Resource_pb.ResourceToClientModel;
      reader.readMessage(value,Resource_pb.ResourceToClientModel.deserializeBinaryFromReader);
      msg.setBasegetgameresourcelist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Pvp.PvpBuyTicketRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Pvp.PvpBuyTicketRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Pvp.PvpBuyTicketRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Pvp.PvpBuyTicketRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBuynum();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getBasegetgameresourcelist();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      Resource_pb.ResourceToClientModel.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 BuyNum = 1;
 * @return {number}
 */
proto.PbModel.Pvp.PvpBuyTicketRes.prototype.getBuynum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Pvp.PvpBuyTicketRes} returns this
 */
proto.PbModel.Pvp.PvpBuyTicketRes.prototype.setBuynum = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional PbModel.Resource.ResourceToClientModel BaseGetGameResourceList = 2;
 * @return {?proto.PbModel.Resource.ResourceToClientModel}
 */
proto.PbModel.Pvp.PvpBuyTicketRes.prototype.getBasegetgameresourcelist = function() {
  return /** @type{?proto.PbModel.Resource.ResourceToClientModel} */ (
    jspb.Message.getWrapperField(this, Resource_pb.ResourceToClientModel, 2));
};


/**
 * @param {?proto.PbModel.Resource.ResourceToClientModel|undefined} value
 * @return {!proto.PbModel.Pvp.PvpBuyTicketRes} returns this
*/
proto.PbModel.Pvp.PvpBuyTicketRes.prototype.setBasegetgameresourcelist = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.Pvp.PvpBuyTicketRes} returns this
 */
proto.PbModel.Pvp.PvpBuyTicketRes.prototype.clearBasegetgameresourcelist = function() {
  return this.setBasegetgameresourcelist(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.Pvp.PvpBuyTicketRes.prototype.hasBasegetgameresourcelist = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.Pvp.PvpTeamReq.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Pvp.PvpTeamReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Pvp.PvpTeamReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Pvp.PvpTeamReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Pvp.PvpTeamReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    teaminfoList: jspb.Message.toObjectList(msg.getTeaminfoList(),
    Team_pb.Team.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Pvp.PvpTeamReq}
 */
proto.PbModel.Pvp.PvpTeamReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Pvp.PvpTeamReq;
  return proto.PbModel.Pvp.PvpTeamReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Pvp.PvpTeamReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Pvp.PvpTeamReq}
 */
proto.PbModel.Pvp.PvpTeamReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new Team_pb.Team;
      reader.readMessage(value,Team_pb.Team.deserializeBinaryFromReader);
      msg.addTeaminfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Pvp.PvpTeamReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Pvp.PvpTeamReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Pvp.PvpTeamReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Pvp.PvpTeamReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTeaminfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      Team_pb.Team.serializeBinaryToWriter
    );
  }
};


/**
 * repeated PbModel.Team.Team TeamInfo = 1;
 * @return {!Array<!proto.PbModel.Team.Team>}
 */
proto.PbModel.Pvp.PvpTeamReq.prototype.getTeaminfoList = function() {
  return /** @type{!Array<!proto.PbModel.Team.Team>} */ (
    jspb.Message.getRepeatedWrapperField(this, Team_pb.Team, 1));
};


/**
 * @param {!Array<!proto.PbModel.Team.Team>} value
 * @return {!proto.PbModel.Pvp.PvpTeamReq} returns this
*/
proto.PbModel.Pvp.PvpTeamReq.prototype.setTeaminfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.PbModel.Team.Team=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.Team.Team}
 */
proto.PbModel.Pvp.PvpTeamReq.prototype.addTeaminfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.PbModel.Team.Team, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.Pvp.PvpTeamReq} returns this
 */
proto.PbModel.Pvp.PvpTeamReq.prototype.clearTeaminfoList = function() {
  return this.setTeaminfoList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Pvp.PvpTeamRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Pvp.PvpTeamRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Pvp.PvpTeamRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Pvp.PvpTeamRes.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Pvp.PvpTeamRes}
 */
proto.PbModel.Pvp.PvpTeamRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Pvp.PvpTeamRes;
  return proto.PbModel.Pvp.PvpTeamRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Pvp.PvpTeamRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Pvp.PvpTeamRes}
 */
proto.PbModel.Pvp.PvpTeamRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Pvp.PvpTeamRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Pvp.PvpTeamRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Pvp.PvpTeamRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Pvp.PvpTeamRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


goog.object.extend(exports, proto.PbModel.Pvp);
