// source: Collection.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.PbModel.Collection.CollectionHeroTakeOffCollectionReq', null, global);
goog.exportSymbol('proto.PbModel.Collection.CollectionHeroTakeOffCollectionRes', null, global);
goog.exportSymbol('proto.PbModel.Collection.CollectionHeroWearCollectionReq', null, global);
goog.exportSymbol('proto.PbModel.Collection.CollectionHeroWearCollectionRes', null, global);
goog.exportSymbol('proto.PbModel.Collection.CollectionHeroWearInfo', null, global);
goog.exportSymbol('proto.PbModel.Collection.CollectionInfo', null, global);
goog.exportSymbol('proto.PbModel.Collection.CollectionPushChangeInfoRes', null, global);
goog.exportSymbol('proto.PbModel.Collection.CollectionPushHeroWearCollectionChangeInfoRes', null, global);
goog.exportSymbol('proto.PbModel.Collection.CollectionStarsUpReq', null, global);
goog.exportSymbol('proto.PbModel.Collection.CollectionStarsUpRes', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Collection.CollectionInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Collection.CollectionInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Collection.CollectionInfo.displayName = 'proto.PbModel.Collection.CollectionInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Collection.CollectionHeroWearInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Collection.CollectionHeroWearInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Collection.CollectionHeroWearInfo.displayName = 'proto.PbModel.Collection.CollectionHeroWearInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Collection.CollectionStarsUpReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Collection.CollectionStarsUpReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Collection.CollectionStarsUpReq.displayName = 'proto.PbModel.Collection.CollectionStarsUpReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Collection.CollectionStarsUpRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Collection.CollectionStarsUpRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Collection.CollectionStarsUpRes.displayName = 'proto.PbModel.Collection.CollectionStarsUpRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Collection.CollectionHeroTakeOffCollectionReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Collection.CollectionHeroTakeOffCollectionReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Collection.CollectionHeroTakeOffCollectionReq.displayName = 'proto.PbModel.Collection.CollectionHeroTakeOffCollectionReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Collection.CollectionHeroTakeOffCollectionRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Collection.CollectionHeroTakeOffCollectionRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Collection.CollectionHeroTakeOffCollectionRes.displayName = 'proto.PbModel.Collection.CollectionHeroTakeOffCollectionRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Collection.CollectionHeroWearCollectionReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Collection.CollectionHeroWearCollectionReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Collection.CollectionHeroWearCollectionReq.displayName = 'proto.PbModel.Collection.CollectionHeroWearCollectionReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Collection.CollectionHeroWearCollectionRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.Collection.CollectionHeroWearCollectionRes.repeatedFields_, null);
};
goog.inherits(proto.PbModel.Collection.CollectionHeroWearCollectionRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Collection.CollectionHeroWearCollectionRes.displayName = 'proto.PbModel.Collection.CollectionHeroWearCollectionRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Collection.CollectionPushChangeInfoRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Collection.CollectionPushChangeInfoRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Collection.CollectionPushChangeInfoRes.displayName = 'proto.PbModel.Collection.CollectionPushChangeInfoRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Collection.CollectionPushHeroWearCollectionChangeInfoRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Collection.CollectionPushHeroWearCollectionChangeInfoRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Collection.CollectionPushHeroWearCollectionChangeInfoRes.displayName = 'proto.PbModel.Collection.CollectionPushHeroWearCollectionChangeInfoRes';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Collection.CollectionInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Collection.CollectionInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Collection.CollectionInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Collection.CollectionInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    collectionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    modelid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    stars: jspb.Message.getFieldWithDefault(msg, 3, 0),
    wearheroid: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Collection.CollectionInfo}
 */
proto.PbModel.Collection.CollectionInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Collection.CollectionInfo;
  return proto.PbModel.Collection.CollectionInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Collection.CollectionInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Collection.CollectionInfo}
 */
proto.PbModel.Collection.CollectionInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollectionid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setModelid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStars(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setWearheroid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Collection.CollectionInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Collection.CollectionInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Collection.CollectionInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Collection.CollectionInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCollectionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getModelid();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getStars();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getWearheroid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string CollectionId = 1;
 * @return {string}
 */
proto.PbModel.Collection.CollectionInfo.prototype.getCollectionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Collection.CollectionInfo} returns this
 */
proto.PbModel.Collection.CollectionInfo.prototype.setCollectionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 ModelId = 2;
 * @return {number}
 */
proto.PbModel.Collection.CollectionInfo.prototype.getModelid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Collection.CollectionInfo} returns this
 */
proto.PbModel.Collection.CollectionInfo.prototype.setModelid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 Stars = 3;
 * @return {number}
 */
proto.PbModel.Collection.CollectionInfo.prototype.getStars = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Collection.CollectionInfo} returns this
 */
proto.PbModel.Collection.CollectionInfo.prototype.setStars = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string WearHeroId = 4;
 * @return {string}
 */
proto.PbModel.Collection.CollectionInfo.prototype.getWearheroid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Collection.CollectionInfo} returns this
 */
proto.PbModel.Collection.CollectionInfo.prototype.setWearheroid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Collection.CollectionHeroWearInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Collection.CollectionHeroWearInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Collection.CollectionHeroWearInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Collection.CollectionHeroWearInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    heroid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    collectionid: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Collection.CollectionHeroWearInfo}
 */
proto.PbModel.Collection.CollectionHeroWearInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Collection.CollectionHeroWearInfo;
  return proto.PbModel.Collection.CollectionHeroWearInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Collection.CollectionHeroWearInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Collection.CollectionHeroWearInfo}
 */
proto.PbModel.Collection.CollectionHeroWearInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHeroid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollectionid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Collection.CollectionHeroWearInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Collection.CollectionHeroWearInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Collection.CollectionHeroWearInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Collection.CollectionHeroWearInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeroid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCollectionid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string HeroId = 1;
 * @return {string}
 */
proto.PbModel.Collection.CollectionHeroWearInfo.prototype.getHeroid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Collection.CollectionHeroWearInfo} returns this
 */
proto.PbModel.Collection.CollectionHeroWearInfo.prototype.setHeroid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string CollectionId = 2;
 * @return {string}
 */
proto.PbModel.Collection.CollectionHeroWearInfo.prototype.getCollectionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Collection.CollectionHeroWearInfo} returns this
 */
proto.PbModel.Collection.CollectionHeroWearInfo.prototype.setCollectionid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Collection.CollectionStarsUpReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Collection.CollectionStarsUpReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Collection.CollectionStarsUpReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Collection.CollectionStarsUpReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    lvcollectionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    usecollectionids: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Collection.CollectionStarsUpReq}
 */
proto.PbModel.Collection.CollectionStarsUpReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Collection.CollectionStarsUpReq;
  return proto.PbModel.Collection.CollectionStarsUpReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Collection.CollectionStarsUpReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Collection.CollectionStarsUpReq}
 */
proto.PbModel.Collection.CollectionStarsUpReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLvcollectionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsecollectionids(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Collection.CollectionStarsUpReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Collection.CollectionStarsUpReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Collection.CollectionStarsUpReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Collection.CollectionStarsUpReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLvcollectionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUsecollectionids();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string LvCollectionId = 1;
 * @return {string}
 */
proto.PbModel.Collection.CollectionStarsUpReq.prototype.getLvcollectionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Collection.CollectionStarsUpReq} returns this
 */
proto.PbModel.Collection.CollectionStarsUpReq.prototype.setLvcollectionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string UseCollectionIds = 2;
 * @return {string}
 */
proto.PbModel.Collection.CollectionStarsUpReq.prototype.getUsecollectionids = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Collection.CollectionStarsUpReq} returns this
 */
proto.PbModel.Collection.CollectionStarsUpReq.prototype.setUsecollectionids = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Collection.CollectionStarsUpRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Collection.CollectionStarsUpRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Collection.CollectionStarsUpRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Collection.CollectionStarsUpRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    info: (f = msg.getInfo()) && proto.PbModel.Collection.CollectionInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Collection.CollectionStarsUpRes}
 */
proto.PbModel.Collection.CollectionStarsUpRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Collection.CollectionStarsUpRes;
  return proto.PbModel.Collection.CollectionStarsUpRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Collection.CollectionStarsUpRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Collection.CollectionStarsUpRes}
 */
proto.PbModel.Collection.CollectionStarsUpRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PbModel.Collection.CollectionInfo;
      reader.readMessage(value,proto.PbModel.Collection.CollectionInfo.deserializeBinaryFromReader);
      msg.setInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Collection.CollectionStarsUpRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Collection.CollectionStarsUpRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Collection.CollectionStarsUpRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Collection.CollectionStarsUpRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.PbModel.Collection.CollectionInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional CollectionInfo Info = 1;
 * @return {?proto.PbModel.Collection.CollectionInfo}
 */
proto.PbModel.Collection.CollectionStarsUpRes.prototype.getInfo = function() {
  return /** @type{?proto.PbModel.Collection.CollectionInfo} */ (
    jspb.Message.getWrapperField(this, proto.PbModel.Collection.CollectionInfo, 1));
};


/**
 * @param {?proto.PbModel.Collection.CollectionInfo|undefined} value
 * @return {!proto.PbModel.Collection.CollectionStarsUpRes} returns this
*/
proto.PbModel.Collection.CollectionStarsUpRes.prototype.setInfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.Collection.CollectionStarsUpRes} returns this
 */
proto.PbModel.Collection.CollectionStarsUpRes.prototype.clearInfo = function() {
  return this.setInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.Collection.CollectionStarsUpRes.prototype.hasInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Collection.CollectionHeroTakeOffCollectionReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Collection.CollectionHeroTakeOffCollectionReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Collection.CollectionHeroTakeOffCollectionReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Collection.CollectionHeroTakeOffCollectionReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    heroid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Collection.CollectionHeroTakeOffCollectionReq}
 */
proto.PbModel.Collection.CollectionHeroTakeOffCollectionReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Collection.CollectionHeroTakeOffCollectionReq;
  return proto.PbModel.Collection.CollectionHeroTakeOffCollectionReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Collection.CollectionHeroTakeOffCollectionReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Collection.CollectionHeroTakeOffCollectionReq}
 */
proto.PbModel.Collection.CollectionHeroTakeOffCollectionReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHeroid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Collection.CollectionHeroTakeOffCollectionReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Collection.CollectionHeroTakeOffCollectionReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Collection.CollectionHeroTakeOffCollectionReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Collection.CollectionHeroTakeOffCollectionReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeroid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string HeroId = 1;
 * @return {string}
 */
proto.PbModel.Collection.CollectionHeroTakeOffCollectionReq.prototype.getHeroid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Collection.CollectionHeroTakeOffCollectionReq} returns this
 */
proto.PbModel.Collection.CollectionHeroTakeOffCollectionReq.prototype.setHeroid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Collection.CollectionHeroTakeOffCollectionRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Collection.CollectionHeroTakeOffCollectionRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Collection.CollectionHeroTakeOffCollectionRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Collection.CollectionHeroTakeOffCollectionRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    info: (f = msg.getInfo()) && proto.PbModel.Collection.CollectionHeroWearInfo.toObject(includeInstance, f),
    collectioninfo: (f = msg.getCollectioninfo()) && proto.PbModel.Collection.CollectionInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Collection.CollectionHeroTakeOffCollectionRes}
 */
proto.PbModel.Collection.CollectionHeroTakeOffCollectionRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Collection.CollectionHeroTakeOffCollectionRes;
  return proto.PbModel.Collection.CollectionHeroTakeOffCollectionRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Collection.CollectionHeroTakeOffCollectionRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Collection.CollectionHeroTakeOffCollectionRes}
 */
proto.PbModel.Collection.CollectionHeroTakeOffCollectionRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PbModel.Collection.CollectionHeroWearInfo;
      reader.readMessage(value,proto.PbModel.Collection.CollectionHeroWearInfo.deserializeBinaryFromReader);
      msg.setInfo(value);
      break;
    case 2:
      var value = new proto.PbModel.Collection.CollectionInfo;
      reader.readMessage(value,proto.PbModel.Collection.CollectionInfo.deserializeBinaryFromReader);
      msg.setCollectioninfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Collection.CollectionHeroTakeOffCollectionRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Collection.CollectionHeroTakeOffCollectionRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Collection.CollectionHeroTakeOffCollectionRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Collection.CollectionHeroTakeOffCollectionRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.PbModel.Collection.CollectionHeroWearInfo.serializeBinaryToWriter
    );
  }
  f = message.getCollectioninfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.PbModel.Collection.CollectionInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional CollectionHeroWearInfo Info = 1;
 * @return {?proto.PbModel.Collection.CollectionHeroWearInfo}
 */
proto.PbModel.Collection.CollectionHeroTakeOffCollectionRes.prototype.getInfo = function() {
  return /** @type{?proto.PbModel.Collection.CollectionHeroWearInfo} */ (
    jspb.Message.getWrapperField(this, proto.PbModel.Collection.CollectionHeroWearInfo, 1));
};


/**
 * @param {?proto.PbModel.Collection.CollectionHeroWearInfo|undefined} value
 * @return {!proto.PbModel.Collection.CollectionHeroTakeOffCollectionRes} returns this
*/
proto.PbModel.Collection.CollectionHeroTakeOffCollectionRes.prototype.setInfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.Collection.CollectionHeroTakeOffCollectionRes} returns this
 */
proto.PbModel.Collection.CollectionHeroTakeOffCollectionRes.prototype.clearInfo = function() {
  return this.setInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.Collection.CollectionHeroTakeOffCollectionRes.prototype.hasInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional CollectionInfo CollectionInfo = 2;
 * @return {?proto.PbModel.Collection.CollectionInfo}
 */
proto.PbModel.Collection.CollectionHeroTakeOffCollectionRes.prototype.getCollectioninfo = function() {
  return /** @type{?proto.PbModel.Collection.CollectionInfo} */ (
    jspb.Message.getWrapperField(this, proto.PbModel.Collection.CollectionInfo, 2));
};


/**
 * @param {?proto.PbModel.Collection.CollectionInfo|undefined} value
 * @return {!proto.PbModel.Collection.CollectionHeroTakeOffCollectionRes} returns this
*/
proto.PbModel.Collection.CollectionHeroTakeOffCollectionRes.prototype.setCollectioninfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.Collection.CollectionHeroTakeOffCollectionRes} returns this
 */
proto.PbModel.Collection.CollectionHeroTakeOffCollectionRes.prototype.clearCollectioninfo = function() {
  return this.setCollectioninfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.Collection.CollectionHeroTakeOffCollectionRes.prototype.hasCollectioninfo = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Collection.CollectionHeroWearCollectionReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Collection.CollectionHeroWearCollectionReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Collection.CollectionHeroWearCollectionReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Collection.CollectionHeroWearCollectionReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    heroid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    collectionid: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Collection.CollectionHeroWearCollectionReq}
 */
proto.PbModel.Collection.CollectionHeroWearCollectionReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Collection.CollectionHeroWearCollectionReq;
  return proto.PbModel.Collection.CollectionHeroWearCollectionReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Collection.CollectionHeroWearCollectionReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Collection.CollectionHeroWearCollectionReq}
 */
proto.PbModel.Collection.CollectionHeroWearCollectionReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHeroid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollectionid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Collection.CollectionHeroWearCollectionReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Collection.CollectionHeroWearCollectionReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Collection.CollectionHeroWearCollectionReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Collection.CollectionHeroWearCollectionReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeroid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCollectionid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string HeroId = 1;
 * @return {string}
 */
proto.PbModel.Collection.CollectionHeroWearCollectionReq.prototype.getHeroid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Collection.CollectionHeroWearCollectionReq} returns this
 */
proto.PbModel.Collection.CollectionHeroWearCollectionReq.prototype.setHeroid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string CollectionId = 2;
 * @return {string}
 */
proto.PbModel.Collection.CollectionHeroWearCollectionReq.prototype.getCollectionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Collection.CollectionHeroWearCollectionReq} returns this
 */
proto.PbModel.Collection.CollectionHeroWearCollectionReq.prototype.setCollectionid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.Collection.CollectionHeroWearCollectionRes.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Collection.CollectionHeroWearCollectionRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Collection.CollectionHeroWearCollectionRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Collection.CollectionHeroWearCollectionRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Collection.CollectionHeroWearCollectionRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    changeinfosList: jspb.Message.toObjectList(msg.getChangeinfosList(),
    proto.PbModel.Collection.CollectionHeroWearInfo.toObject, includeInstance),
    collectioninfosMap: (f = msg.getCollectioninfosMap()) ? f.toObject(includeInstance, proto.PbModel.Collection.CollectionInfo.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Collection.CollectionHeroWearCollectionRes}
 */
proto.PbModel.Collection.CollectionHeroWearCollectionRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Collection.CollectionHeroWearCollectionRes;
  return proto.PbModel.Collection.CollectionHeroWearCollectionRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Collection.CollectionHeroWearCollectionRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Collection.CollectionHeroWearCollectionRes}
 */
proto.PbModel.Collection.CollectionHeroWearCollectionRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PbModel.Collection.CollectionHeroWearInfo;
      reader.readMessage(value,proto.PbModel.Collection.CollectionHeroWearInfo.deserializeBinaryFromReader);
      msg.addChangeinfos(value);
      break;
    case 2:
      var value = msg.getCollectioninfosMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.PbModel.Collection.CollectionInfo.deserializeBinaryFromReader, "", new proto.PbModel.Collection.CollectionInfo());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Collection.CollectionHeroWearCollectionRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Collection.CollectionHeroWearCollectionRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Collection.CollectionHeroWearCollectionRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Collection.CollectionHeroWearCollectionRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChangeinfosList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.PbModel.Collection.CollectionHeroWearInfo.serializeBinaryToWriter
    );
  }
  f = message.getCollectioninfosMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.PbModel.Collection.CollectionInfo.serializeBinaryToWriter);
  }
};


/**
 * repeated CollectionHeroWearInfo ChangeInfos = 1;
 * @return {!Array<!proto.PbModel.Collection.CollectionHeroWearInfo>}
 */
proto.PbModel.Collection.CollectionHeroWearCollectionRes.prototype.getChangeinfosList = function() {
  return /** @type{!Array<!proto.PbModel.Collection.CollectionHeroWearInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.Collection.CollectionHeroWearInfo, 1));
};


/**
 * @param {!Array<!proto.PbModel.Collection.CollectionHeroWearInfo>} value
 * @return {!proto.PbModel.Collection.CollectionHeroWearCollectionRes} returns this
*/
proto.PbModel.Collection.CollectionHeroWearCollectionRes.prototype.setChangeinfosList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.PbModel.Collection.CollectionHeroWearInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.Collection.CollectionHeroWearInfo}
 */
proto.PbModel.Collection.CollectionHeroWearCollectionRes.prototype.addChangeinfos = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.PbModel.Collection.CollectionHeroWearInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.Collection.CollectionHeroWearCollectionRes} returns this
 */
proto.PbModel.Collection.CollectionHeroWearCollectionRes.prototype.clearChangeinfosList = function() {
  return this.setChangeinfosList([]);
};


/**
 * map<string, CollectionInfo> CollectionInfos = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.PbModel.Collection.CollectionInfo>}
 */
proto.PbModel.Collection.CollectionHeroWearCollectionRes.prototype.getCollectioninfosMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.PbModel.Collection.CollectionInfo>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      proto.PbModel.Collection.CollectionInfo));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.PbModel.Collection.CollectionHeroWearCollectionRes} returns this
 */
proto.PbModel.Collection.CollectionHeroWearCollectionRes.prototype.clearCollectioninfosMap = function() {
  this.getCollectioninfosMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Collection.CollectionPushChangeInfoRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Collection.CollectionPushChangeInfoRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Collection.CollectionPushChangeInfoRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Collection.CollectionPushChangeInfoRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    info: (f = msg.getInfo()) && proto.PbModel.Collection.CollectionInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Collection.CollectionPushChangeInfoRes}
 */
proto.PbModel.Collection.CollectionPushChangeInfoRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Collection.CollectionPushChangeInfoRes;
  return proto.PbModel.Collection.CollectionPushChangeInfoRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Collection.CollectionPushChangeInfoRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Collection.CollectionPushChangeInfoRes}
 */
proto.PbModel.Collection.CollectionPushChangeInfoRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PbModel.Collection.CollectionInfo;
      reader.readMessage(value,proto.PbModel.Collection.CollectionInfo.deserializeBinaryFromReader);
      msg.setInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Collection.CollectionPushChangeInfoRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Collection.CollectionPushChangeInfoRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Collection.CollectionPushChangeInfoRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Collection.CollectionPushChangeInfoRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.PbModel.Collection.CollectionInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional CollectionInfo Info = 1;
 * @return {?proto.PbModel.Collection.CollectionInfo}
 */
proto.PbModel.Collection.CollectionPushChangeInfoRes.prototype.getInfo = function() {
  return /** @type{?proto.PbModel.Collection.CollectionInfo} */ (
    jspb.Message.getWrapperField(this, proto.PbModel.Collection.CollectionInfo, 1));
};


/**
 * @param {?proto.PbModel.Collection.CollectionInfo|undefined} value
 * @return {!proto.PbModel.Collection.CollectionPushChangeInfoRes} returns this
*/
proto.PbModel.Collection.CollectionPushChangeInfoRes.prototype.setInfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.Collection.CollectionPushChangeInfoRes} returns this
 */
proto.PbModel.Collection.CollectionPushChangeInfoRes.prototype.clearInfo = function() {
  return this.setInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.Collection.CollectionPushChangeInfoRes.prototype.hasInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Collection.CollectionPushHeroWearCollectionChangeInfoRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Collection.CollectionPushHeroWearCollectionChangeInfoRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Collection.CollectionPushHeroWearCollectionChangeInfoRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Collection.CollectionPushHeroWearCollectionChangeInfoRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    info: (f = msg.getInfo()) && proto.PbModel.Collection.CollectionHeroWearInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Collection.CollectionPushHeroWearCollectionChangeInfoRes}
 */
proto.PbModel.Collection.CollectionPushHeroWearCollectionChangeInfoRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Collection.CollectionPushHeroWearCollectionChangeInfoRes;
  return proto.PbModel.Collection.CollectionPushHeroWearCollectionChangeInfoRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Collection.CollectionPushHeroWearCollectionChangeInfoRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Collection.CollectionPushHeroWearCollectionChangeInfoRes}
 */
proto.PbModel.Collection.CollectionPushHeroWearCollectionChangeInfoRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PbModel.Collection.CollectionHeroWearInfo;
      reader.readMessage(value,proto.PbModel.Collection.CollectionHeroWearInfo.deserializeBinaryFromReader);
      msg.setInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Collection.CollectionPushHeroWearCollectionChangeInfoRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Collection.CollectionPushHeroWearCollectionChangeInfoRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Collection.CollectionPushHeroWearCollectionChangeInfoRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Collection.CollectionPushHeroWearCollectionChangeInfoRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.PbModel.Collection.CollectionHeroWearInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional CollectionHeroWearInfo Info = 1;
 * @return {?proto.PbModel.Collection.CollectionHeroWearInfo}
 */
proto.PbModel.Collection.CollectionPushHeroWearCollectionChangeInfoRes.prototype.getInfo = function() {
  return /** @type{?proto.PbModel.Collection.CollectionHeroWearInfo} */ (
    jspb.Message.getWrapperField(this, proto.PbModel.Collection.CollectionHeroWearInfo, 1));
};


/**
 * @param {?proto.PbModel.Collection.CollectionHeroWearInfo|undefined} value
 * @return {!proto.PbModel.Collection.CollectionPushHeroWearCollectionChangeInfoRes} returns this
*/
proto.PbModel.Collection.CollectionPushHeroWearCollectionChangeInfoRes.prototype.setInfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.Collection.CollectionPushHeroWearCollectionChangeInfoRes} returns this
 */
proto.PbModel.Collection.CollectionPushHeroWearCollectionChangeInfoRes.prototype.clearInfo = function() {
  return this.setInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.Collection.CollectionPushHeroWearCollectionChangeInfoRes.prototype.hasInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


goog.object.extend(exports, proto.PbModel.Collection);
