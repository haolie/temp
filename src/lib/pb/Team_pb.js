// source: Team.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.PbModel.Team.Team', null, global);
goog.exportSymbol('proto.PbModel.Team.TeamGetAllTeamInfoReq', null, global);
goog.exportSymbol('proto.PbModel.Team.TeamGetAllTeamInfoRes', null, global);
goog.exportSymbol('proto.PbModel.Team.TeamGetTeamHeroIdsReq', null, global);
goog.exportSymbol('proto.PbModel.Team.TeamGetTeamHeroIdsRes', null, global);
goog.exportSymbol('proto.PbModel.Team.TeamGetTeamInfoReq', null, global);
goog.exportSymbol('proto.PbModel.Team.TeamGetTeamInfoRes', null, global);
goog.exportSymbol('proto.PbModel.Team.TeamHeroDetailInfoItem', null, global);
goog.exportSymbol('proto.PbModel.Team.TeamHeroItem', null, global);
goog.exportSymbol('proto.PbModel.Team.TeamInfoHandlerReq', null, global);
goog.exportSymbol('proto.PbModel.Team.TeamModuleTeamInfo', null, global);
goog.exportSymbol('proto.PbModel.Team.TeamPlanAddPlanReq', null, global);
goog.exportSymbol('proto.PbModel.Team.TeamPlanAddPlanRes', null, global);
goog.exportSymbol('proto.PbModel.Team.TeamPlanChangeDefautTeamReq', null, global);
goog.exportSymbol('proto.PbModel.Team.TeamPlanChangeDefautTeamRes', null, global);
goog.exportSymbol('proto.PbModel.Team.TeamPlanDelTeamPlanReq', null, global);
goog.exportSymbol('proto.PbModel.Team.TeamPlanDelTeamPlanRes', null, global);
goog.exportSymbol('proto.PbModel.Team.TeamPlanGetInfoReq', null, global);
goog.exportSymbol('proto.PbModel.Team.TeamPlanGetInfoRes', null, global);
goog.exportSymbol('proto.PbModel.Team.TeamPlanInfo', null, global);
goog.exportSymbol('proto.PbModel.Team.TeamPlanUpdateNameReq', null, global);
goog.exportSymbol('proto.PbModel.Team.TeamPlanUpdateNameRes', null, global);
goog.exportSymbol('proto.PbModel.Team.TeamPlanUpdateTeamPlanReq', null, global);
goog.exportSymbol('proto.PbModel.Team.TeamPlanUpdateTeamPlanRes', null, global);
goog.exportSymbol('proto.PbModel.Team.TeamPushTeamPlanRes', null, global);
goog.exportSymbol('proto.PbModel.Team.TeamRemainHpInfo', null, global);
goog.exportSymbol('proto.PbModel.Team.TeamRemoveHeroReq', null, global);
goog.exportSymbol('proto.PbModel.Team.TeamRemoveHeroRes', null, global);
goog.exportSymbol('proto.PbModel.Team.TeamUpdateTeamInfoReq', null, global);
goog.exportSymbol('proto.PbModel.Team.TeamUpdateTeamInfoRes', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Team.TeamGetAllTeamInfoReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Team.TeamGetAllTeamInfoReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Team.TeamGetAllTeamInfoReq.displayName = 'proto.PbModel.Team.TeamGetAllTeamInfoReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Team.TeamGetAllTeamInfoRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.Team.TeamGetAllTeamInfoRes.repeatedFields_, null);
};
goog.inherits(proto.PbModel.Team.TeamGetAllTeamInfoRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Team.TeamGetAllTeamInfoRes.displayName = 'proto.PbModel.Team.TeamGetAllTeamInfoRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Team.TeamGetTeamHeroIdsReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Team.TeamGetTeamHeroIdsReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Team.TeamGetTeamHeroIdsReq.displayName = 'proto.PbModel.Team.TeamGetTeamHeroIdsReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Team.TeamGetTeamHeroIdsRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.Team.TeamGetTeamHeroIdsRes.repeatedFields_, null);
};
goog.inherits(proto.PbModel.Team.TeamGetTeamHeroIdsRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Team.TeamGetTeamHeroIdsRes.displayName = 'proto.PbModel.Team.TeamGetTeamHeroIdsRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Team.TeamGetTeamInfoReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Team.TeamGetTeamInfoReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Team.TeamGetTeamInfoReq.displayName = 'proto.PbModel.Team.TeamGetTeamInfoReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Team.TeamGetTeamInfoRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.Team.TeamGetTeamInfoRes.repeatedFields_, null);
};
goog.inherits(proto.PbModel.Team.TeamGetTeamInfoRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Team.TeamGetTeamInfoRes.displayName = 'proto.PbModel.Team.TeamGetTeamInfoRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Team.TeamModuleTeamInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.Team.TeamModuleTeamInfo.repeatedFields_, null);
};
goog.inherits(proto.PbModel.Team.TeamModuleTeamInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Team.TeamModuleTeamInfo.displayName = 'proto.PbModel.Team.TeamModuleTeamInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Team.Team = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.Team.Team.repeatedFields_, null);
};
goog.inherits(proto.PbModel.Team.Team, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Team.Team.displayName = 'proto.PbModel.Team.Team';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Team.TeamHeroItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Team.TeamHeroItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Team.TeamHeroItem.displayName = 'proto.PbModel.Team.TeamHeroItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Team.TeamHeroDetailInfoItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.Team.TeamHeroDetailInfoItem.repeatedFields_, null);
};
goog.inherits(proto.PbModel.Team.TeamHeroDetailInfoItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Team.TeamHeroDetailInfoItem.displayName = 'proto.PbModel.Team.TeamHeroDetailInfoItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Team.TeamPlanInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.Team.TeamPlanInfo.repeatedFields_, null);
};
goog.inherits(proto.PbModel.Team.TeamPlanInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Team.TeamPlanInfo.displayName = 'proto.PbModel.Team.TeamPlanInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Team.TeamRemainHpInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Team.TeamRemainHpInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Team.TeamRemainHpInfo.displayName = 'proto.PbModel.Team.TeamRemainHpInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Team.TeamPlanAddPlanReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.Team.TeamPlanAddPlanReq.repeatedFields_, null);
};
goog.inherits(proto.PbModel.Team.TeamPlanAddPlanReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Team.TeamPlanAddPlanReq.displayName = 'proto.PbModel.Team.TeamPlanAddPlanReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Team.TeamPlanAddPlanRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.Team.TeamPlanAddPlanRes.repeatedFields_, null);
};
goog.inherits(proto.PbModel.Team.TeamPlanAddPlanRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Team.TeamPlanAddPlanRes.displayName = 'proto.PbModel.Team.TeamPlanAddPlanRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Team.TeamPlanChangeDefautTeamReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Team.TeamPlanChangeDefautTeamReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Team.TeamPlanChangeDefautTeamReq.displayName = 'proto.PbModel.Team.TeamPlanChangeDefautTeamReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Team.TeamPlanChangeDefautTeamRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.Team.TeamPlanChangeDefautTeamRes.repeatedFields_, null);
};
goog.inherits(proto.PbModel.Team.TeamPlanChangeDefautTeamRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Team.TeamPlanChangeDefautTeamRes.displayName = 'proto.PbModel.Team.TeamPlanChangeDefautTeamRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Team.TeamPlanDelTeamPlanReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Team.TeamPlanDelTeamPlanReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Team.TeamPlanDelTeamPlanReq.displayName = 'proto.PbModel.Team.TeamPlanDelTeamPlanReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Team.TeamPlanDelTeamPlanRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.Team.TeamPlanDelTeamPlanRes.repeatedFields_, null);
};
goog.inherits(proto.PbModel.Team.TeamPlanDelTeamPlanRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Team.TeamPlanDelTeamPlanRes.displayName = 'proto.PbModel.Team.TeamPlanDelTeamPlanRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Team.TeamPlanGetInfoReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Team.TeamPlanGetInfoReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Team.TeamPlanGetInfoReq.displayName = 'proto.PbModel.Team.TeamPlanGetInfoReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Team.TeamPlanGetInfoRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.Team.TeamPlanGetInfoRes.repeatedFields_, null);
};
goog.inherits(proto.PbModel.Team.TeamPlanGetInfoRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Team.TeamPlanGetInfoRes.displayName = 'proto.PbModel.Team.TeamPlanGetInfoRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Team.TeamPlanUpdateNameReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Team.TeamPlanUpdateNameReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Team.TeamPlanUpdateNameReq.displayName = 'proto.PbModel.Team.TeamPlanUpdateNameReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Team.TeamPlanUpdateNameRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.Team.TeamPlanUpdateNameRes.repeatedFields_, null);
};
goog.inherits(proto.PbModel.Team.TeamPlanUpdateNameRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Team.TeamPlanUpdateNameRes.displayName = 'proto.PbModel.Team.TeamPlanUpdateNameRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Team.TeamPlanUpdateTeamPlanReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.Team.TeamPlanUpdateTeamPlanReq.repeatedFields_, null);
};
goog.inherits(proto.PbModel.Team.TeamPlanUpdateTeamPlanReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Team.TeamPlanUpdateTeamPlanReq.displayName = 'proto.PbModel.Team.TeamPlanUpdateTeamPlanReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Team.TeamPlanUpdateTeamPlanRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.Team.TeamPlanUpdateTeamPlanRes.repeatedFields_, null);
};
goog.inherits(proto.PbModel.Team.TeamPlanUpdateTeamPlanRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Team.TeamPlanUpdateTeamPlanRes.displayName = 'proto.PbModel.Team.TeamPlanUpdateTeamPlanRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Team.TeamRemoveHeroReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Team.TeamRemoveHeroReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Team.TeamRemoveHeroReq.displayName = 'proto.PbModel.Team.TeamRemoveHeroReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Team.TeamRemoveHeroRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.Team.TeamRemoveHeroRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Team.TeamRemoveHeroRes.displayName = 'proto.PbModel.Team.TeamRemoveHeroRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Team.TeamUpdateTeamInfoReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.Team.TeamUpdateTeamInfoReq.repeatedFields_, null);
};
goog.inherits(proto.PbModel.Team.TeamUpdateTeamInfoReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Team.TeamUpdateTeamInfoReq.displayName = 'proto.PbModel.Team.TeamUpdateTeamInfoReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Team.TeamUpdateTeamInfoRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.Team.TeamUpdateTeamInfoRes.repeatedFields_, null);
};
goog.inherits(proto.PbModel.Team.TeamUpdateTeamInfoRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Team.TeamUpdateTeamInfoRes.displayName = 'proto.PbModel.Team.TeamUpdateTeamInfoRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Team.TeamPushTeamPlanRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.Team.TeamPushTeamPlanRes.repeatedFields_, null);
};
goog.inherits(proto.PbModel.Team.TeamPushTeamPlanRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Team.TeamPushTeamPlanRes.displayName = 'proto.PbModel.Team.TeamPushTeamPlanRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.Team.TeamInfoHandlerReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.Team.TeamInfoHandlerReq.repeatedFields_, null);
};
goog.inherits(proto.PbModel.Team.TeamInfoHandlerReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.Team.TeamInfoHandlerReq.displayName = 'proto.PbModel.Team.TeamInfoHandlerReq';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Team.TeamGetAllTeamInfoReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Team.TeamGetAllTeamInfoReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Team.TeamGetAllTeamInfoReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Team.TeamGetAllTeamInfoReq.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Team.TeamGetAllTeamInfoReq}
 */
proto.PbModel.Team.TeamGetAllTeamInfoReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Team.TeamGetAllTeamInfoReq;
  return proto.PbModel.Team.TeamGetAllTeamInfoReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Team.TeamGetAllTeamInfoReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Team.TeamGetAllTeamInfoReq}
 */
proto.PbModel.Team.TeamGetAllTeamInfoReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Team.TeamGetAllTeamInfoReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Team.TeamGetAllTeamInfoReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Team.TeamGetAllTeamInfoReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Team.TeamGetAllTeamInfoReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.Team.TeamGetAllTeamInfoRes.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Team.TeamGetAllTeamInfoRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Team.TeamGetAllTeamInfoRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Team.TeamGetAllTeamInfoRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Team.TeamGetAllTeamInfoRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    moduleteaminfolistList: jspb.Message.toObjectList(msg.getModuleteaminfolistList(),
    proto.PbModel.Team.TeamModuleTeamInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Team.TeamGetAllTeamInfoRes}
 */
proto.PbModel.Team.TeamGetAllTeamInfoRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Team.TeamGetAllTeamInfoRes;
  return proto.PbModel.Team.TeamGetAllTeamInfoRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Team.TeamGetAllTeamInfoRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Team.TeamGetAllTeamInfoRes}
 */
proto.PbModel.Team.TeamGetAllTeamInfoRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PbModel.Team.TeamModuleTeamInfo;
      reader.readMessage(value,proto.PbModel.Team.TeamModuleTeamInfo.deserializeBinaryFromReader);
      msg.addModuleteaminfolist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Team.TeamGetAllTeamInfoRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Team.TeamGetAllTeamInfoRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Team.TeamGetAllTeamInfoRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Team.TeamGetAllTeamInfoRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getModuleteaminfolistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.PbModel.Team.TeamModuleTeamInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated TeamModuleTeamInfo ModuleTeamInfoList = 1;
 * @return {!Array<!proto.PbModel.Team.TeamModuleTeamInfo>}
 */
proto.PbModel.Team.TeamGetAllTeamInfoRes.prototype.getModuleteaminfolistList = function() {
  return /** @type{!Array<!proto.PbModel.Team.TeamModuleTeamInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.Team.TeamModuleTeamInfo, 1));
};


/**
 * @param {!Array<!proto.PbModel.Team.TeamModuleTeamInfo>} value
 * @return {!proto.PbModel.Team.TeamGetAllTeamInfoRes} returns this
*/
proto.PbModel.Team.TeamGetAllTeamInfoRes.prototype.setModuleteaminfolistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.PbModel.Team.TeamModuleTeamInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.Team.TeamModuleTeamInfo}
 */
proto.PbModel.Team.TeamGetAllTeamInfoRes.prototype.addModuleteaminfolist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.PbModel.Team.TeamModuleTeamInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.Team.TeamGetAllTeamInfoRes} returns this
 */
proto.PbModel.Team.TeamGetAllTeamInfoRes.prototype.clearModuleteaminfolistList = function() {
  return this.setModuleteaminfolistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Team.TeamGetTeamHeroIdsReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Team.TeamGetTeamHeroIdsReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Team.TeamGetTeamHeroIdsReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Team.TeamGetTeamHeroIdsReq.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Team.TeamGetTeamHeroIdsReq}
 */
proto.PbModel.Team.TeamGetTeamHeroIdsReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Team.TeamGetTeamHeroIdsReq;
  return proto.PbModel.Team.TeamGetTeamHeroIdsReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Team.TeamGetTeamHeroIdsReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Team.TeamGetTeamHeroIdsReq}
 */
proto.PbModel.Team.TeamGetTeamHeroIdsReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Team.TeamGetTeamHeroIdsReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Team.TeamGetTeamHeroIdsReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Team.TeamGetTeamHeroIdsReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Team.TeamGetTeamHeroIdsReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.Team.TeamGetTeamHeroIdsRes.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Team.TeamGetTeamHeroIdsRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Team.TeamGetTeamHeroIdsRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Team.TeamGetTeamHeroIdsRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Team.TeamGetTeamHeroIdsRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    herosList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Team.TeamGetTeamHeroIdsRes}
 */
proto.PbModel.Team.TeamGetTeamHeroIdsRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Team.TeamGetTeamHeroIdsRes;
  return proto.PbModel.Team.TeamGetTeamHeroIdsRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Team.TeamGetTeamHeroIdsRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Team.TeamGetTeamHeroIdsRes}
 */
proto.PbModel.Team.TeamGetTeamHeroIdsRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addHeros(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Team.TeamGetTeamHeroIdsRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Team.TeamGetTeamHeroIdsRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Team.TeamGetTeamHeroIdsRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Team.TeamGetTeamHeroIdsRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHerosList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string Heros = 1;
 * @return {!Array<string>}
 */
proto.PbModel.Team.TeamGetTeamHeroIdsRes.prototype.getHerosList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.PbModel.Team.TeamGetTeamHeroIdsRes} returns this
 */
proto.PbModel.Team.TeamGetTeamHeroIdsRes.prototype.setHerosList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.PbModel.Team.TeamGetTeamHeroIdsRes} returns this
 */
proto.PbModel.Team.TeamGetTeamHeroIdsRes.prototype.addHeros = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.Team.TeamGetTeamHeroIdsRes} returns this
 */
proto.PbModel.Team.TeamGetTeamHeroIdsRes.prototype.clearHerosList = function() {
  return this.setHerosList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Team.TeamGetTeamInfoReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Team.TeamGetTeamInfoReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Team.TeamGetTeamInfoReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Team.TeamGetTeamInfoReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    submoduleid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    isneedtargeteaminfo: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    targetsubmodelid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    definestr: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Team.TeamGetTeamInfoReq}
 */
proto.PbModel.Team.TeamGetTeamInfoReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Team.TeamGetTeamInfoReq;
  return proto.PbModel.Team.TeamGetTeamInfoReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Team.TeamGetTeamInfoReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Team.TeamGetTeamInfoReq}
 */
proto.PbModel.Team.TeamGetTeamInfoReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSubmoduleid(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsneedtargeteaminfo(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTargetsubmodelid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDefinestr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Team.TeamGetTeamInfoReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Team.TeamGetTeamInfoReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Team.TeamGetTeamInfoReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Team.TeamGetTeamInfoReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubmoduleid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getIsneedtargeteaminfo();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getTargetsubmodelid();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getDefinestr();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional int32 SubModuleId = 1;
 * @return {number}
 */
proto.PbModel.Team.TeamGetTeamInfoReq.prototype.getSubmoduleid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Team.TeamGetTeamInfoReq} returns this
 */
proto.PbModel.Team.TeamGetTeamInfoReq.prototype.setSubmoduleid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool IsNeedTargeTeamInfo = 2;
 * @return {boolean}
 */
proto.PbModel.Team.TeamGetTeamInfoReq.prototype.getIsneedtargeteaminfo = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PbModel.Team.TeamGetTeamInfoReq} returns this
 */
proto.PbModel.Team.TeamGetTeamInfoReq.prototype.setIsneedtargeteaminfo = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional int32 TargetSubModelId = 3;
 * @return {number}
 */
proto.PbModel.Team.TeamGetTeamInfoReq.prototype.getTargetsubmodelid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Team.TeamGetTeamInfoReq} returns this
 */
proto.PbModel.Team.TeamGetTeamInfoReq.prototype.setTargetsubmodelid = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string DefineStr = 4;
 * @return {string}
 */
proto.PbModel.Team.TeamGetTeamInfoReq.prototype.getDefinestr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Team.TeamGetTeamInfoReq} returns this
 */
proto.PbModel.Team.TeamGetTeamInfoReq.prototype.setDefinestr = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.Team.TeamGetTeamInfoRes.repeatedFields_ = [1,2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Team.TeamGetTeamInfoRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Team.TeamGetTeamInfoRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Team.TeamGetTeamInfoRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Team.TeamGetTeamInfoRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    ownteaminfoList: jspb.Message.toObjectList(msg.getOwnteaminfoList(),
    proto.PbModel.Team.Team.toObject, includeInstance),
    ownherodetailinfolistList: jspb.Message.toObjectList(msg.getOwnherodetailinfolistList(),
    proto.PbModel.Team.TeamRemainHpInfo.toObject, includeInstance),
    targetteaminfoList: jspb.Message.toObjectList(msg.getTargetteaminfoList(),
    proto.PbModel.Team.Team.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Team.TeamGetTeamInfoRes}
 */
proto.PbModel.Team.TeamGetTeamInfoRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Team.TeamGetTeamInfoRes;
  return proto.PbModel.Team.TeamGetTeamInfoRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Team.TeamGetTeamInfoRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Team.TeamGetTeamInfoRes}
 */
proto.PbModel.Team.TeamGetTeamInfoRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PbModel.Team.Team;
      reader.readMessage(value,proto.PbModel.Team.Team.deserializeBinaryFromReader);
      msg.addOwnteaminfo(value);
      break;
    case 2:
      var value = new proto.PbModel.Team.TeamRemainHpInfo;
      reader.readMessage(value,proto.PbModel.Team.TeamRemainHpInfo.deserializeBinaryFromReader);
      msg.addOwnherodetailinfolist(value);
      break;
    case 3:
      var value = new proto.PbModel.Team.Team;
      reader.readMessage(value,proto.PbModel.Team.Team.deserializeBinaryFromReader);
      msg.addTargetteaminfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Team.TeamGetTeamInfoRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Team.TeamGetTeamInfoRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Team.TeamGetTeamInfoRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Team.TeamGetTeamInfoRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOwnteaminfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.PbModel.Team.Team.serializeBinaryToWriter
    );
  }
  f = message.getOwnherodetailinfolistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.PbModel.Team.TeamRemainHpInfo.serializeBinaryToWriter
    );
  }
  f = message.getTargetteaminfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.PbModel.Team.Team.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Team OwnTeamInfo = 1;
 * @return {!Array<!proto.PbModel.Team.Team>}
 */
proto.PbModel.Team.TeamGetTeamInfoRes.prototype.getOwnteaminfoList = function() {
  return /** @type{!Array<!proto.PbModel.Team.Team>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.Team.Team, 1));
};


/**
 * @param {!Array<!proto.PbModel.Team.Team>} value
 * @return {!proto.PbModel.Team.TeamGetTeamInfoRes} returns this
*/
proto.PbModel.Team.TeamGetTeamInfoRes.prototype.setOwnteaminfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.PbModel.Team.Team=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.Team.Team}
 */
proto.PbModel.Team.TeamGetTeamInfoRes.prototype.addOwnteaminfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.PbModel.Team.Team, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.Team.TeamGetTeamInfoRes} returns this
 */
proto.PbModel.Team.TeamGetTeamInfoRes.prototype.clearOwnteaminfoList = function() {
  return this.setOwnteaminfoList([]);
};


/**
 * repeated TeamRemainHpInfo OwnHeroDetailInfoList = 2;
 * @return {!Array<!proto.PbModel.Team.TeamRemainHpInfo>}
 */
proto.PbModel.Team.TeamGetTeamInfoRes.prototype.getOwnherodetailinfolistList = function() {
  return /** @type{!Array<!proto.PbModel.Team.TeamRemainHpInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.Team.TeamRemainHpInfo, 2));
};


/**
 * @param {!Array<!proto.PbModel.Team.TeamRemainHpInfo>} value
 * @return {!proto.PbModel.Team.TeamGetTeamInfoRes} returns this
*/
proto.PbModel.Team.TeamGetTeamInfoRes.prototype.setOwnherodetailinfolistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.PbModel.Team.TeamRemainHpInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.Team.TeamRemainHpInfo}
 */
proto.PbModel.Team.TeamGetTeamInfoRes.prototype.addOwnherodetailinfolist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.PbModel.Team.TeamRemainHpInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.Team.TeamGetTeamInfoRes} returns this
 */
proto.PbModel.Team.TeamGetTeamInfoRes.prototype.clearOwnherodetailinfolistList = function() {
  return this.setOwnherodetailinfolistList([]);
};


/**
 * repeated Team TargetTeamInfo = 3;
 * @return {!Array<!proto.PbModel.Team.Team>}
 */
proto.PbModel.Team.TeamGetTeamInfoRes.prototype.getTargetteaminfoList = function() {
  return /** @type{!Array<!proto.PbModel.Team.Team>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.Team.Team, 3));
};


/**
 * @param {!Array<!proto.PbModel.Team.Team>} value
 * @return {!proto.PbModel.Team.TeamGetTeamInfoRes} returns this
*/
proto.PbModel.Team.TeamGetTeamInfoRes.prototype.setTargetteaminfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.PbModel.Team.Team=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.Team.Team}
 */
proto.PbModel.Team.TeamGetTeamInfoRes.prototype.addTargetteaminfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.PbModel.Team.Team, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.Team.TeamGetTeamInfoRes} returns this
 */
proto.PbModel.Team.TeamGetTeamInfoRes.prototype.clearTargetteaminfoList = function() {
  return this.setTargetteaminfoList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.Team.TeamModuleTeamInfo.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Team.TeamModuleTeamInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Team.TeamModuleTeamInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Team.TeamModuleTeamInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Team.TeamModuleTeamInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    submoduleid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    teaminfoList: jspb.Message.toObjectList(msg.getTeaminfoList(),
    proto.PbModel.Team.Team.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Team.TeamModuleTeamInfo}
 */
proto.PbModel.Team.TeamModuleTeamInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Team.TeamModuleTeamInfo;
  return proto.PbModel.Team.TeamModuleTeamInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Team.TeamModuleTeamInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Team.TeamModuleTeamInfo}
 */
proto.PbModel.Team.TeamModuleTeamInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSubmoduleid(value);
      break;
    case 2:
      var value = new proto.PbModel.Team.Team;
      reader.readMessage(value,proto.PbModel.Team.Team.deserializeBinaryFromReader);
      msg.addTeaminfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Team.TeamModuleTeamInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Team.TeamModuleTeamInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Team.TeamModuleTeamInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Team.TeamModuleTeamInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubmoduleid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTeaminfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.PbModel.Team.Team.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 SubModuleId = 1;
 * @return {number}
 */
proto.PbModel.Team.TeamModuleTeamInfo.prototype.getSubmoduleid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Team.TeamModuleTeamInfo} returns this
 */
proto.PbModel.Team.TeamModuleTeamInfo.prototype.setSubmoduleid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated Team TeamInfo = 2;
 * @return {!Array<!proto.PbModel.Team.Team>}
 */
proto.PbModel.Team.TeamModuleTeamInfo.prototype.getTeaminfoList = function() {
  return /** @type{!Array<!proto.PbModel.Team.Team>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.Team.Team, 2));
};


/**
 * @param {!Array<!proto.PbModel.Team.Team>} value
 * @return {!proto.PbModel.Team.TeamModuleTeamInfo} returns this
*/
proto.PbModel.Team.TeamModuleTeamInfo.prototype.setTeaminfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.PbModel.Team.Team=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.Team.Team}
 */
proto.PbModel.Team.TeamModuleTeamInfo.prototype.addTeaminfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.PbModel.Team.Team, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.Team.TeamModuleTeamInfo} returns this
 */
proto.PbModel.Team.TeamModuleTeamInfo.prototype.clearTeaminfoList = function() {
  return this.setTeaminfoList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.Team.Team.repeatedFields_ = [4,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Team.Team.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Team.Team.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Team.Team} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Team.Team.toObject = function(includeInstance, msg) {
  var f, obj = {
    teamid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    fap: jspb.Message.getFieldWithDefault(msg, 2, 0),
    state: jspb.Message.getFieldWithDefault(msg, 3, 0),
    herolistList: jspb.Message.toObjectList(msg.getHerolistList(),
    proto.PbModel.Team.TeamHeroItem.toObject, includeInstance),
    releaseskillsmanual: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    herodetailinfolistList: jspb.Message.toObjectList(msg.getHerodetailinfolistList(),
    proto.PbModel.Team.TeamHeroDetailInfoItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Team.Team}
 */
proto.PbModel.Team.Team.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Team.Team;
  return proto.PbModel.Team.Team.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Team.Team} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Team.Team}
 */
proto.PbModel.Team.Team.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTeamid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFap(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setState(value);
      break;
    case 4:
      var value = new proto.PbModel.Team.TeamHeroItem;
      reader.readMessage(value,proto.PbModel.Team.TeamHeroItem.deserializeBinaryFromReader);
      msg.addHerolist(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReleaseskillsmanual(value);
      break;
    case 6:
      var value = new proto.PbModel.Team.TeamHeroDetailInfoItem;
      reader.readMessage(value,proto.PbModel.Team.TeamHeroDetailInfoItem.deserializeBinaryFromReader);
      msg.addHerodetailinfolist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Team.Team.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Team.Team.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Team.Team} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Team.Team.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTeamid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getFap();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getState();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getHerolistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.PbModel.Team.TeamHeroItem.serializeBinaryToWriter
    );
  }
  f = message.getReleaseskillsmanual();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getHerodetailinfolistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.PbModel.Team.TeamHeroDetailInfoItem.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 TeamId = 1;
 * @return {number}
 */
proto.PbModel.Team.Team.prototype.getTeamid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Team.Team} returns this
 */
proto.PbModel.Team.Team.prototype.setTeamid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 Fap = 2;
 * @return {number}
 */
proto.PbModel.Team.Team.prototype.getFap = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Team.Team} returns this
 */
proto.PbModel.Team.Team.prototype.setFap = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 State = 3;
 * @return {number}
 */
proto.PbModel.Team.Team.prototype.getState = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Team.Team} returns this
 */
proto.PbModel.Team.Team.prototype.setState = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated TeamHeroItem HeroList = 4;
 * @return {!Array<!proto.PbModel.Team.TeamHeroItem>}
 */
proto.PbModel.Team.Team.prototype.getHerolistList = function() {
  return /** @type{!Array<!proto.PbModel.Team.TeamHeroItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.Team.TeamHeroItem, 4));
};


/**
 * @param {!Array<!proto.PbModel.Team.TeamHeroItem>} value
 * @return {!proto.PbModel.Team.Team} returns this
*/
proto.PbModel.Team.Team.prototype.setHerolistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.PbModel.Team.TeamHeroItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.Team.TeamHeroItem}
 */
proto.PbModel.Team.Team.prototype.addHerolist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.PbModel.Team.TeamHeroItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.Team.Team} returns this
 */
proto.PbModel.Team.Team.prototype.clearHerolistList = function() {
  return this.setHerolistList([]);
};


/**
 * optional bool ReleaseSkillsManual = 5;
 * @return {boolean}
 */
proto.PbModel.Team.Team.prototype.getReleaseskillsmanual = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PbModel.Team.Team} returns this
 */
proto.PbModel.Team.Team.prototype.setReleaseskillsmanual = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * repeated TeamHeroDetailInfoItem HeroDetailInfoList = 6;
 * @return {!Array<!proto.PbModel.Team.TeamHeroDetailInfoItem>}
 */
proto.PbModel.Team.Team.prototype.getHerodetailinfolistList = function() {
  return /** @type{!Array<!proto.PbModel.Team.TeamHeroDetailInfoItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.Team.TeamHeroDetailInfoItem, 6));
};


/**
 * @param {!Array<!proto.PbModel.Team.TeamHeroDetailInfoItem>} value
 * @return {!proto.PbModel.Team.Team} returns this
*/
proto.PbModel.Team.Team.prototype.setHerodetailinfolistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.PbModel.Team.TeamHeroDetailInfoItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.Team.TeamHeroDetailInfoItem}
 */
proto.PbModel.Team.Team.prototype.addHerodetailinfolist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.PbModel.Team.TeamHeroDetailInfoItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.Team.Team} returns this
 */
proto.PbModel.Team.Team.prototype.clearHerodetailinfolistList = function() {
  return this.setHerodetailinfolistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Team.TeamHeroItem.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Team.TeamHeroItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Team.TeamHeroItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Team.TeamHeroItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    modelid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    heroid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    location: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Team.TeamHeroItem}
 */
proto.PbModel.Team.TeamHeroItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Team.TeamHeroItem;
  return proto.PbModel.Team.TeamHeroItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Team.TeamHeroItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Team.TeamHeroItem}
 */
proto.PbModel.Team.TeamHeroItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setModelid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHeroid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Team.TeamHeroItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Team.TeamHeroItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Team.TeamHeroItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Team.TeamHeroItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getModelid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getHeroid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLocation();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int32 ModelId = 1;
 * @return {number}
 */
proto.PbModel.Team.TeamHeroItem.prototype.getModelid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Team.TeamHeroItem} returns this
 */
proto.PbModel.Team.TeamHeroItem.prototype.setModelid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string HeroId = 2;
 * @return {string}
 */
proto.PbModel.Team.TeamHeroItem.prototype.getHeroid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Team.TeamHeroItem} returns this
 */
proto.PbModel.Team.TeamHeroItem.prototype.setHeroid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string Location = 3;
 * @return {string}
 */
proto.PbModel.Team.TeamHeroItem.prototype.getLocation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Team.TeamHeroItem} returns this
 */
proto.PbModel.Team.TeamHeroItem.prototype.setLocation = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.Team.TeamHeroDetailInfoItem.repeatedFields_ = [17];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Team.TeamHeroDetailInfoItem.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Team.TeamHeroDetailInfoItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Team.TeamHeroDetailInfoItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Team.TeamHeroDetailInfoItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    heroid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    modelid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    ifnohero: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    name: jspb.Message.getFieldWithDefault(msg, 4, ""),
    fap: jspb.Message.getFieldWithDefault(msg, 5, 0),
    lv: jspb.Message.getFieldWithDefault(msg, 6, 0),
    corpslv: jspb.Message.getFieldWithDefault(msg, 7, 0),
    star: jspb.Message.getFieldWithDefault(msg, 8, 0),
    fashionid: jspb.Message.getFieldWithDefault(msg, 9, 0),
    ifawakening: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    curhpper: jspb.Message.getFloatingPointFieldWithDefault(msg, 11, 0.0),
    currentrp: jspb.Message.getFloatingPointFieldWithDefault(msg, 12, 0.0),
    profession: jspb.Message.getFieldWithDefault(msg, 13, 0),
    ifothers: jspb.Message.getFieldWithDefault(msg, 14, 0),
    elitetype: jspb.Message.getFieldWithDefault(msg, 15, 0),
    commonattrMap: (f = msg.getCommonattrMap()) ? f.toObject(includeInstance, undefined) : [],
    skilllistList: (f = jspb.Message.getRepeatedField(msg, 17)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Team.TeamHeroDetailInfoItem}
 */
proto.PbModel.Team.TeamHeroDetailInfoItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Team.TeamHeroDetailInfoItem;
  return proto.PbModel.Team.TeamHeroDetailInfoItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Team.TeamHeroDetailInfoItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Team.TeamHeroDetailInfoItem}
 */
proto.PbModel.Team.TeamHeroDetailInfoItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHeroid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setModelid(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIfnohero(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFap(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLv(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCorpslv(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStar(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFashionid(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIfawakening(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCurhpper(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCurrentrp(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setProfession(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIfothers(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setElitetype(value);
      break;
    case 16:
      var value = msg.getCommonattrMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readInt64, null, 0, 0);
         });
      break;
    case 17:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setSkilllistList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Team.TeamHeroDetailInfoItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Team.TeamHeroDetailInfoItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Team.TeamHeroDetailInfoItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Team.TeamHeroDetailInfoItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeroid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getModelid();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getIfnohero();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getFap();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getLv();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getCorpslv();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getStar();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getFashionid();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getIfawakening();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getCurhpper();
  if (f !== 0.0) {
    writer.writeDouble(
      11,
      f
    );
  }
  f = message.getCurrentrp();
  if (f !== 0.0) {
    writer.writeDouble(
      12,
      f
    );
  }
  f = message.getProfession();
  if (f !== 0) {
    writer.writeInt32(
      13,
      f
    );
  }
  f = message.getIfothers();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getElitetype();
  if (f !== 0) {
    writer.writeInt32(
      15,
      f
    );
  }
  f = message.getCommonattrMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(16, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeInt64);
  }
  f = message.getSkilllistList();
  if (f.length > 0) {
    writer.writePackedInt32(
      17,
      f
    );
  }
};


/**
 * optional string HeroId = 1;
 * @return {string}
 */
proto.PbModel.Team.TeamHeroDetailInfoItem.prototype.getHeroid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Team.TeamHeroDetailInfoItem} returns this
 */
proto.PbModel.Team.TeamHeroDetailInfoItem.prototype.setHeroid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 ModelId = 2;
 * @return {number}
 */
proto.PbModel.Team.TeamHeroDetailInfoItem.prototype.getModelid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Team.TeamHeroDetailInfoItem} returns this
 */
proto.PbModel.Team.TeamHeroDetailInfoItem.prototype.setModelid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool IfNoHero = 3;
 * @return {boolean}
 */
proto.PbModel.Team.TeamHeroDetailInfoItem.prototype.getIfnohero = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PbModel.Team.TeamHeroDetailInfoItem} returns this
 */
proto.PbModel.Team.TeamHeroDetailInfoItem.prototype.setIfnohero = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional string Name = 4;
 * @return {string}
 */
proto.PbModel.Team.TeamHeroDetailInfoItem.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Team.TeamHeroDetailInfoItem} returns this
 */
proto.PbModel.Team.TeamHeroDetailInfoItem.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int64 Fap = 5;
 * @return {number}
 */
proto.PbModel.Team.TeamHeroDetailInfoItem.prototype.getFap = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Team.TeamHeroDetailInfoItem} returns this
 */
proto.PbModel.Team.TeamHeroDetailInfoItem.prototype.setFap = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 Lv = 6;
 * @return {number}
 */
proto.PbModel.Team.TeamHeroDetailInfoItem.prototype.getLv = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Team.TeamHeroDetailInfoItem} returns this
 */
proto.PbModel.Team.TeamHeroDetailInfoItem.prototype.setLv = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 CorpsLv = 7;
 * @return {number}
 */
proto.PbModel.Team.TeamHeroDetailInfoItem.prototype.getCorpslv = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Team.TeamHeroDetailInfoItem} returns this
 */
proto.PbModel.Team.TeamHeroDetailInfoItem.prototype.setCorpslv = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 Star = 8;
 * @return {number}
 */
proto.PbModel.Team.TeamHeroDetailInfoItem.prototype.getStar = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Team.TeamHeroDetailInfoItem} returns this
 */
proto.PbModel.Team.TeamHeroDetailInfoItem.prototype.setStar = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 FashionId = 9;
 * @return {number}
 */
proto.PbModel.Team.TeamHeroDetailInfoItem.prototype.getFashionid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Team.TeamHeroDetailInfoItem} returns this
 */
proto.PbModel.Team.TeamHeroDetailInfoItem.prototype.setFashionid = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional bool IfAwakening = 10;
 * @return {boolean}
 */
proto.PbModel.Team.TeamHeroDetailInfoItem.prototype.getIfawakening = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PbModel.Team.TeamHeroDetailInfoItem} returns this
 */
proto.PbModel.Team.TeamHeroDetailInfoItem.prototype.setIfawakening = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional double CurHpPer = 11;
 * @return {number}
 */
proto.PbModel.Team.TeamHeroDetailInfoItem.prototype.getCurhpper = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Team.TeamHeroDetailInfoItem} returns this
 */
proto.PbModel.Team.TeamHeroDetailInfoItem.prototype.setCurhpper = function(value) {
  return jspb.Message.setProto3FloatField(this, 11, value);
};


/**
 * optional double CurrentRp = 12;
 * @return {number}
 */
proto.PbModel.Team.TeamHeroDetailInfoItem.prototype.getCurrentrp = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Team.TeamHeroDetailInfoItem} returns this
 */
proto.PbModel.Team.TeamHeroDetailInfoItem.prototype.setCurrentrp = function(value) {
  return jspb.Message.setProto3FloatField(this, 12, value);
};


/**
 * optional int32 Profession = 13;
 * @return {number}
 */
proto.PbModel.Team.TeamHeroDetailInfoItem.prototype.getProfession = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Team.TeamHeroDetailInfoItem} returns this
 */
proto.PbModel.Team.TeamHeroDetailInfoItem.prototype.setProfession = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional int32 IfOthers = 14;
 * @return {number}
 */
proto.PbModel.Team.TeamHeroDetailInfoItem.prototype.getIfothers = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Team.TeamHeroDetailInfoItem} returns this
 */
proto.PbModel.Team.TeamHeroDetailInfoItem.prototype.setIfothers = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional int32 EliteType = 15;
 * @return {number}
 */
proto.PbModel.Team.TeamHeroDetailInfoItem.prototype.getElitetype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Team.TeamHeroDetailInfoItem} returns this
 */
proto.PbModel.Team.TeamHeroDetailInfoItem.prototype.setElitetype = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * map<int32, int64> CommonAttr = 16;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,number>}
 */
proto.PbModel.Team.TeamHeroDetailInfoItem.prototype.getCommonattrMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,number>} */ (
      jspb.Message.getMapField(this, 16, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.PbModel.Team.TeamHeroDetailInfoItem} returns this
 */
proto.PbModel.Team.TeamHeroDetailInfoItem.prototype.clearCommonattrMap = function() {
  this.getCommonattrMap().clear();
  return this;};


/**
 * repeated int32 SkillList = 17;
 * @return {!Array<number>}
 */
proto.PbModel.Team.TeamHeroDetailInfoItem.prototype.getSkilllistList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 17));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.PbModel.Team.TeamHeroDetailInfoItem} returns this
 */
proto.PbModel.Team.TeamHeroDetailInfoItem.prototype.setSkilllistList = function(value) {
  return jspb.Message.setField(this, 17, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.PbModel.Team.TeamHeroDetailInfoItem} returns this
 */
proto.PbModel.Team.TeamHeroDetailInfoItem.prototype.addSkilllist = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 17, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.Team.TeamHeroDetailInfoItem} returns this
 */
proto.PbModel.Team.TeamHeroDetailInfoItem.prototype.clearSkilllistList = function() {
  return this.setSkilllistList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.Team.TeamPlanInfo.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Team.TeamPlanInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Team.TeamPlanInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Team.TeamPlanInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Team.TeamPlanInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    planid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    isdefault: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    teamlistList: jspb.Message.toObjectList(msg.getTeamlistList(),
    proto.PbModel.Team.Team.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Team.TeamPlanInfo}
 */
proto.PbModel.Team.TeamPlanInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Team.TeamPlanInfo;
  return proto.PbModel.Team.TeamPlanInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Team.TeamPlanInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Team.TeamPlanInfo}
 */
proto.PbModel.Team.TeamPlanInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlanid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsdefault(value);
      break;
    case 4:
      var value = new proto.PbModel.Team.Team;
      reader.readMessage(value,proto.PbModel.Team.Team.deserializeBinaryFromReader);
      msg.addTeamlist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Team.TeamPlanInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Team.TeamPlanInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Team.TeamPlanInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Team.TeamPlanInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlanid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIsdefault();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getTeamlistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.PbModel.Team.Team.serializeBinaryToWriter
    );
  }
};


/**
 * optional string PlanId = 1;
 * @return {string}
 */
proto.PbModel.Team.TeamPlanInfo.prototype.getPlanid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Team.TeamPlanInfo} returns this
 */
proto.PbModel.Team.TeamPlanInfo.prototype.setPlanid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Name = 2;
 * @return {string}
 */
proto.PbModel.Team.TeamPlanInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Team.TeamPlanInfo} returns this
 */
proto.PbModel.Team.TeamPlanInfo.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool IsDefault = 3;
 * @return {boolean}
 */
proto.PbModel.Team.TeamPlanInfo.prototype.getIsdefault = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PbModel.Team.TeamPlanInfo} returns this
 */
proto.PbModel.Team.TeamPlanInfo.prototype.setIsdefault = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * repeated Team TeamList = 4;
 * @return {!Array<!proto.PbModel.Team.Team>}
 */
proto.PbModel.Team.TeamPlanInfo.prototype.getTeamlistList = function() {
  return /** @type{!Array<!proto.PbModel.Team.Team>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.Team.Team, 4));
};


/**
 * @param {!Array<!proto.PbModel.Team.Team>} value
 * @return {!proto.PbModel.Team.TeamPlanInfo} returns this
*/
proto.PbModel.Team.TeamPlanInfo.prototype.setTeamlistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.PbModel.Team.Team=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.Team.Team}
 */
proto.PbModel.Team.TeamPlanInfo.prototype.addTeamlist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.PbModel.Team.Team, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.Team.TeamPlanInfo} returns this
 */
proto.PbModel.Team.TeamPlanInfo.prototype.clearTeamlistList = function() {
  return this.setTeamlistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Team.TeamRemainHpInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Team.TeamRemainHpInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Team.TeamRemainHpInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Team.TeamRemainHpInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    modelid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    heroid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    curhpper: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    currentrp: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Team.TeamRemainHpInfo}
 */
proto.PbModel.Team.TeamRemainHpInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Team.TeamRemainHpInfo;
  return proto.PbModel.Team.TeamRemainHpInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Team.TeamRemainHpInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Team.TeamRemainHpInfo}
 */
proto.PbModel.Team.TeamRemainHpInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setModelid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHeroid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCurhpper(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCurrentrp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Team.TeamRemainHpInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Team.TeamRemainHpInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Team.TeamRemainHpInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Team.TeamRemainHpInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getModelid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getHeroid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCurhpper();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getCurrentrp();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
};


/**
 * optional int32 ModelId = 1;
 * @return {number}
 */
proto.PbModel.Team.TeamRemainHpInfo.prototype.getModelid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Team.TeamRemainHpInfo} returns this
 */
proto.PbModel.Team.TeamRemainHpInfo.prototype.setModelid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string HeroId = 2;
 * @return {string}
 */
proto.PbModel.Team.TeamRemainHpInfo.prototype.getHeroid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Team.TeamRemainHpInfo} returns this
 */
proto.PbModel.Team.TeamRemainHpInfo.prototype.setHeroid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional double CurHpPer = 3;
 * @return {number}
 */
proto.PbModel.Team.TeamRemainHpInfo.prototype.getCurhpper = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Team.TeamRemainHpInfo} returns this
 */
proto.PbModel.Team.TeamRemainHpInfo.prototype.setCurhpper = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double CurrentRP = 4;
 * @return {number}
 */
proto.PbModel.Team.TeamRemainHpInfo.prototype.getCurrentrp = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Team.TeamRemainHpInfo} returns this
 */
proto.PbModel.Team.TeamRemainHpInfo.prototype.setCurrentrp = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.Team.TeamPlanAddPlanReq.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Team.TeamPlanAddPlanReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Team.TeamPlanAddPlanReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Team.TeamPlanAddPlanReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Team.TeamPlanAddPlanReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    teamlistList: jspb.Message.toObjectList(msg.getTeamlistList(),
    proto.PbModel.Team.Team.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Team.TeamPlanAddPlanReq}
 */
proto.PbModel.Team.TeamPlanAddPlanReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Team.TeamPlanAddPlanReq;
  return proto.PbModel.Team.TeamPlanAddPlanReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Team.TeamPlanAddPlanReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Team.TeamPlanAddPlanReq}
 */
proto.PbModel.Team.TeamPlanAddPlanReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new proto.PbModel.Team.Team;
      reader.readMessage(value,proto.PbModel.Team.Team.deserializeBinaryFromReader);
      msg.addTeamlist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Team.TeamPlanAddPlanReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Team.TeamPlanAddPlanReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Team.TeamPlanAddPlanReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Team.TeamPlanAddPlanReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTeamlistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.PbModel.Team.Team.serializeBinaryToWriter
    );
  }
};


/**
 * optional string Name = 1;
 * @return {string}
 */
proto.PbModel.Team.TeamPlanAddPlanReq.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Team.TeamPlanAddPlanReq} returns this
 */
proto.PbModel.Team.TeamPlanAddPlanReq.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated Team TeamList = 2;
 * @return {!Array<!proto.PbModel.Team.Team>}
 */
proto.PbModel.Team.TeamPlanAddPlanReq.prototype.getTeamlistList = function() {
  return /** @type{!Array<!proto.PbModel.Team.Team>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.Team.Team, 2));
};


/**
 * @param {!Array<!proto.PbModel.Team.Team>} value
 * @return {!proto.PbModel.Team.TeamPlanAddPlanReq} returns this
*/
proto.PbModel.Team.TeamPlanAddPlanReq.prototype.setTeamlistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.PbModel.Team.Team=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.Team.Team}
 */
proto.PbModel.Team.TeamPlanAddPlanReq.prototype.addTeamlist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.PbModel.Team.Team, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.Team.TeamPlanAddPlanReq} returns this
 */
proto.PbModel.Team.TeamPlanAddPlanReq.prototype.clearTeamlistList = function() {
  return this.setTeamlistList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.Team.TeamPlanAddPlanRes.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Team.TeamPlanAddPlanRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Team.TeamPlanAddPlanRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Team.TeamPlanAddPlanRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Team.TeamPlanAddPlanRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    teamplaninfolistList: jspb.Message.toObjectList(msg.getTeamplaninfolistList(),
    proto.PbModel.Team.TeamPlanInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Team.TeamPlanAddPlanRes}
 */
proto.PbModel.Team.TeamPlanAddPlanRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Team.TeamPlanAddPlanRes;
  return proto.PbModel.Team.TeamPlanAddPlanRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Team.TeamPlanAddPlanRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Team.TeamPlanAddPlanRes}
 */
proto.PbModel.Team.TeamPlanAddPlanRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PbModel.Team.TeamPlanInfo;
      reader.readMessage(value,proto.PbModel.Team.TeamPlanInfo.deserializeBinaryFromReader);
      msg.addTeamplaninfolist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Team.TeamPlanAddPlanRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Team.TeamPlanAddPlanRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Team.TeamPlanAddPlanRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Team.TeamPlanAddPlanRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTeamplaninfolistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.PbModel.Team.TeamPlanInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated TeamPlanInfo TeamPlanInfoList = 1;
 * @return {!Array<!proto.PbModel.Team.TeamPlanInfo>}
 */
proto.PbModel.Team.TeamPlanAddPlanRes.prototype.getTeamplaninfolistList = function() {
  return /** @type{!Array<!proto.PbModel.Team.TeamPlanInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.Team.TeamPlanInfo, 1));
};


/**
 * @param {!Array<!proto.PbModel.Team.TeamPlanInfo>} value
 * @return {!proto.PbModel.Team.TeamPlanAddPlanRes} returns this
*/
proto.PbModel.Team.TeamPlanAddPlanRes.prototype.setTeamplaninfolistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.PbModel.Team.TeamPlanInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.Team.TeamPlanInfo}
 */
proto.PbModel.Team.TeamPlanAddPlanRes.prototype.addTeamplaninfolist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.PbModel.Team.TeamPlanInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.Team.TeamPlanAddPlanRes} returns this
 */
proto.PbModel.Team.TeamPlanAddPlanRes.prototype.clearTeamplaninfolistList = function() {
  return this.setTeamplaninfolistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Team.TeamPlanChangeDefautTeamReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Team.TeamPlanChangeDefautTeamReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Team.TeamPlanChangeDefautTeamReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Team.TeamPlanChangeDefautTeamReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    teamid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Team.TeamPlanChangeDefautTeamReq}
 */
proto.PbModel.Team.TeamPlanChangeDefautTeamReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Team.TeamPlanChangeDefautTeamReq;
  return proto.PbModel.Team.TeamPlanChangeDefautTeamReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Team.TeamPlanChangeDefautTeamReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Team.TeamPlanChangeDefautTeamReq}
 */
proto.PbModel.Team.TeamPlanChangeDefautTeamReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTeamid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Team.TeamPlanChangeDefautTeamReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Team.TeamPlanChangeDefautTeamReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Team.TeamPlanChangeDefautTeamReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Team.TeamPlanChangeDefautTeamReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTeamid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string TeamId = 1;
 * @return {string}
 */
proto.PbModel.Team.TeamPlanChangeDefautTeamReq.prototype.getTeamid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Team.TeamPlanChangeDefautTeamReq} returns this
 */
proto.PbModel.Team.TeamPlanChangeDefautTeamReq.prototype.setTeamid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.Team.TeamPlanChangeDefautTeamRes.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Team.TeamPlanChangeDefautTeamRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Team.TeamPlanChangeDefautTeamRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Team.TeamPlanChangeDefautTeamRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Team.TeamPlanChangeDefautTeamRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    teamplaninfolistList: jspb.Message.toObjectList(msg.getTeamplaninfolistList(),
    proto.PbModel.Team.TeamPlanInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Team.TeamPlanChangeDefautTeamRes}
 */
proto.PbModel.Team.TeamPlanChangeDefautTeamRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Team.TeamPlanChangeDefautTeamRes;
  return proto.PbModel.Team.TeamPlanChangeDefautTeamRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Team.TeamPlanChangeDefautTeamRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Team.TeamPlanChangeDefautTeamRes}
 */
proto.PbModel.Team.TeamPlanChangeDefautTeamRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PbModel.Team.TeamPlanInfo;
      reader.readMessage(value,proto.PbModel.Team.TeamPlanInfo.deserializeBinaryFromReader);
      msg.addTeamplaninfolist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Team.TeamPlanChangeDefautTeamRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Team.TeamPlanChangeDefautTeamRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Team.TeamPlanChangeDefautTeamRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Team.TeamPlanChangeDefautTeamRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTeamplaninfolistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.PbModel.Team.TeamPlanInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated TeamPlanInfo TeamPlanInfoList = 1;
 * @return {!Array<!proto.PbModel.Team.TeamPlanInfo>}
 */
proto.PbModel.Team.TeamPlanChangeDefautTeamRes.prototype.getTeamplaninfolistList = function() {
  return /** @type{!Array<!proto.PbModel.Team.TeamPlanInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.Team.TeamPlanInfo, 1));
};


/**
 * @param {!Array<!proto.PbModel.Team.TeamPlanInfo>} value
 * @return {!proto.PbModel.Team.TeamPlanChangeDefautTeamRes} returns this
*/
proto.PbModel.Team.TeamPlanChangeDefautTeamRes.prototype.setTeamplaninfolistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.PbModel.Team.TeamPlanInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.Team.TeamPlanInfo}
 */
proto.PbModel.Team.TeamPlanChangeDefautTeamRes.prototype.addTeamplaninfolist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.PbModel.Team.TeamPlanInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.Team.TeamPlanChangeDefautTeamRes} returns this
 */
proto.PbModel.Team.TeamPlanChangeDefautTeamRes.prototype.clearTeamplaninfolistList = function() {
  return this.setTeamplaninfolistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Team.TeamPlanDelTeamPlanReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Team.TeamPlanDelTeamPlanReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Team.TeamPlanDelTeamPlanReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Team.TeamPlanDelTeamPlanReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    teamid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Team.TeamPlanDelTeamPlanReq}
 */
proto.PbModel.Team.TeamPlanDelTeamPlanReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Team.TeamPlanDelTeamPlanReq;
  return proto.PbModel.Team.TeamPlanDelTeamPlanReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Team.TeamPlanDelTeamPlanReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Team.TeamPlanDelTeamPlanReq}
 */
proto.PbModel.Team.TeamPlanDelTeamPlanReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTeamid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Team.TeamPlanDelTeamPlanReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Team.TeamPlanDelTeamPlanReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Team.TeamPlanDelTeamPlanReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Team.TeamPlanDelTeamPlanReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTeamid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string TeamId = 1;
 * @return {string}
 */
proto.PbModel.Team.TeamPlanDelTeamPlanReq.prototype.getTeamid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Team.TeamPlanDelTeamPlanReq} returns this
 */
proto.PbModel.Team.TeamPlanDelTeamPlanReq.prototype.setTeamid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.Team.TeamPlanDelTeamPlanRes.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Team.TeamPlanDelTeamPlanRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Team.TeamPlanDelTeamPlanRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Team.TeamPlanDelTeamPlanRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Team.TeamPlanDelTeamPlanRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    teamplaninfolistList: jspb.Message.toObjectList(msg.getTeamplaninfolistList(),
    proto.PbModel.Team.TeamPlanInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Team.TeamPlanDelTeamPlanRes}
 */
proto.PbModel.Team.TeamPlanDelTeamPlanRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Team.TeamPlanDelTeamPlanRes;
  return proto.PbModel.Team.TeamPlanDelTeamPlanRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Team.TeamPlanDelTeamPlanRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Team.TeamPlanDelTeamPlanRes}
 */
proto.PbModel.Team.TeamPlanDelTeamPlanRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PbModel.Team.TeamPlanInfo;
      reader.readMessage(value,proto.PbModel.Team.TeamPlanInfo.deserializeBinaryFromReader);
      msg.addTeamplaninfolist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Team.TeamPlanDelTeamPlanRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Team.TeamPlanDelTeamPlanRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Team.TeamPlanDelTeamPlanRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Team.TeamPlanDelTeamPlanRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTeamplaninfolistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.PbModel.Team.TeamPlanInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated TeamPlanInfo TeamPlanInfoList = 1;
 * @return {!Array<!proto.PbModel.Team.TeamPlanInfo>}
 */
proto.PbModel.Team.TeamPlanDelTeamPlanRes.prototype.getTeamplaninfolistList = function() {
  return /** @type{!Array<!proto.PbModel.Team.TeamPlanInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.Team.TeamPlanInfo, 1));
};


/**
 * @param {!Array<!proto.PbModel.Team.TeamPlanInfo>} value
 * @return {!proto.PbModel.Team.TeamPlanDelTeamPlanRes} returns this
*/
proto.PbModel.Team.TeamPlanDelTeamPlanRes.prototype.setTeamplaninfolistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.PbModel.Team.TeamPlanInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.Team.TeamPlanInfo}
 */
proto.PbModel.Team.TeamPlanDelTeamPlanRes.prototype.addTeamplaninfolist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.PbModel.Team.TeamPlanInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.Team.TeamPlanDelTeamPlanRes} returns this
 */
proto.PbModel.Team.TeamPlanDelTeamPlanRes.prototype.clearTeamplaninfolistList = function() {
  return this.setTeamplaninfolistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Team.TeamPlanGetInfoReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Team.TeamPlanGetInfoReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Team.TeamPlanGetInfoReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Team.TeamPlanGetInfoReq.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Team.TeamPlanGetInfoReq}
 */
proto.PbModel.Team.TeamPlanGetInfoReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Team.TeamPlanGetInfoReq;
  return proto.PbModel.Team.TeamPlanGetInfoReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Team.TeamPlanGetInfoReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Team.TeamPlanGetInfoReq}
 */
proto.PbModel.Team.TeamPlanGetInfoReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Team.TeamPlanGetInfoReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Team.TeamPlanGetInfoReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Team.TeamPlanGetInfoReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Team.TeamPlanGetInfoReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.Team.TeamPlanGetInfoRes.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Team.TeamPlanGetInfoRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Team.TeamPlanGetInfoRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Team.TeamPlanGetInfoRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Team.TeamPlanGetInfoRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    teamplaninfolistList: jspb.Message.toObjectList(msg.getTeamplaninfolistList(),
    proto.PbModel.Team.TeamPlanInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Team.TeamPlanGetInfoRes}
 */
proto.PbModel.Team.TeamPlanGetInfoRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Team.TeamPlanGetInfoRes;
  return proto.PbModel.Team.TeamPlanGetInfoRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Team.TeamPlanGetInfoRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Team.TeamPlanGetInfoRes}
 */
proto.PbModel.Team.TeamPlanGetInfoRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PbModel.Team.TeamPlanInfo;
      reader.readMessage(value,proto.PbModel.Team.TeamPlanInfo.deserializeBinaryFromReader);
      msg.addTeamplaninfolist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Team.TeamPlanGetInfoRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Team.TeamPlanGetInfoRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Team.TeamPlanGetInfoRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Team.TeamPlanGetInfoRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTeamplaninfolistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.PbModel.Team.TeamPlanInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated TeamPlanInfo TeamPlanInfoList = 1;
 * @return {!Array<!proto.PbModel.Team.TeamPlanInfo>}
 */
proto.PbModel.Team.TeamPlanGetInfoRes.prototype.getTeamplaninfolistList = function() {
  return /** @type{!Array<!proto.PbModel.Team.TeamPlanInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.Team.TeamPlanInfo, 1));
};


/**
 * @param {!Array<!proto.PbModel.Team.TeamPlanInfo>} value
 * @return {!proto.PbModel.Team.TeamPlanGetInfoRes} returns this
*/
proto.PbModel.Team.TeamPlanGetInfoRes.prototype.setTeamplaninfolistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.PbModel.Team.TeamPlanInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.Team.TeamPlanInfo}
 */
proto.PbModel.Team.TeamPlanGetInfoRes.prototype.addTeamplaninfolist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.PbModel.Team.TeamPlanInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.Team.TeamPlanGetInfoRes} returns this
 */
proto.PbModel.Team.TeamPlanGetInfoRes.prototype.clearTeamplaninfolistList = function() {
  return this.setTeamplaninfolistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Team.TeamPlanUpdateNameReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Team.TeamPlanUpdateNameReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Team.TeamPlanUpdateNameReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Team.TeamPlanUpdateNameReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    teamid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Team.TeamPlanUpdateNameReq}
 */
proto.PbModel.Team.TeamPlanUpdateNameReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Team.TeamPlanUpdateNameReq;
  return proto.PbModel.Team.TeamPlanUpdateNameReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Team.TeamPlanUpdateNameReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Team.TeamPlanUpdateNameReq}
 */
proto.PbModel.Team.TeamPlanUpdateNameReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTeamid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Team.TeamPlanUpdateNameReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Team.TeamPlanUpdateNameReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Team.TeamPlanUpdateNameReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Team.TeamPlanUpdateNameReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTeamid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string TeamId = 1;
 * @return {string}
 */
proto.PbModel.Team.TeamPlanUpdateNameReq.prototype.getTeamid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Team.TeamPlanUpdateNameReq} returns this
 */
proto.PbModel.Team.TeamPlanUpdateNameReq.prototype.setTeamid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Name = 2;
 * @return {string}
 */
proto.PbModel.Team.TeamPlanUpdateNameReq.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Team.TeamPlanUpdateNameReq} returns this
 */
proto.PbModel.Team.TeamPlanUpdateNameReq.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.Team.TeamPlanUpdateNameRes.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Team.TeamPlanUpdateNameRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Team.TeamPlanUpdateNameRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Team.TeamPlanUpdateNameRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Team.TeamPlanUpdateNameRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    teamplaninfolistList: jspb.Message.toObjectList(msg.getTeamplaninfolistList(),
    proto.PbModel.Team.TeamPlanInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Team.TeamPlanUpdateNameRes}
 */
proto.PbModel.Team.TeamPlanUpdateNameRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Team.TeamPlanUpdateNameRes;
  return proto.PbModel.Team.TeamPlanUpdateNameRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Team.TeamPlanUpdateNameRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Team.TeamPlanUpdateNameRes}
 */
proto.PbModel.Team.TeamPlanUpdateNameRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PbModel.Team.TeamPlanInfo;
      reader.readMessage(value,proto.PbModel.Team.TeamPlanInfo.deserializeBinaryFromReader);
      msg.addTeamplaninfolist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Team.TeamPlanUpdateNameRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Team.TeamPlanUpdateNameRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Team.TeamPlanUpdateNameRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Team.TeamPlanUpdateNameRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTeamplaninfolistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.PbModel.Team.TeamPlanInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated TeamPlanInfo TeamPlanInfoList = 1;
 * @return {!Array<!proto.PbModel.Team.TeamPlanInfo>}
 */
proto.PbModel.Team.TeamPlanUpdateNameRes.prototype.getTeamplaninfolistList = function() {
  return /** @type{!Array<!proto.PbModel.Team.TeamPlanInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.Team.TeamPlanInfo, 1));
};


/**
 * @param {!Array<!proto.PbModel.Team.TeamPlanInfo>} value
 * @return {!proto.PbModel.Team.TeamPlanUpdateNameRes} returns this
*/
proto.PbModel.Team.TeamPlanUpdateNameRes.prototype.setTeamplaninfolistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.PbModel.Team.TeamPlanInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.Team.TeamPlanInfo}
 */
proto.PbModel.Team.TeamPlanUpdateNameRes.prototype.addTeamplaninfolist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.PbModel.Team.TeamPlanInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.Team.TeamPlanUpdateNameRes} returns this
 */
proto.PbModel.Team.TeamPlanUpdateNameRes.prototype.clearTeamplaninfolistList = function() {
  return this.setTeamplaninfolistList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.Team.TeamPlanUpdateTeamPlanReq.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Team.TeamPlanUpdateTeamPlanReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Team.TeamPlanUpdateTeamPlanReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Team.TeamPlanUpdateTeamPlanReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Team.TeamPlanUpdateTeamPlanReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    teamid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    teamlistList: jspb.Message.toObjectList(msg.getTeamlistList(),
    proto.PbModel.Team.Team.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Team.TeamPlanUpdateTeamPlanReq}
 */
proto.PbModel.Team.TeamPlanUpdateTeamPlanReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Team.TeamPlanUpdateTeamPlanReq;
  return proto.PbModel.Team.TeamPlanUpdateTeamPlanReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Team.TeamPlanUpdateTeamPlanReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Team.TeamPlanUpdateTeamPlanReq}
 */
proto.PbModel.Team.TeamPlanUpdateTeamPlanReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTeamid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = new proto.PbModel.Team.Team;
      reader.readMessage(value,proto.PbModel.Team.Team.deserializeBinaryFromReader);
      msg.addTeamlist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Team.TeamPlanUpdateTeamPlanReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Team.TeamPlanUpdateTeamPlanReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Team.TeamPlanUpdateTeamPlanReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Team.TeamPlanUpdateTeamPlanReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTeamid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTeamlistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.PbModel.Team.Team.serializeBinaryToWriter
    );
  }
};


/**
 * optional string TeamId = 1;
 * @return {string}
 */
proto.PbModel.Team.TeamPlanUpdateTeamPlanReq.prototype.getTeamid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Team.TeamPlanUpdateTeamPlanReq} returns this
 */
proto.PbModel.Team.TeamPlanUpdateTeamPlanReq.prototype.setTeamid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Name = 2;
 * @return {string}
 */
proto.PbModel.Team.TeamPlanUpdateTeamPlanReq.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Team.TeamPlanUpdateTeamPlanReq} returns this
 */
proto.PbModel.Team.TeamPlanUpdateTeamPlanReq.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated Team TeamList = 3;
 * @return {!Array<!proto.PbModel.Team.Team>}
 */
proto.PbModel.Team.TeamPlanUpdateTeamPlanReq.prototype.getTeamlistList = function() {
  return /** @type{!Array<!proto.PbModel.Team.Team>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.Team.Team, 3));
};


/**
 * @param {!Array<!proto.PbModel.Team.Team>} value
 * @return {!proto.PbModel.Team.TeamPlanUpdateTeamPlanReq} returns this
*/
proto.PbModel.Team.TeamPlanUpdateTeamPlanReq.prototype.setTeamlistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.PbModel.Team.Team=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.Team.Team}
 */
proto.PbModel.Team.TeamPlanUpdateTeamPlanReq.prototype.addTeamlist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.PbModel.Team.Team, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.Team.TeamPlanUpdateTeamPlanReq} returns this
 */
proto.PbModel.Team.TeamPlanUpdateTeamPlanReq.prototype.clearTeamlistList = function() {
  return this.setTeamlistList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.Team.TeamPlanUpdateTeamPlanRes.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Team.TeamPlanUpdateTeamPlanRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Team.TeamPlanUpdateTeamPlanRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Team.TeamPlanUpdateTeamPlanRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Team.TeamPlanUpdateTeamPlanRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    teamplaninfolistList: jspb.Message.toObjectList(msg.getTeamplaninfolistList(),
    proto.PbModel.Team.TeamPlanInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Team.TeamPlanUpdateTeamPlanRes}
 */
proto.PbModel.Team.TeamPlanUpdateTeamPlanRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Team.TeamPlanUpdateTeamPlanRes;
  return proto.PbModel.Team.TeamPlanUpdateTeamPlanRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Team.TeamPlanUpdateTeamPlanRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Team.TeamPlanUpdateTeamPlanRes}
 */
proto.PbModel.Team.TeamPlanUpdateTeamPlanRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PbModel.Team.TeamPlanInfo;
      reader.readMessage(value,proto.PbModel.Team.TeamPlanInfo.deserializeBinaryFromReader);
      msg.addTeamplaninfolist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Team.TeamPlanUpdateTeamPlanRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Team.TeamPlanUpdateTeamPlanRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Team.TeamPlanUpdateTeamPlanRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Team.TeamPlanUpdateTeamPlanRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTeamplaninfolistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.PbModel.Team.TeamPlanInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated TeamPlanInfo TeamPlanInfoList = 1;
 * @return {!Array<!proto.PbModel.Team.TeamPlanInfo>}
 */
proto.PbModel.Team.TeamPlanUpdateTeamPlanRes.prototype.getTeamplaninfolistList = function() {
  return /** @type{!Array<!proto.PbModel.Team.TeamPlanInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.Team.TeamPlanInfo, 1));
};


/**
 * @param {!Array<!proto.PbModel.Team.TeamPlanInfo>} value
 * @return {!proto.PbModel.Team.TeamPlanUpdateTeamPlanRes} returns this
*/
proto.PbModel.Team.TeamPlanUpdateTeamPlanRes.prototype.setTeamplaninfolistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.PbModel.Team.TeamPlanInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.Team.TeamPlanInfo}
 */
proto.PbModel.Team.TeamPlanUpdateTeamPlanRes.prototype.addTeamplaninfolist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.PbModel.Team.TeamPlanInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.Team.TeamPlanUpdateTeamPlanRes} returns this
 */
proto.PbModel.Team.TeamPlanUpdateTeamPlanRes.prototype.clearTeamplaninfolistList = function() {
  return this.setTeamplaninfolistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Team.TeamRemoveHeroReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Team.TeamRemoveHeroReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Team.TeamRemoveHeroReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Team.TeamRemoveHeroReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    heroid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Team.TeamRemoveHeroReq}
 */
proto.PbModel.Team.TeamRemoveHeroReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Team.TeamRemoveHeroReq;
  return proto.PbModel.Team.TeamRemoveHeroReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Team.TeamRemoveHeroReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Team.TeamRemoveHeroReq}
 */
proto.PbModel.Team.TeamRemoveHeroReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHeroid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Team.TeamRemoveHeroReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Team.TeamRemoveHeroReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Team.TeamRemoveHeroReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Team.TeamRemoveHeroReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeroid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string HeroId = 1;
 * @return {string}
 */
proto.PbModel.Team.TeamRemoveHeroReq.prototype.getHeroid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Team.TeamRemoveHeroReq} returns this
 */
proto.PbModel.Team.TeamRemoveHeroReq.prototype.setHeroid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Team.TeamRemoveHeroRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Team.TeamRemoveHeroRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Team.TeamRemoveHeroRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Team.TeamRemoveHeroRes.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Team.TeamRemoveHeroRes}
 */
proto.PbModel.Team.TeamRemoveHeroRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Team.TeamRemoveHeroRes;
  return proto.PbModel.Team.TeamRemoveHeroRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Team.TeamRemoveHeroRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Team.TeamRemoveHeroRes}
 */
proto.PbModel.Team.TeamRemoveHeroRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Team.TeamRemoveHeroRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Team.TeamRemoveHeroRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Team.TeamRemoveHeroRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Team.TeamRemoveHeroRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.Team.TeamUpdateTeamInfoReq.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Team.TeamUpdateTeamInfoReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Team.TeamUpdateTeamInfoReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Team.TeamUpdateTeamInfoReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Team.TeamUpdateTeamInfoReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    submoduleid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    teamlistList: jspb.Message.toObjectList(msg.getTeamlistList(),
    proto.PbModel.Team.Team.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Team.TeamUpdateTeamInfoReq}
 */
proto.PbModel.Team.TeamUpdateTeamInfoReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Team.TeamUpdateTeamInfoReq;
  return proto.PbModel.Team.TeamUpdateTeamInfoReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Team.TeamUpdateTeamInfoReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Team.TeamUpdateTeamInfoReq}
 */
proto.PbModel.Team.TeamUpdateTeamInfoReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSubmoduleid(value);
      break;
    case 2:
      var value = new proto.PbModel.Team.Team;
      reader.readMessage(value,proto.PbModel.Team.Team.deserializeBinaryFromReader);
      msg.addTeamlist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Team.TeamUpdateTeamInfoReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Team.TeamUpdateTeamInfoReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Team.TeamUpdateTeamInfoReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Team.TeamUpdateTeamInfoReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubmoduleid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTeamlistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.PbModel.Team.Team.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 SubModuleId = 1;
 * @return {number}
 */
proto.PbModel.Team.TeamUpdateTeamInfoReq.prototype.getSubmoduleid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Team.TeamUpdateTeamInfoReq} returns this
 */
proto.PbModel.Team.TeamUpdateTeamInfoReq.prototype.setSubmoduleid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated Team TeamList = 2;
 * @return {!Array<!proto.PbModel.Team.Team>}
 */
proto.PbModel.Team.TeamUpdateTeamInfoReq.prototype.getTeamlistList = function() {
  return /** @type{!Array<!proto.PbModel.Team.Team>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.Team.Team, 2));
};


/**
 * @param {!Array<!proto.PbModel.Team.Team>} value
 * @return {!proto.PbModel.Team.TeamUpdateTeamInfoReq} returns this
*/
proto.PbModel.Team.TeamUpdateTeamInfoReq.prototype.setTeamlistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.PbModel.Team.Team=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.Team.Team}
 */
proto.PbModel.Team.TeamUpdateTeamInfoReq.prototype.addTeamlist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.PbModel.Team.Team, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.Team.TeamUpdateTeamInfoReq} returns this
 */
proto.PbModel.Team.TeamUpdateTeamInfoReq.prototype.clearTeamlistList = function() {
  return this.setTeamlistList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.Team.TeamUpdateTeamInfoRes.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Team.TeamUpdateTeamInfoRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Team.TeamUpdateTeamInfoRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Team.TeamUpdateTeamInfoRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Team.TeamUpdateTeamInfoRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    teamlistList: jspb.Message.toObjectList(msg.getTeamlistList(),
    proto.PbModel.Team.Team.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Team.TeamUpdateTeamInfoRes}
 */
proto.PbModel.Team.TeamUpdateTeamInfoRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Team.TeamUpdateTeamInfoRes;
  return proto.PbModel.Team.TeamUpdateTeamInfoRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Team.TeamUpdateTeamInfoRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Team.TeamUpdateTeamInfoRes}
 */
proto.PbModel.Team.TeamUpdateTeamInfoRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PbModel.Team.Team;
      reader.readMessage(value,proto.PbModel.Team.Team.deserializeBinaryFromReader);
      msg.addTeamlist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Team.TeamUpdateTeamInfoRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Team.TeamUpdateTeamInfoRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Team.TeamUpdateTeamInfoRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Team.TeamUpdateTeamInfoRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTeamlistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.PbModel.Team.Team.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Team TeamList = 1;
 * @return {!Array<!proto.PbModel.Team.Team>}
 */
proto.PbModel.Team.TeamUpdateTeamInfoRes.prototype.getTeamlistList = function() {
  return /** @type{!Array<!proto.PbModel.Team.Team>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.Team.Team, 1));
};


/**
 * @param {!Array<!proto.PbModel.Team.Team>} value
 * @return {!proto.PbModel.Team.TeamUpdateTeamInfoRes} returns this
*/
proto.PbModel.Team.TeamUpdateTeamInfoRes.prototype.setTeamlistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.PbModel.Team.Team=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.Team.Team}
 */
proto.PbModel.Team.TeamUpdateTeamInfoRes.prototype.addTeamlist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.PbModel.Team.Team, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.Team.TeamUpdateTeamInfoRes} returns this
 */
proto.PbModel.Team.TeamUpdateTeamInfoRes.prototype.clearTeamlistList = function() {
  return this.setTeamlistList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.Team.TeamPushTeamPlanRes.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Team.TeamPushTeamPlanRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Team.TeamPushTeamPlanRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Team.TeamPushTeamPlanRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Team.TeamPushTeamPlanRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    teamplaninfolistList: jspb.Message.toObjectList(msg.getTeamplaninfolistList(),
    proto.PbModel.Team.TeamPlanInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Team.TeamPushTeamPlanRes}
 */
proto.PbModel.Team.TeamPushTeamPlanRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Team.TeamPushTeamPlanRes;
  return proto.PbModel.Team.TeamPushTeamPlanRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Team.TeamPushTeamPlanRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Team.TeamPushTeamPlanRes}
 */
proto.PbModel.Team.TeamPushTeamPlanRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PbModel.Team.TeamPlanInfo;
      reader.readMessage(value,proto.PbModel.Team.TeamPlanInfo.deserializeBinaryFromReader);
      msg.addTeamplaninfolist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Team.TeamPushTeamPlanRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Team.TeamPushTeamPlanRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Team.TeamPushTeamPlanRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Team.TeamPushTeamPlanRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTeamplaninfolistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.PbModel.Team.TeamPlanInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated TeamPlanInfo TeamPlanInfoList = 1;
 * @return {!Array<!proto.PbModel.Team.TeamPlanInfo>}
 */
proto.PbModel.Team.TeamPushTeamPlanRes.prototype.getTeamplaninfolistList = function() {
  return /** @type{!Array<!proto.PbModel.Team.TeamPlanInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.Team.TeamPlanInfo, 1));
};


/**
 * @param {!Array<!proto.PbModel.Team.TeamPlanInfo>} value
 * @return {!proto.PbModel.Team.TeamPushTeamPlanRes} returns this
*/
proto.PbModel.Team.TeamPushTeamPlanRes.prototype.setTeamplaninfolistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.PbModel.Team.TeamPlanInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.Team.TeamPlanInfo}
 */
proto.PbModel.Team.TeamPushTeamPlanRes.prototype.addTeamplaninfolist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.PbModel.Team.TeamPlanInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.Team.TeamPushTeamPlanRes} returns this
 */
proto.PbModel.Team.TeamPushTeamPlanRes.prototype.clearTeamplaninfolistList = function() {
  return this.setTeamplaninfolistList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.Team.TeamInfoHandlerReq.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.Team.TeamInfoHandlerReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.Team.TeamInfoHandlerReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.Team.TeamInfoHandlerReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Team.TeamInfoHandlerReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    mainmoduleid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    teamlistList: jspb.Message.toObjectList(msg.getTeamlistList(),
    proto.PbModel.Team.Team.toObject, includeInstance),
    issavedb: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    conditionstr: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.Team.TeamInfoHandlerReq}
 */
proto.PbModel.Team.TeamInfoHandlerReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.Team.TeamInfoHandlerReq;
  return proto.PbModel.Team.TeamInfoHandlerReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.Team.TeamInfoHandlerReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.Team.TeamInfoHandlerReq}
 */
proto.PbModel.Team.TeamInfoHandlerReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMainmoduleid(value);
      break;
    case 2:
      var value = new proto.PbModel.Team.Team;
      reader.readMessage(value,proto.PbModel.Team.Team.deserializeBinaryFromReader);
      msg.addTeamlist(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIssavedb(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setConditionstr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.Team.TeamInfoHandlerReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.Team.TeamInfoHandlerReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.Team.TeamInfoHandlerReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.Team.TeamInfoHandlerReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMainmoduleid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTeamlistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.PbModel.Team.Team.serializeBinaryToWriter
    );
  }
  f = message.getIssavedb();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getConditionstr();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional int32 MainModuleId = 1;
 * @return {number}
 */
proto.PbModel.Team.TeamInfoHandlerReq.prototype.getMainmoduleid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.Team.TeamInfoHandlerReq} returns this
 */
proto.PbModel.Team.TeamInfoHandlerReq.prototype.setMainmoduleid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated Team TeamList = 2;
 * @return {!Array<!proto.PbModel.Team.Team>}
 */
proto.PbModel.Team.TeamInfoHandlerReq.prototype.getTeamlistList = function() {
  return /** @type{!Array<!proto.PbModel.Team.Team>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.Team.Team, 2));
};


/**
 * @param {!Array<!proto.PbModel.Team.Team>} value
 * @return {!proto.PbModel.Team.TeamInfoHandlerReq} returns this
*/
proto.PbModel.Team.TeamInfoHandlerReq.prototype.setTeamlistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.PbModel.Team.Team=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.Team.Team}
 */
proto.PbModel.Team.TeamInfoHandlerReq.prototype.addTeamlist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.PbModel.Team.Team, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.Team.TeamInfoHandlerReq} returns this
 */
proto.PbModel.Team.TeamInfoHandlerReq.prototype.clearTeamlistList = function() {
  return this.setTeamlistList([]);
};


/**
 * optional bool IsSaveDb = 3;
 * @return {boolean}
 */
proto.PbModel.Team.TeamInfoHandlerReq.prototype.getIssavedb = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PbModel.Team.TeamInfoHandlerReq} returns this
 */
proto.PbModel.Team.TeamInfoHandlerReq.prototype.setIssavedb = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional string ConditionStr = 4;
 * @return {string}
 */
proto.PbModel.Team.TeamInfoHandlerReq.prototype.getConditionstr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.Team.TeamInfoHandlerReq} returns this
 */
proto.PbModel.Team.TeamInfoHandlerReq.prototype.setConditionstr = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


goog.object.extend(exports, proto.PbModel.Team);
