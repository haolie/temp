// source: ChargeGift.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.PbModel.ChargeGift.ChargeGiftGetInfoReq', null, global);
goog.exportSymbol('proto.PbModel.ChargeGift.ChargeGiftGetInfoRes', null, global);
goog.exportSymbol('proto.PbModel.ChargeGift.ChargeGiftGroup', null, global);
goog.exportSymbol('proto.PbModel.ChargeGift.ChargeGiftItem', null, global);
goog.exportSymbol('proto.PbModel.ChargeGift.ChargeGiftPoolItem', null, global);
goog.exportSymbol('proto.PbModel.ChargeGift.ChargeGiftResetReq', null, global);
goog.exportSymbol('proto.PbModel.ChargeGift.ChargeGiftResetRes', null, global);
goog.exportSymbol('proto.PbModel.ChargeGift.ChargeGiftSelectEndRewardReq', null, global);
goog.exportSymbol('proto.PbModel.ChargeGift.ChargeGiftSelectEndRewardRes', null, global);
goog.exportSymbol('proto.PbModel.ChargeGift.ChargeGiftSelectGiftRewardReq', null, global);
goog.exportSymbol('proto.PbModel.ChargeGift.ChargeGiftSelectGiftRewardRes', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.ChargeGift.ChargeGiftGroup = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.ChargeGift.ChargeGiftGroup.repeatedFields_, null);
};
goog.inherits(proto.PbModel.ChargeGift.ChargeGiftGroup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.ChargeGift.ChargeGiftGroup.displayName = 'proto.PbModel.ChargeGift.ChargeGiftGroup';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.ChargeGift.ChargeGiftItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.ChargeGift.ChargeGiftItem.repeatedFields_, null);
};
goog.inherits(proto.PbModel.ChargeGift.ChargeGiftItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.ChargeGift.ChargeGiftItem.displayName = 'proto.PbModel.ChargeGift.ChargeGiftItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.ChargeGift.ChargeGiftPoolItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.ChargeGift.ChargeGiftPoolItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.ChargeGift.ChargeGiftPoolItem.displayName = 'proto.PbModel.ChargeGift.ChargeGiftPoolItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.ChargeGift.ChargeGiftGetInfoReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.ChargeGift.ChargeGiftGetInfoReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.ChargeGift.ChargeGiftGetInfoReq.displayName = 'proto.PbModel.ChargeGift.ChargeGiftGetInfoReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.ChargeGift.ChargeGiftGetInfoRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.ChargeGift.ChargeGiftGetInfoRes.repeatedFields_, null);
};
goog.inherits(proto.PbModel.ChargeGift.ChargeGiftGetInfoRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.ChargeGift.ChargeGiftGetInfoRes.displayName = 'proto.PbModel.ChargeGift.ChargeGiftGetInfoRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.ChargeGift.ChargeGiftResetReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.ChargeGift.ChargeGiftResetReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.ChargeGift.ChargeGiftResetReq.displayName = 'proto.PbModel.ChargeGift.ChargeGiftResetReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.ChargeGift.ChargeGiftResetRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.ChargeGift.ChargeGiftResetRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.ChargeGift.ChargeGiftResetRes.displayName = 'proto.PbModel.ChargeGift.ChargeGiftResetRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.ChargeGift.ChargeGiftSelectEndRewardReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.ChargeGift.ChargeGiftSelectEndRewardReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.ChargeGift.ChargeGiftSelectEndRewardReq.displayName = 'proto.PbModel.ChargeGift.ChargeGiftSelectEndRewardReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.ChargeGift.ChargeGiftSelectEndRewardRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.ChargeGift.ChargeGiftSelectEndRewardRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.ChargeGift.ChargeGiftSelectEndRewardRes.displayName = 'proto.PbModel.ChargeGift.ChargeGiftSelectEndRewardRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.ChargeGift.ChargeGiftSelectGiftRewardReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.ChargeGift.ChargeGiftSelectGiftRewardReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.ChargeGift.ChargeGiftSelectGiftRewardReq.displayName = 'proto.PbModel.ChargeGift.ChargeGiftSelectGiftRewardReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.ChargeGift.ChargeGiftSelectGiftRewardRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.ChargeGift.ChargeGiftSelectGiftRewardRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.ChargeGift.ChargeGiftSelectGiftRewardRes.displayName = 'proto.PbModel.ChargeGift.ChargeGiftSelectGiftRewardRes';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.ChargeGift.ChargeGiftGroup.repeatedFields_ = [7,11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.ChargeGift.ChargeGiftGroup.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.ChargeGift.ChargeGiftGroup.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.ChargeGift.ChargeGiftGroup} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.ChargeGift.ChargeGiftGroup.toObject = function(includeInstance, msg) {
  var f, obj = {
    gifttypeid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    showname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    price: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    productid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    turnnum: jspb.Message.getFieldWithDefault(msg, 5, 0),
    turncount: jspb.Message.getFieldWithDefault(msg, 6, 0),
    giftlistList: jspb.Message.toObjectList(msg.getGiftlistList(),
    proto.PbModel.ChargeGift.ChargeGiftItem.toObject, includeInstance),
    hasnew: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    isbuytoday: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    reward: jspb.Message.getFieldWithDefault(msg, 10, ""),
    rewardpoolList: jspb.Message.toObjectList(msg.getRewardpoolList(),
    proto.PbModel.ChargeGift.ChargeGiftPoolItem.toObject, includeInstance),
    selectmapMap: (f = msg.getSelectmapMap()) ? f.toObject(includeInstance, undefined) : [],
    buycount: jspb.Message.getFieldWithDefault(msg, 13, 0),
    canreset: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),
    isnewfirstday: jspb.Message.getBooleanFieldWithDefault(msg, 15, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.ChargeGift.ChargeGiftGroup}
 */
proto.PbModel.ChargeGift.ChargeGiftGroup.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.ChargeGift.ChargeGiftGroup;
  return proto.PbModel.ChargeGift.ChargeGiftGroup.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.ChargeGift.ChargeGiftGroup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.ChargeGift.ChargeGiftGroup}
 */
proto.PbModel.ChargeGift.ChargeGiftGroup.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGifttypeid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setShowname(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrice(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTurnnum(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTurncount(value);
      break;
    case 7:
      var value = new proto.PbModel.ChargeGift.ChargeGiftItem;
      reader.readMessage(value,proto.PbModel.ChargeGift.ChargeGiftItem.deserializeBinaryFromReader);
      msg.addGiftlist(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHasnew(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsbuytoday(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setReward(value);
      break;
    case 11:
      var value = new proto.PbModel.ChargeGift.ChargeGiftPoolItem;
      reader.readMessage(value,proto.PbModel.ChargeGift.ChargeGiftPoolItem.deserializeBinaryFromReader);
      msg.addRewardpool(value);
      break;
    case 12:
      var value = msg.getSelectmapMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readInt32, null, 0, 0);
         });
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBuycount(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCanreset(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsnewfirstday(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.ChargeGift.ChargeGiftGroup.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.ChargeGift.ChargeGiftGroup.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.ChargeGift.ChargeGiftGroup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.ChargeGift.ChargeGiftGroup.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGifttypeid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getShowname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getProductid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTurnnum();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getTurncount();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getGiftlistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.PbModel.ChargeGift.ChargeGiftItem.serializeBinaryToWriter
    );
  }
  f = message.getHasnew();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getIsbuytoday();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getReward();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getRewardpoolList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      proto.PbModel.ChargeGift.ChargeGiftPoolItem.serializeBinaryToWriter
    );
  }
  f = message.getSelectmapMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(12, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeInt32);
  }
  f = message.getBuycount();
  if (f !== 0) {
    writer.writeInt32(
      13,
      f
    );
  }
  f = message.getCanreset();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getIsnewfirstday();
  if (f) {
    writer.writeBool(
      15,
      f
    );
  }
};


/**
 * optional int32 GiftTypeId = 1;
 * @return {number}
 */
proto.PbModel.ChargeGift.ChargeGiftGroup.prototype.getGifttypeid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.ChargeGift.ChargeGiftGroup} returns this
 */
proto.PbModel.ChargeGift.ChargeGiftGroup.prototype.setGifttypeid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string ShowName = 2;
 * @return {string}
 */
proto.PbModel.ChargeGift.ChargeGiftGroup.prototype.getShowname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.ChargeGift.ChargeGiftGroup} returns this
 */
proto.PbModel.ChargeGift.ChargeGiftGroup.prototype.setShowname = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional double Price = 3;
 * @return {number}
 */
proto.PbModel.ChargeGift.ChargeGiftGroup.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.ChargeGift.ChargeGiftGroup} returns this
 */
proto.PbModel.ChargeGift.ChargeGiftGroup.prototype.setPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional string ProductId = 4;
 * @return {string}
 */
proto.PbModel.ChargeGift.ChargeGiftGroup.prototype.getProductid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.ChargeGift.ChargeGiftGroup} returns this
 */
proto.PbModel.ChargeGift.ChargeGiftGroup.prototype.setProductid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 TurnNum = 5;
 * @return {number}
 */
proto.PbModel.ChargeGift.ChargeGiftGroup.prototype.getTurnnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.ChargeGift.ChargeGiftGroup} returns this
 */
proto.PbModel.ChargeGift.ChargeGiftGroup.prototype.setTurnnum = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 TurnCount = 6;
 * @return {number}
 */
proto.PbModel.ChargeGift.ChargeGiftGroup.prototype.getTurncount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.ChargeGift.ChargeGiftGroup} returns this
 */
proto.PbModel.ChargeGift.ChargeGiftGroup.prototype.setTurncount = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * repeated ChargeGiftItem GiftList = 7;
 * @return {!Array<!proto.PbModel.ChargeGift.ChargeGiftItem>}
 */
proto.PbModel.ChargeGift.ChargeGiftGroup.prototype.getGiftlistList = function() {
  return /** @type{!Array<!proto.PbModel.ChargeGift.ChargeGiftItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.ChargeGift.ChargeGiftItem, 7));
};


/**
 * @param {!Array<!proto.PbModel.ChargeGift.ChargeGiftItem>} value
 * @return {!proto.PbModel.ChargeGift.ChargeGiftGroup} returns this
*/
proto.PbModel.ChargeGift.ChargeGiftGroup.prototype.setGiftlistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.PbModel.ChargeGift.ChargeGiftItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.ChargeGift.ChargeGiftItem}
 */
proto.PbModel.ChargeGift.ChargeGiftGroup.prototype.addGiftlist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.PbModel.ChargeGift.ChargeGiftItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.ChargeGift.ChargeGiftGroup} returns this
 */
proto.PbModel.ChargeGift.ChargeGiftGroup.prototype.clearGiftlistList = function() {
  return this.setGiftlistList([]);
};


/**
 * optional bool HasNew = 8;
 * @return {boolean}
 */
proto.PbModel.ChargeGift.ChargeGiftGroup.prototype.getHasnew = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PbModel.ChargeGift.ChargeGiftGroup} returns this
 */
proto.PbModel.ChargeGift.ChargeGiftGroup.prototype.setHasnew = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional bool IsBuyToday = 9;
 * @return {boolean}
 */
proto.PbModel.ChargeGift.ChargeGiftGroup.prototype.getIsbuytoday = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PbModel.ChargeGift.ChargeGiftGroup} returns this
 */
proto.PbModel.ChargeGift.ChargeGiftGroup.prototype.setIsbuytoday = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional string Reward = 10;
 * @return {string}
 */
proto.PbModel.ChargeGift.ChargeGiftGroup.prototype.getReward = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.ChargeGift.ChargeGiftGroup} returns this
 */
proto.PbModel.ChargeGift.ChargeGiftGroup.prototype.setReward = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * repeated ChargeGiftPoolItem RewardPool = 11;
 * @return {!Array<!proto.PbModel.ChargeGift.ChargeGiftPoolItem>}
 */
proto.PbModel.ChargeGift.ChargeGiftGroup.prototype.getRewardpoolList = function() {
  return /** @type{!Array<!proto.PbModel.ChargeGift.ChargeGiftPoolItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.ChargeGift.ChargeGiftPoolItem, 11));
};


/**
 * @param {!Array<!proto.PbModel.ChargeGift.ChargeGiftPoolItem>} value
 * @return {!proto.PbModel.ChargeGift.ChargeGiftGroup} returns this
*/
proto.PbModel.ChargeGift.ChargeGiftGroup.prototype.setRewardpoolList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.PbModel.ChargeGift.ChargeGiftPoolItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.ChargeGift.ChargeGiftPoolItem}
 */
proto.PbModel.ChargeGift.ChargeGiftGroup.prototype.addRewardpool = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.PbModel.ChargeGift.ChargeGiftPoolItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.ChargeGift.ChargeGiftGroup} returns this
 */
proto.PbModel.ChargeGift.ChargeGiftGroup.prototype.clearRewardpoolList = function() {
  return this.setRewardpoolList([]);
};


/**
 * map<int32, int32> SelectMap = 12;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,number>}
 */
proto.PbModel.ChargeGift.ChargeGiftGroup.prototype.getSelectmapMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,number>} */ (
      jspb.Message.getMapField(this, 12, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.PbModel.ChargeGift.ChargeGiftGroup} returns this
 */
proto.PbModel.ChargeGift.ChargeGiftGroup.prototype.clearSelectmapMap = function() {
  this.getSelectmapMap().clear();
  return this;};


/**
 * optional int32 BuyCount = 13;
 * @return {number}
 */
proto.PbModel.ChargeGift.ChargeGiftGroup.prototype.getBuycount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.ChargeGift.ChargeGiftGroup} returns this
 */
proto.PbModel.ChargeGift.ChargeGiftGroup.prototype.setBuycount = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional bool CanReset = 14;
 * @return {boolean}
 */
proto.PbModel.ChargeGift.ChargeGiftGroup.prototype.getCanreset = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PbModel.ChargeGift.ChargeGiftGroup} returns this
 */
proto.PbModel.ChargeGift.ChargeGiftGroup.prototype.setCanreset = function(value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * optional bool IsNewFirstDay = 15;
 * @return {boolean}
 */
proto.PbModel.ChargeGift.ChargeGiftGroup.prototype.getIsnewfirstday = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PbModel.ChargeGift.ChargeGiftGroup} returns this
 */
proto.PbModel.ChargeGift.ChargeGiftGroup.prototype.setIsnewfirstday = function(value) {
  return jspb.Message.setProto3BooleanField(this, 15, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.ChargeGift.ChargeGiftItem.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.ChargeGift.ChargeGiftItem.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.ChargeGift.ChargeGiftItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.ChargeGift.ChargeGiftItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.ChargeGift.ChargeGiftItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    giftid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    reward: jspb.Message.getFieldWithDefault(msg, 2, ""),
    rewardpoolList: jspb.Message.toObjectList(msg.getRewardpoolList(),
    proto.PbModel.ChargeGift.ChargeGiftPoolItem.toObject, includeInstance),
    selectmapMap: (f = msg.getSelectmapMap()) ? f.toObject(includeInstance, undefined) : [],
    hasnew: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.ChargeGift.ChargeGiftItem}
 */
proto.PbModel.ChargeGift.ChargeGiftItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.ChargeGift.ChargeGiftItem;
  return proto.PbModel.ChargeGift.ChargeGiftItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.ChargeGift.ChargeGiftItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.ChargeGift.ChargeGiftItem}
 */
proto.PbModel.ChargeGift.ChargeGiftItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGiftid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setReward(value);
      break;
    case 3:
      var value = new proto.PbModel.ChargeGift.ChargeGiftPoolItem;
      reader.readMessage(value,proto.PbModel.ChargeGift.ChargeGiftPoolItem.deserializeBinaryFromReader);
      msg.addRewardpool(value);
      break;
    case 4:
      var value = msg.getSelectmapMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readInt32, null, 0, 0);
         });
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHasnew(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.ChargeGift.ChargeGiftItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.ChargeGift.ChargeGiftItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.ChargeGift.ChargeGiftItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.ChargeGift.ChargeGiftItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGiftid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getReward();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRewardpoolList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.PbModel.ChargeGift.ChargeGiftPoolItem.serializeBinaryToWriter
    );
  }
  f = message.getSelectmapMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeInt32);
  }
  f = message.getHasnew();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional int32 GiftId = 1;
 * @return {number}
 */
proto.PbModel.ChargeGift.ChargeGiftItem.prototype.getGiftid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.ChargeGift.ChargeGiftItem} returns this
 */
proto.PbModel.ChargeGift.ChargeGiftItem.prototype.setGiftid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string Reward = 2;
 * @return {string}
 */
proto.PbModel.ChargeGift.ChargeGiftItem.prototype.getReward = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.ChargeGift.ChargeGiftItem} returns this
 */
proto.PbModel.ChargeGift.ChargeGiftItem.prototype.setReward = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated ChargeGiftPoolItem RewardPool = 3;
 * @return {!Array<!proto.PbModel.ChargeGift.ChargeGiftPoolItem>}
 */
proto.PbModel.ChargeGift.ChargeGiftItem.prototype.getRewardpoolList = function() {
  return /** @type{!Array<!proto.PbModel.ChargeGift.ChargeGiftPoolItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.ChargeGift.ChargeGiftPoolItem, 3));
};


/**
 * @param {!Array<!proto.PbModel.ChargeGift.ChargeGiftPoolItem>} value
 * @return {!proto.PbModel.ChargeGift.ChargeGiftItem} returns this
*/
proto.PbModel.ChargeGift.ChargeGiftItem.prototype.setRewardpoolList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.PbModel.ChargeGift.ChargeGiftPoolItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.ChargeGift.ChargeGiftPoolItem}
 */
proto.PbModel.ChargeGift.ChargeGiftItem.prototype.addRewardpool = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.PbModel.ChargeGift.ChargeGiftPoolItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.ChargeGift.ChargeGiftItem} returns this
 */
proto.PbModel.ChargeGift.ChargeGiftItem.prototype.clearRewardpoolList = function() {
  return this.setRewardpoolList([]);
};


/**
 * map<int32, int32> SelectMap = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,number>}
 */
proto.PbModel.ChargeGift.ChargeGiftItem.prototype.getSelectmapMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,number>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.PbModel.ChargeGift.ChargeGiftItem} returns this
 */
proto.PbModel.ChargeGift.ChargeGiftItem.prototype.clearSelectmapMap = function() {
  this.getSelectmapMap().clear();
  return this;};


/**
 * optional bool HasNew = 5;
 * @return {boolean}
 */
proto.PbModel.ChargeGift.ChargeGiftItem.prototype.getHasnew = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PbModel.ChargeGift.ChargeGiftItem} returns this
 */
proto.PbModel.ChargeGift.ChargeGiftItem.prototype.setHasnew = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.ChargeGift.ChargeGiftPoolItem.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.ChargeGift.ChargeGiftPoolItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.ChargeGift.ChargeGiftPoolItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.ChargeGift.ChargeGiftPoolItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    order: jspb.Message.getFieldWithDefault(msg, 2, 0),
    reward: jspb.Message.getFieldWithDefault(msg, 3, ""),
    isnew: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.ChargeGift.ChargeGiftPoolItem}
 */
proto.PbModel.ChargeGift.ChargeGiftPoolItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.ChargeGift.ChargeGiftPoolItem;
  return proto.PbModel.ChargeGift.ChargeGiftPoolItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.ChargeGift.ChargeGiftPoolItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.ChargeGift.ChargeGiftPoolItem}
 */
proto.PbModel.ChargeGift.ChargeGiftPoolItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOrder(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setReward(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsnew(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.ChargeGift.ChargeGiftPoolItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.ChargeGift.ChargeGiftPoolItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.ChargeGift.ChargeGiftPoolItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.ChargeGift.ChargeGiftPoolItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getOrder();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getReward();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIsnew();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional int32 Id = 1;
 * @return {number}
 */
proto.PbModel.ChargeGift.ChargeGiftPoolItem.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.ChargeGift.ChargeGiftPoolItem} returns this
 */
proto.PbModel.ChargeGift.ChargeGiftPoolItem.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 Order = 2;
 * @return {number}
 */
proto.PbModel.ChargeGift.ChargeGiftPoolItem.prototype.getOrder = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.ChargeGift.ChargeGiftPoolItem} returns this
 */
proto.PbModel.ChargeGift.ChargeGiftPoolItem.prototype.setOrder = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string Reward = 3;
 * @return {string}
 */
proto.PbModel.ChargeGift.ChargeGiftPoolItem.prototype.getReward = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.ChargeGift.ChargeGiftPoolItem} returns this
 */
proto.PbModel.ChargeGift.ChargeGiftPoolItem.prototype.setReward = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool IsNew = 4;
 * @return {boolean}
 */
proto.PbModel.ChargeGift.ChargeGiftPoolItem.prototype.getIsnew = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PbModel.ChargeGift.ChargeGiftPoolItem} returns this
 */
proto.PbModel.ChargeGift.ChargeGiftPoolItem.prototype.setIsnew = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.ChargeGift.ChargeGiftGetInfoReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.ChargeGift.ChargeGiftGetInfoReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.ChargeGift.ChargeGiftGetInfoReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.ChargeGift.ChargeGiftGetInfoReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    activityid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.ChargeGift.ChargeGiftGetInfoReq}
 */
proto.PbModel.ChargeGift.ChargeGiftGetInfoReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.ChargeGift.ChargeGiftGetInfoReq;
  return proto.PbModel.ChargeGift.ChargeGiftGetInfoReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.ChargeGift.ChargeGiftGetInfoReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.ChargeGift.ChargeGiftGetInfoReq}
 */
proto.PbModel.ChargeGift.ChargeGiftGetInfoReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setActivityid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.ChargeGift.ChargeGiftGetInfoReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.ChargeGift.ChargeGiftGetInfoReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.ChargeGift.ChargeGiftGetInfoReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.ChargeGift.ChargeGiftGetInfoReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActivityid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 ActivityId = 1;
 * @return {number}
 */
proto.PbModel.ChargeGift.ChargeGiftGetInfoReq.prototype.getActivityid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.ChargeGift.ChargeGiftGetInfoReq} returns this
 */
proto.PbModel.ChargeGift.ChargeGiftGetInfoReq.prototype.setActivityid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.ChargeGift.ChargeGiftGetInfoRes.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.ChargeGift.ChargeGiftGetInfoRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.ChargeGift.ChargeGiftGetInfoRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.ChargeGift.ChargeGiftGetInfoRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.ChargeGift.ChargeGiftGetInfoRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    grouplistList: jspb.Message.toObjectList(msg.getGrouplistList(),
    proto.PbModel.ChargeGift.ChargeGiftGroup.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.ChargeGift.ChargeGiftGetInfoRes}
 */
proto.PbModel.ChargeGift.ChargeGiftGetInfoRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.ChargeGift.ChargeGiftGetInfoRes;
  return proto.PbModel.ChargeGift.ChargeGiftGetInfoRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.ChargeGift.ChargeGiftGetInfoRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.ChargeGift.ChargeGiftGetInfoRes}
 */
proto.PbModel.ChargeGift.ChargeGiftGetInfoRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 7:
      var value = new proto.PbModel.ChargeGift.ChargeGiftGroup;
      reader.readMessage(value,proto.PbModel.ChargeGift.ChargeGiftGroup.deserializeBinaryFromReader);
      msg.addGrouplist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.ChargeGift.ChargeGiftGetInfoRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.ChargeGift.ChargeGiftGetInfoRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.ChargeGift.ChargeGiftGetInfoRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.ChargeGift.ChargeGiftGetInfoRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGrouplistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.PbModel.ChargeGift.ChargeGiftGroup.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ChargeGiftGroup GroupList = 7;
 * @return {!Array<!proto.PbModel.ChargeGift.ChargeGiftGroup>}
 */
proto.PbModel.ChargeGift.ChargeGiftGetInfoRes.prototype.getGrouplistList = function() {
  return /** @type{!Array<!proto.PbModel.ChargeGift.ChargeGiftGroup>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.ChargeGift.ChargeGiftGroup, 7));
};


/**
 * @param {!Array<!proto.PbModel.ChargeGift.ChargeGiftGroup>} value
 * @return {!proto.PbModel.ChargeGift.ChargeGiftGetInfoRes} returns this
*/
proto.PbModel.ChargeGift.ChargeGiftGetInfoRes.prototype.setGrouplistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.PbModel.ChargeGift.ChargeGiftGroup=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.ChargeGift.ChargeGiftGroup}
 */
proto.PbModel.ChargeGift.ChargeGiftGetInfoRes.prototype.addGrouplist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.PbModel.ChargeGift.ChargeGiftGroup, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.ChargeGift.ChargeGiftGetInfoRes} returns this
 */
proto.PbModel.ChargeGift.ChargeGiftGetInfoRes.prototype.clearGrouplistList = function() {
  return this.setGrouplistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.ChargeGift.ChargeGiftResetReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.ChargeGift.ChargeGiftResetReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.ChargeGift.ChargeGiftResetReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.ChargeGift.ChargeGiftResetReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    activityid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    gifttypeid: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.ChargeGift.ChargeGiftResetReq}
 */
proto.PbModel.ChargeGift.ChargeGiftResetReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.ChargeGift.ChargeGiftResetReq;
  return proto.PbModel.ChargeGift.ChargeGiftResetReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.ChargeGift.ChargeGiftResetReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.ChargeGift.ChargeGiftResetReq}
 */
proto.PbModel.ChargeGift.ChargeGiftResetReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setActivityid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGifttypeid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.ChargeGift.ChargeGiftResetReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.ChargeGift.ChargeGiftResetReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.ChargeGift.ChargeGiftResetReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.ChargeGift.ChargeGiftResetReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActivityid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getGifttypeid();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 ActivityId = 1;
 * @return {number}
 */
proto.PbModel.ChargeGift.ChargeGiftResetReq.prototype.getActivityid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.ChargeGift.ChargeGiftResetReq} returns this
 */
proto.PbModel.ChargeGift.ChargeGiftResetReq.prototype.setActivityid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 GiftTypeId = 2;
 * @return {number}
 */
proto.PbModel.ChargeGift.ChargeGiftResetReq.prototype.getGifttypeid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.ChargeGift.ChargeGiftResetReq} returns this
 */
proto.PbModel.ChargeGift.ChargeGiftResetReq.prototype.setGifttypeid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.ChargeGift.ChargeGiftResetRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.ChargeGift.ChargeGiftResetRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.ChargeGift.ChargeGiftResetRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.ChargeGift.ChargeGiftResetRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    group: (f = msg.getGroup()) && proto.PbModel.ChargeGift.ChargeGiftGroup.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.ChargeGift.ChargeGiftResetRes}
 */
proto.PbModel.ChargeGift.ChargeGiftResetRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.ChargeGift.ChargeGiftResetRes;
  return proto.PbModel.ChargeGift.ChargeGiftResetRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.ChargeGift.ChargeGiftResetRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.ChargeGift.ChargeGiftResetRes}
 */
proto.PbModel.ChargeGift.ChargeGiftResetRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PbModel.ChargeGift.ChargeGiftGroup;
      reader.readMessage(value,proto.PbModel.ChargeGift.ChargeGiftGroup.deserializeBinaryFromReader);
      msg.setGroup(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.ChargeGift.ChargeGiftResetRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.ChargeGift.ChargeGiftResetRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.ChargeGift.ChargeGiftResetRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.ChargeGift.ChargeGiftResetRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroup();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.PbModel.ChargeGift.ChargeGiftGroup.serializeBinaryToWriter
    );
  }
};


/**
 * optional ChargeGiftGroup Group = 1;
 * @return {?proto.PbModel.ChargeGift.ChargeGiftGroup}
 */
proto.PbModel.ChargeGift.ChargeGiftResetRes.prototype.getGroup = function() {
  return /** @type{?proto.PbModel.ChargeGift.ChargeGiftGroup} */ (
    jspb.Message.getWrapperField(this, proto.PbModel.ChargeGift.ChargeGiftGroup, 1));
};


/**
 * @param {?proto.PbModel.ChargeGift.ChargeGiftGroup|undefined} value
 * @return {!proto.PbModel.ChargeGift.ChargeGiftResetRes} returns this
*/
proto.PbModel.ChargeGift.ChargeGiftResetRes.prototype.setGroup = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.ChargeGift.ChargeGiftResetRes} returns this
 */
proto.PbModel.ChargeGift.ChargeGiftResetRes.prototype.clearGroup = function() {
  return this.setGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.ChargeGift.ChargeGiftResetRes.prototype.hasGroup = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.ChargeGift.ChargeGiftSelectEndRewardReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.ChargeGift.ChargeGiftSelectEndRewardReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.ChargeGift.ChargeGiftSelectEndRewardReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.ChargeGift.ChargeGiftSelectEndRewardReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    activityid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    gifttypeid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    selectmapMap: (f = msg.getSelectmapMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.ChargeGift.ChargeGiftSelectEndRewardReq}
 */
proto.PbModel.ChargeGift.ChargeGiftSelectEndRewardReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.ChargeGift.ChargeGiftSelectEndRewardReq;
  return proto.PbModel.ChargeGift.ChargeGiftSelectEndRewardReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.ChargeGift.ChargeGiftSelectEndRewardReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.ChargeGift.ChargeGiftSelectEndRewardReq}
 */
proto.PbModel.ChargeGift.ChargeGiftSelectEndRewardReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setActivityid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGifttypeid(value);
      break;
    case 3:
      var value = msg.getSelectmapMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readInt32, null, 0, 0);
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.ChargeGift.ChargeGiftSelectEndRewardReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.ChargeGift.ChargeGiftSelectEndRewardReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.ChargeGift.ChargeGiftSelectEndRewardReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.ChargeGift.ChargeGiftSelectEndRewardReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActivityid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getGifttypeid();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getSelectmapMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeInt32);
  }
};


/**
 * optional int32 ActivityId = 1;
 * @return {number}
 */
proto.PbModel.ChargeGift.ChargeGiftSelectEndRewardReq.prototype.getActivityid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.ChargeGift.ChargeGiftSelectEndRewardReq} returns this
 */
proto.PbModel.ChargeGift.ChargeGiftSelectEndRewardReq.prototype.setActivityid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 GiftTypeId = 2;
 * @return {number}
 */
proto.PbModel.ChargeGift.ChargeGiftSelectEndRewardReq.prototype.getGifttypeid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.ChargeGift.ChargeGiftSelectEndRewardReq} returns this
 */
proto.PbModel.ChargeGift.ChargeGiftSelectEndRewardReq.prototype.setGifttypeid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * map<int32, int32> SelectMap = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,number>}
 */
proto.PbModel.ChargeGift.ChargeGiftSelectEndRewardReq.prototype.getSelectmapMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,number>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.PbModel.ChargeGift.ChargeGiftSelectEndRewardReq} returns this
 */
proto.PbModel.ChargeGift.ChargeGiftSelectEndRewardReq.prototype.clearSelectmapMap = function() {
  this.getSelectmapMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.ChargeGift.ChargeGiftSelectEndRewardRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.ChargeGift.ChargeGiftSelectEndRewardRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.ChargeGift.ChargeGiftSelectEndRewardRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.ChargeGift.ChargeGiftSelectEndRewardRes.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.ChargeGift.ChargeGiftSelectEndRewardRes}
 */
proto.PbModel.ChargeGift.ChargeGiftSelectEndRewardRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.ChargeGift.ChargeGiftSelectEndRewardRes;
  return proto.PbModel.ChargeGift.ChargeGiftSelectEndRewardRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.ChargeGift.ChargeGiftSelectEndRewardRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.ChargeGift.ChargeGiftSelectEndRewardRes}
 */
proto.PbModel.ChargeGift.ChargeGiftSelectEndRewardRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.ChargeGift.ChargeGiftSelectEndRewardRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.ChargeGift.ChargeGiftSelectEndRewardRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.ChargeGift.ChargeGiftSelectEndRewardRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.ChargeGift.ChargeGiftSelectEndRewardRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.ChargeGift.ChargeGiftSelectGiftRewardReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.ChargeGift.ChargeGiftSelectGiftRewardReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.ChargeGift.ChargeGiftSelectGiftRewardReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.ChargeGift.ChargeGiftSelectGiftRewardReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    activityid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    giftid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    selectmapMap: (f = msg.getSelectmapMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.ChargeGift.ChargeGiftSelectGiftRewardReq}
 */
proto.PbModel.ChargeGift.ChargeGiftSelectGiftRewardReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.ChargeGift.ChargeGiftSelectGiftRewardReq;
  return proto.PbModel.ChargeGift.ChargeGiftSelectGiftRewardReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.ChargeGift.ChargeGiftSelectGiftRewardReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.ChargeGift.ChargeGiftSelectGiftRewardReq}
 */
proto.PbModel.ChargeGift.ChargeGiftSelectGiftRewardReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setActivityid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGiftid(value);
      break;
    case 3:
      var value = msg.getSelectmapMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readInt32, null, 0, 0);
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.ChargeGift.ChargeGiftSelectGiftRewardReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.ChargeGift.ChargeGiftSelectGiftRewardReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.ChargeGift.ChargeGiftSelectGiftRewardReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.ChargeGift.ChargeGiftSelectGiftRewardReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActivityid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getGiftid();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getSelectmapMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeInt32);
  }
};


/**
 * optional int32 ActivityId = 1;
 * @return {number}
 */
proto.PbModel.ChargeGift.ChargeGiftSelectGiftRewardReq.prototype.getActivityid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.ChargeGift.ChargeGiftSelectGiftRewardReq} returns this
 */
proto.PbModel.ChargeGift.ChargeGiftSelectGiftRewardReq.prototype.setActivityid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 GiftId = 2;
 * @return {number}
 */
proto.PbModel.ChargeGift.ChargeGiftSelectGiftRewardReq.prototype.getGiftid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.ChargeGift.ChargeGiftSelectGiftRewardReq} returns this
 */
proto.PbModel.ChargeGift.ChargeGiftSelectGiftRewardReq.prototype.setGiftid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * map<int32, int32> SelectMap = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,number>}
 */
proto.PbModel.ChargeGift.ChargeGiftSelectGiftRewardReq.prototype.getSelectmapMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,number>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.PbModel.ChargeGift.ChargeGiftSelectGiftRewardReq} returns this
 */
proto.PbModel.ChargeGift.ChargeGiftSelectGiftRewardReq.prototype.clearSelectmapMap = function() {
  this.getSelectmapMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.ChargeGift.ChargeGiftSelectGiftRewardRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.ChargeGift.ChargeGiftSelectGiftRewardRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.ChargeGift.ChargeGiftSelectGiftRewardRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.ChargeGift.ChargeGiftSelectGiftRewardRes.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.ChargeGift.ChargeGiftSelectGiftRewardRes}
 */
proto.PbModel.ChargeGift.ChargeGiftSelectGiftRewardRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.ChargeGift.ChargeGiftSelectGiftRewardRes;
  return proto.PbModel.ChargeGift.ChargeGiftSelectGiftRewardRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.ChargeGift.ChargeGiftSelectGiftRewardRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.ChargeGift.ChargeGiftSelectGiftRewardRes}
 */
proto.PbModel.ChargeGift.ChargeGiftSelectGiftRewardRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.ChargeGift.ChargeGiftSelectGiftRewardRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.ChargeGift.ChargeGiftSelectGiftRewardRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.ChargeGift.ChargeGiftSelectGiftRewardRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.ChargeGift.ChargeGiftSelectGiftRewardRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


goog.object.extend(exports, proto.PbModel.ChargeGift);
