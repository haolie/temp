// source: ChargeFirst.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var Resource_pb = require('./Resource_pb.js');
goog.object.extend(proto, Resource_pb);
goog.exportSymbol('proto.PbModel.ChargeFirst.ChargeFirstConfig', null, global);
goog.exportSymbol('proto.PbModel.ChargeFirst.ChargeFirstDrawChargeBoxReq', null, global);
goog.exportSymbol('proto.PbModel.ChargeFirst.ChargeFirstDrawChargeBoxRes', null, global);
goog.exportSymbol('proto.PbModel.ChargeFirst.ChargeFirstDrawNumDayInfo', null, global);
goog.exportSymbol('proto.PbModel.ChargeFirst.ChargeFirstDrawNumInfo', null, global);
goog.exportSymbol('proto.PbModel.ChargeFirst.ChargeFirstGetInfoReq', null, global);
goog.exportSymbol('proto.PbModel.ChargeFirst.ChargeFirstGetInfoRes', null, global);
goog.exportSymbol('proto.PbModel.ChargeFirst.ChargeFirstPushChargeBoxInfoRes', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.ChargeFirst.ChargeFirstDrawChargeBoxReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.ChargeFirst.ChargeFirstDrawChargeBoxReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.ChargeFirst.ChargeFirstDrawChargeBoxReq.displayName = 'proto.PbModel.ChargeFirst.ChargeFirstDrawChargeBoxReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.ChargeFirst.ChargeFirstDrawChargeBoxRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.ChargeFirst.ChargeFirstDrawChargeBoxRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.ChargeFirst.ChargeFirstDrawChargeBoxRes.displayName = 'proto.PbModel.ChargeFirst.ChargeFirstDrawChargeBoxRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.ChargeFirst.ChargeFirstGetInfoReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.ChargeFirst.ChargeFirstGetInfoReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.ChargeFirst.ChargeFirstGetInfoReq.displayName = 'proto.PbModel.ChargeFirst.ChargeFirstGetInfoReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.ChargeFirst.ChargeFirstGetInfoRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.ChargeFirst.ChargeFirstGetInfoRes.repeatedFields_, null);
};
goog.inherits(proto.PbModel.ChargeFirst.ChargeFirstGetInfoRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.ChargeFirst.ChargeFirstGetInfoRes.displayName = 'proto.PbModel.ChargeFirst.ChargeFirstGetInfoRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.ChargeFirst.ChargeFirstDrawNumInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.PbModel.ChargeFirst.ChargeFirstDrawNumInfo.repeatedFields_, null);
};
goog.inherits(proto.PbModel.ChargeFirst.ChargeFirstDrawNumInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.ChargeFirst.ChargeFirstDrawNumInfo.displayName = 'proto.PbModel.ChargeFirst.ChargeFirstDrawNumInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.ChargeFirst.ChargeFirstDrawNumDayInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.ChargeFirst.ChargeFirstDrawNumDayInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.ChargeFirst.ChargeFirstDrawNumDayInfo.displayName = 'proto.PbModel.ChargeFirst.ChargeFirstDrawNumDayInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.ChargeFirst.ChargeFirstConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.ChargeFirst.ChargeFirstConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.ChargeFirst.ChargeFirstConfig.displayName = 'proto.PbModel.ChargeFirst.ChargeFirstConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.ChargeFirst.ChargeFirstPushChargeBoxInfoRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.ChargeFirst.ChargeFirstPushChargeBoxInfoRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.ChargeFirst.ChargeFirstPushChargeBoxInfoRes.displayName = 'proto.PbModel.ChargeFirst.ChargeFirstPushChargeBoxInfoRes';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.ChargeFirst.ChargeFirstDrawChargeBoxReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.ChargeFirst.ChargeFirstDrawChargeBoxReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.ChargeFirst.ChargeFirstDrawChargeBoxReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.ChargeFirst.ChargeFirstDrawChargeBoxReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    num: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.ChargeFirst.ChargeFirstDrawChargeBoxReq}
 */
proto.PbModel.ChargeFirst.ChargeFirstDrawChargeBoxReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.ChargeFirst.ChargeFirstDrawChargeBoxReq;
  return proto.PbModel.ChargeFirst.ChargeFirstDrawChargeBoxReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.ChargeFirst.ChargeFirstDrawChargeBoxReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.ChargeFirst.ChargeFirstDrawChargeBoxReq}
 */
proto.PbModel.ChargeFirst.ChargeFirstDrawChargeBoxReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.ChargeFirst.ChargeFirstDrawChargeBoxReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.ChargeFirst.ChargeFirstDrawChargeBoxReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.ChargeFirst.ChargeFirstDrawChargeBoxReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.ChargeFirst.ChargeFirstDrawChargeBoxReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNum();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 Num = 1;
 * @return {number}
 */
proto.PbModel.ChargeFirst.ChargeFirstDrawChargeBoxReq.prototype.getNum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.ChargeFirst.ChargeFirstDrawChargeBoxReq} returns this
 */
proto.PbModel.ChargeFirst.ChargeFirstDrawChargeBoxReq.prototype.setNum = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.ChargeFirst.ChargeFirstDrawChargeBoxRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.ChargeFirst.ChargeFirstDrawChargeBoxRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.ChargeFirst.ChargeFirstDrawChargeBoxRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.ChargeFirst.ChargeFirstDrawChargeBoxRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    basegetgameresourcelist: (f = msg.getBasegetgameresourcelist()) && Resource_pb.ResourceToClientModel.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.ChargeFirst.ChargeFirstDrawChargeBoxRes}
 */
proto.PbModel.ChargeFirst.ChargeFirstDrawChargeBoxRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.ChargeFirst.ChargeFirstDrawChargeBoxRes;
  return proto.PbModel.ChargeFirst.ChargeFirstDrawChargeBoxRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.ChargeFirst.ChargeFirstDrawChargeBoxRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.ChargeFirst.ChargeFirstDrawChargeBoxRes}
 */
proto.PbModel.ChargeFirst.ChargeFirstDrawChargeBoxRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new Resource_pb.ResourceToClientModel;
      reader.readMessage(value,Resource_pb.ResourceToClientModel.deserializeBinaryFromReader);
      msg.setBasegetgameresourcelist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.ChargeFirst.ChargeFirstDrawChargeBoxRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.ChargeFirst.ChargeFirstDrawChargeBoxRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.ChargeFirst.ChargeFirstDrawChargeBoxRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.ChargeFirst.ChargeFirstDrawChargeBoxRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBasegetgameresourcelist();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      Resource_pb.ResourceToClientModel.serializeBinaryToWriter
    );
  }
};


/**
 * optional PbModel.Resource.ResourceToClientModel BaseGetGameResourceList = 1;
 * @return {?proto.PbModel.Resource.ResourceToClientModel}
 */
proto.PbModel.ChargeFirst.ChargeFirstDrawChargeBoxRes.prototype.getBasegetgameresourcelist = function() {
  return /** @type{?proto.PbModel.Resource.ResourceToClientModel} */ (
    jspb.Message.getWrapperField(this, Resource_pb.ResourceToClientModel, 1));
};


/**
 * @param {?proto.PbModel.Resource.ResourceToClientModel|undefined} value
 * @return {!proto.PbModel.ChargeFirst.ChargeFirstDrawChargeBoxRes} returns this
*/
proto.PbModel.ChargeFirst.ChargeFirstDrawChargeBoxRes.prototype.setBasegetgameresourcelist = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.ChargeFirst.ChargeFirstDrawChargeBoxRes} returns this
 */
proto.PbModel.ChargeFirst.ChargeFirstDrawChargeBoxRes.prototype.clearBasegetgameresourcelist = function() {
  return this.setBasegetgameresourcelist(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.ChargeFirst.ChargeFirstDrawChargeBoxRes.prototype.hasBasegetgameresourcelist = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.ChargeFirst.ChargeFirstGetInfoReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.ChargeFirst.ChargeFirstGetInfoReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.ChargeFirst.ChargeFirstGetInfoReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.ChargeFirst.ChargeFirstGetInfoReq.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.ChargeFirst.ChargeFirstGetInfoReq}
 */
proto.PbModel.ChargeFirst.ChargeFirstGetInfoReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.ChargeFirst.ChargeFirstGetInfoReq;
  return proto.PbModel.ChargeFirst.ChargeFirstGetInfoReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.ChargeFirst.ChargeFirstGetInfoReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.ChargeFirst.ChargeFirstGetInfoReq}
 */
proto.PbModel.ChargeFirst.ChargeFirstGetInfoReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.ChargeFirst.ChargeFirstGetInfoReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.ChargeFirst.ChargeFirstGetInfoReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.ChargeFirst.ChargeFirstGetInfoReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.ChargeFirst.ChargeFirstGetInfoReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.ChargeFirst.ChargeFirstGetInfoRes.repeatedFields_ = [2,3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.ChargeFirst.ChargeFirstGetInfoRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.ChargeFirst.ChargeFirstGetInfoRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.ChargeFirst.ChargeFirstGetInfoRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.ChargeFirst.ChargeFirstGetInfoRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    chargenum: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    chargenumlistList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 2)) == null ? undefined : f,
    drawnuminfolistList: jspb.Message.toObjectList(msg.getDrawnuminfolistList(),
    proto.PbModel.ChargeFirst.ChargeFirstDrawNumInfo.toObject, includeInstance),
    chargefirstconfiglistList: jspb.Message.toObjectList(msg.getChargefirstconfiglistList(),
    proto.PbModel.ChargeFirst.ChargeFirstConfig.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.ChargeFirst.ChargeFirstGetInfoRes}
 */
proto.PbModel.ChargeFirst.ChargeFirstGetInfoRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.ChargeFirst.ChargeFirstGetInfoRes;
  return proto.PbModel.ChargeFirst.ChargeFirstGetInfoRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.ChargeFirst.ChargeFirstGetInfoRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.ChargeFirst.ChargeFirstGetInfoRes}
 */
proto.PbModel.ChargeFirst.ChargeFirstGetInfoRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setChargenum(value);
      break;
    case 2:
      var value = /** @type {!Array<number>} */ (reader.readPackedDouble());
      msg.setChargenumlistList(value);
      break;
    case 3:
      var value = new proto.PbModel.ChargeFirst.ChargeFirstDrawNumInfo;
      reader.readMessage(value,proto.PbModel.ChargeFirst.ChargeFirstDrawNumInfo.deserializeBinaryFromReader);
      msg.addDrawnuminfolist(value);
      break;
    case 4:
      var value = new proto.PbModel.ChargeFirst.ChargeFirstConfig;
      reader.readMessage(value,proto.PbModel.ChargeFirst.ChargeFirstConfig.deserializeBinaryFromReader);
      msg.addChargefirstconfiglist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.ChargeFirst.ChargeFirstGetInfoRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.ChargeFirst.ChargeFirstGetInfoRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.ChargeFirst.ChargeFirstGetInfoRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.ChargeFirst.ChargeFirstGetInfoRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChargenum();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getChargenumlistList();
  if (f.length > 0) {
    writer.writePackedDouble(
      2,
      f
    );
  }
  f = message.getDrawnuminfolistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.PbModel.ChargeFirst.ChargeFirstDrawNumInfo.serializeBinaryToWriter
    );
  }
  f = message.getChargefirstconfiglistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.PbModel.ChargeFirst.ChargeFirstConfig.serializeBinaryToWriter
    );
  }
};


/**
 * optional double ChargeNum = 1;
 * @return {number}
 */
proto.PbModel.ChargeFirst.ChargeFirstGetInfoRes.prototype.getChargenum = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.ChargeFirst.ChargeFirstGetInfoRes} returns this
 */
proto.PbModel.ChargeFirst.ChargeFirstGetInfoRes.prototype.setChargenum = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * repeated double ChargeNumList = 2;
 * @return {!Array<number>}
 */
proto.PbModel.ChargeFirst.ChargeFirstGetInfoRes.prototype.getChargenumlistList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.PbModel.ChargeFirst.ChargeFirstGetInfoRes} returns this
 */
proto.PbModel.ChargeFirst.ChargeFirstGetInfoRes.prototype.setChargenumlistList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.PbModel.ChargeFirst.ChargeFirstGetInfoRes} returns this
 */
proto.PbModel.ChargeFirst.ChargeFirstGetInfoRes.prototype.addChargenumlist = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.ChargeFirst.ChargeFirstGetInfoRes} returns this
 */
proto.PbModel.ChargeFirst.ChargeFirstGetInfoRes.prototype.clearChargenumlistList = function() {
  return this.setChargenumlistList([]);
};


/**
 * repeated ChargeFirstDrawNumInfo DrawNumInfoList = 3;
 * @return {!Array<!proto.PbModel.ChargeFirst.ChargeFirstDrawNumInfo>}
 */
proto.PbModel.ChargeFirst.ChargeFirstGetInfoRes.prototype.getDrawnuminfolistList = function() {
  return /** @type{!Array<!proto.PbModel.ChargeFirst.ChargeFirstDrawNumInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.ChargeFirst.ChargeFirstDrawNumInfo, 3));
};


/**
 * @param {!Array<!proto.PbModel.ChargeFirst.ChargeFirstDrawNumInfo>} value
 * @return {!proto.PbModel.ChargeFirst.ChargeFirstGetInfoRes} returns this
*/
proto.PbModel.ChargeFirst.ChargeFirstGetInfoRes.prototype.setDrawnuminfolistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.PbModel.ChargeFirst.ChargeFirstDrawNumInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.ChargeFirst.ChargeFirstDrawNumInfo}
 */
proto.PbModel.ChargeFirst.ChargeFirstGetInfoRes.prototype.addDrawnuminfolist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.PbModel.ChargeFirst.ChargeFirstDrawNumInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.ChargeFirst.ChargeFirstGetInfoRes} returns this
 */
proto.PbModel.ChargeFirst.ChargeFirstGetInfoRes.prototype.clearDrawnuminfolistList = function() {
  return this.setDrawnuminfolistList([]);
};


/**
 * repeated ChargeFirstConfig ChargeFirstConfigList = 4;
 * @return {!Array<!proto.PbModel.ChargeFirst.ChargeFirstConfig>}
 */
proto.PbModel.ChargeFirst.ChargeFirstGetInfoRes.prototype.getChargefirstconfiglistList = function() {
  return /** @type{!Array<!proto.PbModel.ChargeFirst.ChargeFirstConfig>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.ChargeFirst.ChargeFirstConfig, 4));
};


/**
 * @param {!Array<!proto.PbModel.ChargeFirst.ChargeFirstConfig>} value
 * @return {!proto.PbModel.ChargeFirst.ChargeFirstGetInfoRes} returns this
*/
proto.PbModel.ChargeFirst.ChargeFirstGetInfoRes.prototype.setChargefirstconfiglistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.PbModel.ChargeFirst.ChargeFirstConfig=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.ChargeFirst.ChargeFirstConfig}
 */
proto.PbModel.ChargeFirst.ChargeFirstGetInfoRes.prototype.addChargefirstconfiglist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.PbModel.ChargeFirst.ChargeFirstConfig, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.ChargeFirst.ChargeFirstGetInfoRes} returns this
 */
proto.PbModel.ChargeFirst.ChargeFirstGetInfoRes.prototype.clearChargefirstconfiglistList = function() {
  return this.setChargefirstconfiglistList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.PbModel.ChargeFirst.ChargeFirstDrawNumInfo.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.ChargeFirst.ChargeFirstDrawNumInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.ChargeFirst.ChargeFirstDrawNumInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.ChargeFirst.ChargeFirstDrawNumInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.ChargeFirst.ChargeFirstDrawNumInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    num: jspb.Message.getFieldWithDefault(msg, 1, 0),
    drawnumdayinfolistList: jspb.Message.toObjectList(msg.getDrawnumdayinfolistList(),
    proto.PbModel.ChargeFirst.ChargeFirstDrawNumDayInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.ChargeFirst.ChargeFirstDrawNumInfo}
 */
proto.PbModel.ChargeFirst.ChargeFirstDrawNumInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.ChargeFirst.ChargeFirstDrawNumInfo;
  return proto.PbModel.ChargeFirst.ChargeFirstDrawNumInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.ChargeFirst.ChargeFirstDrawNumInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.ChargeFirst.ChargeFirstDrawNumInfo}
 */
proto.PbModel.ChargeFirst.ChargeFirstDrawNumInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNum(value);
      break;
    case 2:
      var value = new proto.PbModel.ChargeFirst.ChargeFirstDrawNumDayInfo;
      reader.readMessage(value,proto.PbModel.ChargeFirst.ChargeFirstDrawNumDayInfo.deserializeBinaryFromReader);
      msg.addDrawnumdayinfolist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.ChargeFirst.ChargeFirstDrawNumInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.ChargeFirst.ChargeFirstDrawNumInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.ChargeFirst.ChargeFirstDrawNumInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.ChargeFirst.ChargeFirstDrawNumInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNum();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getDrawnumdayinfolistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.PbModel.ChargeFirst.ChargeFirstDrawNumDayInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 Num = 1;
 * @return {number}
 */
proto.PbModel.ChargeFirst.ChargeFirstDrawNumInfo.prototype.getNum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.ChargeFirst.ChargeFirstDrawNumInfo} returns this
 */
proto.PbModel.ChargeFirst.ChargeFirstDrawNumInfo.prototype.setNum = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated ChargeFirstDrawNumDayInfo DrawNumDayInfoList = 2;
 * @return {!Array<!proto.PbModel.ChargeFirst.ChargeFirstDrawNumDayInfo>}
 */
proto.PbModel.ChargeFirst.ChargeFirstDrawNumInfo.prototype.getDrawnumdayinfolistList = function() {
  return /** @type{!Array<!proto.PbModel.ChargeFirst.ChargeFirstDrawNumDayInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.PbModel.ChargeFirst.ChargeFirstDrawNumDayInfo, 2));
};


/**
 * @param {!Array<!proto.PbModel.ChargeFirst.ChargeFirstDrawNumDayInfo>} value
 * @return {!proto.PbModel.ChargeFirst.ChargeFirstDrawNumInfo} returns this
*/
proto.PbModel.ChargeFirst.ChargeFirstDrawNumInfo.prototype.setDrawnumdayinfolistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.PbModel.ChargeFirst.ChargeFirstDrawNumDayInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.PbModel.ChargeFirst.ChargeFirstDrawNumDayInfo}
 */
proto.PbModel.ChargeFirst.ChargeFirstDrawNumInfo.prototype.addDrawnumdayinfolist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.PbModel.ChargeFirst.ChargeFirstDrawNumDayInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.PbModel.ChargeFirst.ChargeFirstDrawNumInfo} returns this
 */
proto.PbModel.ChargeFirst.ChargeFirstDrawNumInfo.prototype.clearDrawnumdayinfolistList = function() {
  return this.setDrawnumdayinfolistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.ChargeFirst.ChargeFirstDrawNumDayInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.ChargeFirst.ChargeFirstDrawNumDayInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.ChargeFirst.ChargeFirstDrawNumDayInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.ChargeFirst.ChargeFirstDrawNumDayInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    daynum: jspb.Message.getFieldWithDefault(msg, 1, 0),
    lastdrawtime: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.ChargeFirst.ChargeFirstDrawNumDayInfo}
 */
proto.PbModel.ChargeFirst.ChargeFirstDrawNumDayInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.ChargeFirst.ChargeFirstDrawNumDayInfo;
  return proto.PbModel.ChargeFirst.ChargeFirstDrawNumDayInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.ChargeFirst.ChargeFirstDrawNumDayInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.ChargeFirst.ChargeFirstDrawNumDayInfo}
 */
proto.PbModel.ChargeFirst.ChargeFirstDrawNumDayInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDaynum(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLastdrawtime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.ChargeFirst.ChargeFirstDrawNumDayInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.ChargeFirst.ChargeFirstDrawNumDayInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.ChargeFirst.ChargeFirstDrawNumDayInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.ChargeFirst.ChargeFirstDrawNumDayInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDaynum();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getLastdrawtime();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional int32 DayNum = 1;
 * @return {number}
 */
proto.PbModel.ChargeFirst.ChargeFirstDrawNumDayInfo.prototype.getDaynum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.ChargeFirst.ChargeFirstDrawNumDayInfo} returns this
 */
proto.PbModel.ChargeFirst.ChargeFirstDrawNumDayInfo.prototype.setDaynum = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 LastDrawTime = 2;
 * @return {number}
 */
proto.PbModel.ChargeFirst.ChargeFirstDrawNumDayInfo.prototype.getLastdrawtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.ChargeFirst.ChargeFirstDrawNumDayInfo} returns this
 */
proto.PbModel.ChargeFirst.ChargeFirstDrawNumDayInfo.prototype.setLastdrawtime = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.ChargeFirst.ChargeFirstConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.ChargeFirst.ChargeFirstConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.ChargeFirst.ChargeFirstConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.ChargeFirst.ChargeFirstConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    num: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    productid: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.ChargeFirst.ChargeFirstConfig}
 */
proto.PbModel.ChargeFirst.ChargeFirstConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.ChargeFirst.ChargeFirstConfig;
  return proto.PbModel.ChargeFirst.ChargeFirstConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.ChargeFirst.ChargeFirstConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.ChargeFirst.ChargeFirstConfig}
 */
proto.PbModel.ChargeFirst.ChargeFirstConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setNum(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.ChargeFirst.ChargeFirstConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.ChargeFirst.ChargeFirstConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.ChargeFirst.ChargeFirstConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.ChargeFirst.ChargeFirstConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNum();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getProductid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional double Num = 1;
 * @return {number}
 */
proto.PbModel.ChargeFirst.ChargeFirstConfig.prototype.getNum = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.ChargeFirst.ChargeFirstConfig} returns this
 */
proto.PbModel.ChargeFirst.ChargeFirstConfig.prototype.setNum = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional string ProductId = 2;
 * @return {string}
 */
proto.PbModel.ChargeFirst.ChargeFirstConfig.prototype.getProductid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.ChargeFirst.ChargeFirstConfig} returns this
 */
proto.PbModel.ChargeFirst.ChargeFirstConfig.prototype.setProductid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.ChargeFirst.ChargeFirstPushChargeBoxInfoRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.ChargeFirst.ChargeFirstPushChargeBoxInfoRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.ChargeFirst.ChargeFirstPushChargeBoxInfoRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.ChargeFirst.ChargeFirstPushChargeBoxInfoRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    iscomplete: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.ChargeFirst.ChargeFirstPushChargeBoxInfoRes}
 */
proto.PbModel.ChargeFirst.ChargeFirstPushChargeBoxInfoRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.ChargeFirst.ChargeFirstPushChargeBoxInfoRes;
  return proto.PbModel.ChargeFirst.ChargeFirstPushChargeBoxInfoRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.ChargeFirst.ChargeFirstPushChargeBoxInfoRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.ChargeFirst.ChargeFirstPushChargeBoxInfoRes}
 */
proto.PbModel.ChargeFirst.ChargeFirstPushChargeBoxInfoRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIscomplete(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.ChargeFirst.ChargeFirstPushChargeBoxInfoRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.ChargeFirst.ChargeFirstPushChargeBoxInfoRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.ChargeFirst.ChargeFirstPushChargeBoxInfoRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.ChargeFirst.ChargeFirstPushChargeBoxInfoRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIscomplete();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool IsComplete = 1;
 * @return {boolean}
 */
proto.PbModel.ChargeFirst.ChargeFirstPushChargeBoxInfoRes.prototype.getIscomplete = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.PbModel.ChargeFirst.ChargeFirstPushChargeBoxInfoRes} returns this
 */
proto.PbModel.ChargeFirst.ChargeFirstPushChargeBoxInfoRes.prototype.setIscomplete = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


goog.object.extend(exports, proto.PbModel.ChargeFirst);
