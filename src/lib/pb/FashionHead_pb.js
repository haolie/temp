// source: FashionHead.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.PbModel.FashionHead.FashionHeadActivationReq', null, global);
goog.exportSymbol('proto.PbModel.FashionHead.FashionHeadActivationRes', null, global);
goog.exportSymbol('proto.PbModel.FashionHead.FashionHeadInfo', null, global);
goog.exportSymbol('proto.PbModel.FashionHead.FashionHeadPushChangeInfoRes', null, global);
goog.exportSymbol('proto.PbModel.FashionHead.FashionHeadSetAvatarReq', null, global);
goog.exportSymbol('proto.PbModel.FashionHead.FashionHeadSetAvatarRes', null, global);
goog.exportSymbol('proto.PbModel.FashionHead.FashionHeadWearInfo', null, global);
goog.exportSymbol('proto.PbModel.FashionHead.FashionHeadWearReq', null, global);
goog.exportSymbol('proto.PbModel.FashionHead.FashionHeadWearRes', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.FashionHead.FashionHeadActivationReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.FashionHead.FashionHeadActivationReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.FashionHead.FashionHeadActivationReq.displayName = 'proto.PbModel.FashionHead.FashionHeadActivationReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.FashionHead.FashionHeadActivationRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.FashionHead.FashionHeadActivationRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.FashionHead.FashionHeadActivationRes.displayName = 'proto.PbModel.FashionHead.FashionHeadActivationRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.FashionHead.FashionHeadInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.FashionHead.FashionHeadInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.FashionHead.FashionHeadInfo.displayName = 'proto.PbModel.FashionHead.FashionHeadInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.FashionHead.FashionHeadWearInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.FashionHead.FashionHeadWearInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.FashionHead.FashionHeadWearInfo.displayName = 'proto.PbModel.FashionHead.FashionHeadWearInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.FashionHead.FashionHeadSetAvatarReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.FashionHead.FashionHeadSetAvatarReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.FashionHead.FashionHeadSetAvatarReq.displayName = 'proto.PbModel.FashionHead.FashionHeadSetAvatarReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.FashionHead.FashionHeadSetAvatarRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.FashionHead.FashionHeadSetAvatarRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.FashionHead.FashionHeadSetAvatarRes.displayName = 'proto.PbModel.FashionHead.FashionHeadSetAvatarRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.FashionHead.FashionHeadWearReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.FashionHead.FashionHeadWearReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.FashionHead.FashionHeadWearReq.displayName = 'proto.PbModel.FashionHead.FashionHeadWearReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.FashionHead.FashionHeadWearRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.FashionHead.FashionHeadWearRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.FashionHead.FashionHeadWearRes.displayName = 'proto.PbModel.FashionHead.FashionHeadWearRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PbModel.FashionHead.FashionHeadPushChangeInfoRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PbModel.FashionHead.FashionHeadPushChangeInfoRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.PbModel.FashionHead.FashionHeadPushChangeInfoRes.displayName = 'proto.PbModel.FashionHead.FashionHeadPushChangeInfoRes';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.FashionHead.FashionHeadActivationReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.FashionHead.FashionHeadActivationReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.FashionHead.FashionHeadActivationReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.FashionHead.FashionHeadActivationReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    modelid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.FashionHead.FashionHeadActivationReq}
 */
proto.PbModel.FashionHead.FashionHeadActivationReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.FashionHead.FashionHeadActivationReq;
  return proto.PbModel.FashionHead.FashionHeadActivationReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.FashionHead.FashionHeadActivationReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.FashionHead.FashionHeadActivationReq}
 */
proto.PbModel.FashionHead.FashionHeadActivationReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setModelid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.FashionHead.FashionHeadActivationReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.FashionHead.FashionHeadActivationReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.FashionHead.FashionHeadActivationReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.FashionHead.FashionHeadActivationReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getModelid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 ModelId = 1;
 * @return {number}
 */
proto.PbModel.FashionHead.FashionHeadActivationReq.prototype.getModelid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.FashionHead.FashionHeadActivationReq} returns this
 */
proto.PbModel.FashionHead.FashionHeadActivationReq.prototype.setModelid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.FashionHead.FashionHeadActivationRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.FashionHead.FashionHeadActivationRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.FashionHead.FashionHeadActivationRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.FashionHead.FashionHeadActivationRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    info: (f = msg.getInfo()) && proto.PbModel.FashionHead.FashionHeadInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.FashionHead.FashionHeadActivationRes}
 */
proto.PbModel.FashionHead.FashionHeadActivationRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.FashionHead.FashionHeadActivationRes;
  return proto.PbModel.FashionHead.FashionHeadActivationRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.FashionHead.FashionHeadActivationRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.FashionHead.FashionHeadActivationRes}
 */
proto.PbModel.FashionHead.FashionHeadActivationRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PbModel.FashionHead.FashionHeadInfo;
      reader.readMessage(value,proto.PbModel.FashionHead.FashionHeadInfo.deserializeBinaryFromReader);
      msg.setInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.FashionHead.FashionHeadActivationRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.FashionHead.FashionHeadActivationRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.FashionHead.FashionHeadActivationRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.FashionHead.FashionHeadActivationRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.PbModel.FashionHead.FashionHeadInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional FashionHeadInfo Info = 1;
 * @return {?proto.PbModel.FashionHead.FashionHeadInfo}
 */
proto.PbModel.FashionHead.FashionHeadActivationRes.prototype.getInfo = function() {
  return /** @type{?proto.PbModel.FashionHead.FashionHeadInfo} */ (
    jspb.Message.getWrapperField(this, proto.PbModel.FashionHead.FashionHeadInfo, 1));
};


/**
 * @param {?proto.PbModel.FashionHead.FashionHeadInfo|undefined} value
 * @return {!proto.PbModel.FashionHead.FashionHeadActivationRes} returns this
*/
proto.PbModel.FashionHead.FashionHeadActivationRes.prototype.setInfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.FashionHead.FashionHeadActivationRes} returns this
 */
proto.PbModel.FashionHead.FashionHeadActivationRes.prototype.clearInfo = function() {
  return this.setInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.FashionHead.FashionHeadActivationRes.prototype.hasInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.FashionHead.FashionHeadInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.FashionHead.FashionHeadInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.FashionHead.FashionHeadInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.FashionHead.FashionHeadInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    modelid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    avatarurl: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.FashionHead.FashionHeadInfo}
 */
proto.PbModel.FashionHead.FashionHeadInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.FashionHead.FashionHeadInfo;
  return proto.PbModel.FashionHead.FashionHeadInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.FashionHead.FashionHeadInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.FashionHead.FashionHeadInfo}
 */
proto.PbModel.FashionHead.FashionHeadInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setModelid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAvatarurl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.FashionHead.FashionHeadInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.FashionHead.FashionHeadInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.FashionHead.FashionHeadInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.FashionHead.FashionHeadInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getModelid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getAvatarurl();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 ModelId = 1;
 * @return {number}
 */
proto.PbModel.FashionHead.FashionHeadInfo.prototype.getModelid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.FashionHead.FashionHeadInfo} returns this
 */
proto.PbModel.FashionHead.FashionHeadInfo.prototype.setModelid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string AvatarUrl = 2;
 * @return {string}
 */
proto.PbModel.FashionHead.FashionHeadInfo.prototype.getAvatarurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.FashionHead.FashionHeadInfo} returns this
 */
proto.PbModel.FashionHead.FashionHeadInfo.prototype.setAvatarurl = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.FashionHead.FashionHeadWearInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.FashionHead.FashionHeadWearInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.FashionHead.FashionHeadWearInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.FashionHead.FashionHeadWearInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    wearfashionheadid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    headavatarurl: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.FashionHead.FashionHeadWearInfo}
 */
proto.PbModel.FashionHead.FashionHeadWearInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.FashionHead.FashionHeadWearInfo;
  return proto.PbModel.FashionHead.FashionHeadWearInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.FashionHead.FashionHeadWearInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.FashionHead.FashionHeadWearInfo}
 */
proto.PbModel.FashionHead.FashionHeadWearInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWearfashionheadid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHeadavatarurl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.FashionHead.FashionHeadWearInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.FashionHead.FashionHeadWearInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.FashionHead.FashionHeadWearInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.FashionHead.FashionHeadWearInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWearfashionheadid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getHeadavatarurl();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 WearFashionHeadId = 1;
 * @return {number}
 */
proto.PbModel.FashionHead.FashionHeadWearInfo.prototype.getWearfashionheadid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.FashionHead.FashionHeadWearInfo} returns this
 */
proto.PbModel.FashionHead.FashionHeadWearInfo.prototype.setWearfashionheadid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string HeadAvatarUrl = 2;
 * @return {string}
 */
proto.PbModel.FashionHead.FashionHeadWearInfo.prototype.getHeadavatarurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.FashionHead.FashionHeadWearInfo} returns this
 */
proto.PbModel.FashionHead.FashionHeadWearInfo.prototype.setHeadavatarurl = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.FashionHead.FashionHeadSetAvatarReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.FashionHead.FashionHeadSetAvatarReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.FashionHead.FashionHeadSetAvatarReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.FashionHead.FashionHeadSetAvatarReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    url: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.FashionHead.FashionHeadSetAvatarReq}
 */
proto.PbModel.FashionHead.FashionHeadSetAvatarReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.FashionHead.FashionHeadSetAvatarReq;
  return proto.PbModel.FashionHead.FashionHeadSetAvatarReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.FashionHead.FashionHeadSetAvatarReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.FashionHead.FashionHeadSetAvatarReq}
 */
proto.PbModel.FashionHead.FashionHeadSetAvatarReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.FashionHead.FashionHeadSetAvatarReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.FashionHead.FashionHeadSetAvatarReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.FashionHead.FashionHeadSetAvatarReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.FashionHead.FashionHeadSetAvatarReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string Url = 1;
 * @return {string}
 */
proto.PbModel.FashionHead.FashionHeadSetAvatarReq.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.PbModel.FashionHead.FashionHeadSetAvatarReq} returns this
 */
proto.PbModel.FashionHead.FashionHeadSetAvatarReq.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.FashionHead.FashionHeadSetAvatarRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.FashionHead.FashionHeadSetAvatarRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.FashionHead.FashionHeadSetAvatarRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.FashionHead.FashionHeadSetAvatarRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    info: (f = msg.getInfo()) && proto.PbModel.FashionHead.FashionHeadInfo.toObject(includeInstance, f),
    wearfashionheadid: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.FashionHead.FashionHeadSetAvatarRes}
 */
proto.PbModel.FashionHead.FashionHeadSetAvatarRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.FashionHead.FashionHeadSetAvatarRes;
  return proto.PbModel.FashionHead.FashionHeadSetAvatarRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.FashionHead.FashionHeadSetAvatarRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.FashionHead.FashionHeadSetAvatarRes}
 */
proto.PbModel.FashionHead.FashionHeadSetAvatarRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PbModel.FashionHead.FashionHeadInfo;
      reader.readMessage(value,proto.PbModel.FashionHead.FashionHeadInfo.deserializeBinaryFromReader);
      msg.setInfo(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWearfashionheadid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.FashionHead.FashionHeadSetAvatarRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.FashionHead.FashionHeadSetAvatarRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.FashionHead.FashionHeadSetAvatarRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.FashionHead.FashionHeadSetAvatarRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.PbModel.FashionHead.FashionHeadInfo.serializeBinaryToWriter
    );
  }
  f = message.getWearfashionheadid();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional FashionHeadInfo Info = 1;
 * @return {?proto.PbModel.FashionHead.FashionHeadInfo}
 */
proto.PbModel.FashionHead.FashionHeadSetAvatarRes.prototype.getInfo = function() {
  return /** @type{?proto.PbModel.FashionHead.FashionHeadInfo} */ (
    jspb.Message.getWrapperField(this, proto.PbModel.FashionHead.FashionHeadInfo, 1));
};


/**
 * @param {?proto.PbModel.FashionHead.FashionHeadInfo|undefined} value
 * @return {!proto.PbModel.FashionHead.FashionHeadSetAvatarRes} returns this
*/
proto.PbModel.FashionHead.FashionHeadSetAvatarRes.prototype.setInfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.FashionHead.FashionHeadSetAvatarRes} returns this
 */
proto.PbModel.FashionHead.FashionHeadSetAvatarRes.prototype.clearInfo = function() {
  return this.setInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.FashionHead.FashionHeadSetAvatarRes.prototype.hasInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 WearFashionHeadId = 2;
 * @return {number}
 */
proto.PbModel.FashionHead.FashionHeadSetAvatarRes.prototype.getWearfashionheadid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.FashionHead.FashionHeadSetAvatarRes} returns this
 */
proto.PbModel.FashionHead.FashionHeadSetAvatarRes.prototype.setWearfashionheadid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.FashionHead.FashionHeadWearReq.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.FashionHead.FashionHeadWearReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.FashionHead.FashionHeadWearReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.FashionHead.FashionHeadWearReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    modelid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.FashionHead.FashionHeadWearReq}
 */
proto.PbModel.FashionHead.FashionHeadWearReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.FashionHead.FashionHeadWearReq;
  return proto.PbModel.FashionHead.FashionHeadWearReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.FashionHead.FashionHeadWearReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.FashionHead.FashionHeadWearReq}
 */
proto.PbModel.FashionHead.FashionHeadWearReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setModelid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.FashionHead.FashionHeadWearReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.FashionHead.FashionHeadWearReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.FashionHead.FashionHeadWearReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.FashionHead.FashionHeadWearReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getModelid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 ModelId = 1;
 * @return {number}
 */
proto.PbModel.FashionHead.FashionHeadWearReq.prototype.getModelid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.FashionHead.FashionHeadWearReq} returns this
 */
proto.PbModel.FashionHead.FashionHeadWearReq.prototype.setModelid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.FashionHead.FashionHeadWearRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.FashionHead.FashionHeadWearRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.FashionHead.FashionHeadWearRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.FashionHead.FashionHeadWearRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    modelid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.FashionHead.FashionHeadWearRes}
 */
proto.PbModel.FashionHead.FashionHeadWearRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.FashionHead.FashionHeadWearRes;
  return proto.PbModel.FashionHead.FashionHeadWearRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.FashionHead.FashionHeadWearRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.FashionHead.FashionHeadWearRes}
 */
proto.PbModel.FashionHead.FashionHeadWearRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setModelid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.FashionHead.FashionHeadWearRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.FashionHead.FashionHeadWearRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.FashionHead.FashionHeadWearRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.FashionHead.FashionHeadWearRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getModelid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 ModelId = 1;
 * @return {number}
 */
proto.PbModel.FashionHead.FashionHeadWearRes.prototype.getModelid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.PbModel.FashionHead.FashionHeadWearRes} returns this
 */
proto.PbModel.FashionHead.FashionHeadWearRes.prototype.setModelid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PbModel.FashionHead.FashionHeadPushChangeInfoRes.prototype.toObject = function(opt_includeInstance) {
  return proto.PbModel.FashionHead.FashionHeadPushChangeInfoRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PbModel.FashionHead.FashionHeadPushChangeInfoRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.FashionHead.FashionHeadPushChangeInfoRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    info: (f = msg.getInfo()) && proto.PbModel.FashionHead.FashionHeadInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PbModel.FashionHead.FashionHeadPushChangeInfoRes}
 */
proto.PbModel.FashionHead.FashionHeadPushChangeInfoRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PbModel.FashionHead.FashionHeadPushChangeInfoRes;
  return proto.PbModel.FashionHead.FashionHeadPushChangeInfoRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PbModel.FashionHead.FashionHeadPushChangeInfoRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PbModel.FashionHead.FashionHeadPushChangeInfoRes}
 */
proto.PbModel.FashionHead.FashionHeadPushChangeInfoRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.PbModel.FashionHead.FashionHeadInfo;
      reader.readMessage(value,proto.PbModel.FashionHead.FashionHeadInfo.deserializeBinaryFromReader);
      msg.setInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PbModel.FashionHead.FashionHeadPushChangeInfoRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PbModel.FashionHead.FashionHeadPushChangeInfoRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PbModel.FashionHead.FashionHeadPushChangeInfoRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PbModel.FashionHead.FashionHeadPushChangeInfoRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.PbModel.FashionHead.FashionHeadInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional FashionHeadInfo Info = 1;
 * @return {?proto.PbModel.FashionHead.FashionHeadInfo}
 */
proto.PbModel.FashionHead.FashionHeadPushChangeInfoRes.prototype.getInfo = function() {
  return /** @type{?proto.PbModel.FashionHead.FashionHeadInfo} */ (
    jspb.Message.getWrapperField(this, proto.PbModel.FashionHead.FashionHeadInfo, 1));
};


/**
 * @param {?proto.PbModel.FashionHead.FashionHeadInfo|undefined} value
 * @return {!proto.PbModel.FashionHead.FashionHeadPushChangeInfoRes} returns this
*/
proto.PbModel.FashionHead.FashionHeadPushChangeInfoRes.prototype.setInfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.PbModel.FashionHead.FashionHeadPushChangeInfoRes} returns this
 */
proto.PbModel.FashionHead.FashionHeadPushChangeInfoRes.prototype.clearInfo = function() {
  return this.setInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.PbModel.FashionHead.FashionHeadPushChangeInfoRes.prototype.hasInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


goog.object.extend(exports, proto.PbModel.FashionHead);
